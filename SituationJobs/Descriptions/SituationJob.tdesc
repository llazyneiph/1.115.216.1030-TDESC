<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_job" class="SituationJob" module="situations.situation_job" muid="8C95B75415101C7E" instance_needs_reference="True" instance_subclasses_only="False" path="SituationJobs\Descriptions" use_guid_for_reference="True">
        <Tunable type="bool" name="accept_looking_for_more_work" class="Tunable" default="False" display="Accept Looking For More Work" muid="A491BAE8D060B6F2" description="If checked will allow instanced Sims to be assigned this job&#xA;if those Sims have declared themselves to be looking for new&#xA;work.  This will overrule any exclusivity rules in place.&#xA;&#xA;NOTE: YOU PROBABLY WANT TO LEAVE THIS AS UNCHECKED.  PLEASE&#xA;CONSULT A GPE IF YOU PLAN ON TUNING IT." Deprecated="False" filter="0" group="Sim Auto Invite" />

        <Tunable type="sim_filter" name="additional_filter_for_user_selection" class="TunableReference" display="Additional Filter For User Selection" muid="222C47BE90E44EC2" description="An additional filter that will run for the situation job if&#xA;there should be specific additional requirements for selecting&#xA;specific sims for the role rather than hiring them.&#xA;&#xA;Will be or'd with any filters in additional filter list for user selection" tuning_state="NeedsTuning" allow_none="True" Deprecated="False" filter="0" group="General" />

        <TunableList name="additional_filter_list_for_user_selection" class="TunableList" display="Additional Filter List For User Selection" muid="809CF2EF2863FA14" description="List of additional filters that will run for the situation job if&#xA;there should be specific additional requirements for selecting&#xA;specific sims for the role rather than hiring them.&#xA;Sims only need to pass one of the filters.&#xA;&#xA;Will be or'd with any filter in additional filter for user selection" Deprecated="False" filter="0" group="General">
            <Tunable type="sim_filter" class="TunableReference" muid="E7CB9B0FF71BA881" description="An additional filter that will run for the situation job if&#xA;there should be specific additional requirements for selecting&#xA;specific sims for the role rather than hiring them." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <Tunable type="bool" name="allow_on_home_lot" class="Tunable" default="False" display="Allow On Home Lot" muid="68C42BFD05BD4D9" description="Allow sims that live on current lot to be used for walkby, hired, ar autofill jobs." Deprecated="False" filter="0" group="General" />

        <Tunable type="bool" name="apply_weather_based_uniform" class="Tunable" default="True" display="Apply Weather Based Uniform" muid="84EF936594725F56" description="If set (default), will apply weather based uniform.&#xA;Only applied if no job_uniform tuned." Deprecated="False" filter="0" group="General" />

        <TunableList name="blacklist_info" class="TunableList" display="Blacklist Info" muid="A9B6029ACAC9A8A" description="Allows a sim to be blacklisted from being available for future jobs&#xA;for the specified duration and job type(s)." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="7991F0775D88BA16" Deprecated="False" filter="0" group="General">
                <TunableEnum type="Tag" name="blacklist_tag" class="TunableEnumEntry" default="INVALID" display="Blacklist Tag" muid="165E4B131BC57838" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="When a Sim is removed from a situation, they are added to the&#xA;blacklist with this tag. This allows a sim to be blacklisted&#xA;for some job types, but not others." Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="blacklist_time" class="Tunable" default="8" display="Blacklist Time" muid="129391C55874B170" description="When a Sim is removed from a situation, they are added to the&#xA;blacklist for this time duration in hours." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Tunable type="ResourceKey" name="border_image" class="TunableResourceKey" default="None" display="Border Image" muid="E9743D83FA002112" description="Border to be displayed for the job of the sim." allow_none="True" Deprecated="False" filter="0" group="UI" resource_types="0x2f7d0004" />

        <Tunable type="bool" name="can_be_hired" class="Tunable" default="True" display="Can Be Hired" muid="2159EADB66F950B0" description="This job can be hired." Deprecated="False" filter="0" group="General" />

        <TunableVariant type="None" name="cell_enabled_tests" class="OptionalTunable" default="disabled" display="Cell Enabled Tests" muid="FC81F2E63CE3D920" description="Test to see if the cell from a Situation Sim Picker being opened from Role Slotter in Situation Creation&#xA;UI should be enabled or not.&#xA;If it does not pass, it will disable the cell and optionally override the tooltip. If it fails on a test&#xA;with no tooltip tuned, the Relationship tooltip may show. &#xA;This will only apply to Sims who pass the Sim Filter.&#xA;The actor is the Sim getting the job and the target the requesting Sim; tokens for the tooltip will&#xA;match that (ex: {0.SimFirstName} as actor, {1.SimFirstName} as target)." Deprecated="False" filter="0" group="Picker Tuning">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4235C7B893208C6A" />
            <TdescFragTag name="enabled" class="TunableTestSetWithTooltip" display="Enabled" muid="FA350C9BA68D035D" description="A list of tests groups.  At least one must pass all its sub-&#xA;tests to pass the TestSet.&#xA;&#xA;ORs of ANDs" filter="0" group="General" />
        </TunableVariant>

        <TunableVariant type="None" name="churn" class="OptionalTunable" default="disabled" display="Sim Churn" muid="C005BA91298981CD" description="!!!DEPRECATED!!!&#xA;Please use zone director functionality to provide the same&#xA;results.&#xA;&#xA;If enabled, produces churn or turnover&#xA;in the sims holding this job. Periodically sims in the job will leave&#xA;the lot and other sims will come to fill the job. &#xA;&#xA;When a situation is first started it will automatically invite a&#xA;number of sims appropriate for the time of day. This supercedes&#xA;sim_auto_invite.&#xA;&#xA;This is primarily for commercial venue customers.&#xA;This is NOT compatible with Sim Shifts." Deprecated="False" filter="0" group="XXX Deprecated">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="447B034D81EE7871" />
            <TunableTuple name="enabled" class="TunableSituationJobChurn" display="Enabled" muid="11A16F27114812B9" Deprecated="False" filter="0" group="General">
                <TunableList name="auto_populate_by_time_of_day" class="TunableMapping" display="Auto Populate By Time Of Day" muid="CEB3729EEF9E1CC4" mapping_key="beginning_hour" mapping_value="desired_population" description="Each entry in the map has two columns.&#xA;The first column is the hour of the day (0-24) &#xA;that this entry begins to control the number of sims in the job.&#xA;The second column is the minimum and maximum desired number&#xA;of sims.&#xA;The entry with starting hour that is closest to, but before&#xA;the current hour will be chosen.&#xA;&#xA;Given this tuning: &#xA;    beginning_hour        desired_population&#xA;    6                     1-3&#xA;    10                    3-5&#xA;    14                    5-7&#xA;    20                    7-9&#xA;    &#xA;if the hour is 11, beginning_hour will be 10 and desired is 3-5.&#xA;if the hour is 19, beginning_hour will be 14 and desired is 5-7.&#xA;if the hour is 23, beginning_hour will be 20 and desired is 7-9.&#xA;if the hour is 2, beginning_hour will be 20 and desired is 7-9. (uses 20 tuning because it is not 6 yet)&#xA;&#xA;The entries will be automatically sorted by time on load, so you&#xA;don't have to put them in order (but that would be nutty)" Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="9A4D7F3896FE53D" Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="beginning_hour" class="Tunable" default="0" display="Beginning Hour" muid="6041FF7D620C95A1" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="desired_population" class="TunableInterval" display="Desired Population" muid="6CB14153D1349A55" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="434486807996A5FC" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="upper_bound" class="TunableRange" default="0" display="Upper Bound" muid="A7313C032522EA1E" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                </TunableList>
                <Tunable type="int" name="chance_to_add_or_remove_sim" class="TunableRange" default="20" display="Chance To Add Or Remove Sim" muid="73C65017F898A12C" min="0" max="100" description="Periodically the churn system will re-evaluate the number of sims&#xA;currently in the job. If the number of sims is above or below&#xA;the range it will add/remove one sim as appropriate. &#xA;If the number of sims is within the tuned&#xA;range it will roll the dice to determine what it should do:&#xA;    nothing&#xA;    add a sim&#xA;    remove a sim&#xA;    &#xA;The chance tuned here (1-100) is the chance that it will do&#xA;something (add/remove), as opposed to nothing. &#xA;&#xA;When it is going to do something, the determination of &#xA;whether to add or remove is roughly 50/50 with additional&#xA;checks to stay within the range of desired sims and respect the&#xA;min duration." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <Tunable type="float" name="min_duration" class="TunableSimMinute" default="60" display="Min Duration" muid="B3AA2E01D7935BF6" min="None" max="None" description="Minimum amount of time a sim in this job will stay before they&#xA;might be churned out." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableVariant>

        <TunableList name="commodities" class="TunableList" display="Commodities" muid="89B6F44110A166C" description="Update the commodities on the sim that is assigned this job. These are applied only on&#xA;NPC sims since the tuning is forcing changes to statistics that have player facing effects.&#xA;&#xA;E.g. The students arrive at the lecture hall with the bored and sleepy commodities." Deprecated="False" filter="0" group="On Creation">
            <TunableVariant type="None" class="TunableStatisticChange" default="none" muid="84F4DB096542786B" description="A variant of statistic operations." Deprecated="False" filter="0" group="General">
                <Tunable name="none" class="TunableExistance" display="None" muid="2F3A45C9ED8FA05D" />
                <TunableTuple name="object_relationship_change" class="TunableStatisticAddObjectRelationship" display="Object Relationship Change" muid="989411CAD858883" description="Add to the object relationship score statistic for this Super Interaction." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="amount" class="Tunable" default="0" display="Amount" muid="1631EC5399D31D0A" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="4338511EFD2B6C2F" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="BE10ACCA762758BD" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="6A161B5178A7E7A5" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="BBD343FABB47637B" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="BE013AA756A9C7D0" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="ABFE7D9AF6EEEC0D" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="8FFD8438D19D7337" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39FFCA687B0C2495" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="703AED322BDCA4B0" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="BC4E98670E43C185" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="6694954634EA43B0" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8C6B2DAD193C59BE" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="EC8A4E1DE37C14D4" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="5C1C8568E0B4B89C" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="C4C3B03DF813CA8F" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="6E6D5E3E3116801A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="E7886CA4D237B6E2" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="EB0996938B436C" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="13DD4E3EB7B9FD13" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="8039E62AE86E7DD9" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="22528A9ADD005D4E" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="109B342D8EE3F61E" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectRelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="A205617DD2344C70" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="8DB1731422A33A61" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="2FAC2944C050FAEF" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="random_relationship_set" class="TunableRandomSimStatisticAddRelationship" display="Random Relationship Set" muid="6ECD91B480638665" description="Adds the relationship statistic score about an amount to a &#xA;random sim selected out of all the known sims for the Actor." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="add_track_if_not_present" class="Tunable" default="True" display="Add Track If Not Present" muid="18D401799D4EC724" description="When changing the value of a track, add the track if it's not already present.&#xA;False means if the track is not already present, the operation is skipped" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="amount" class="Tunable" default="0" display="Amount" muid="AE49DCBBCC4C794A" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="C16E5F21EAB84752" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="86A67F1C20AA3FF0" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="6CC6CFCE6788082B" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="CEBB18F04A60CB7F" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="C524D2C13494C088" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="8D0A0D57894D1FAF" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="create_sim_if_no_results" class="OptionalTunable" default="disabled" display="Create Sim If No Results" muid="37AD2A8EE819340B" description="If enabled, will result in a new Sim Info being created to meet&#xA;the conditions of the supplied Sim Template." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6E12B7EF0808028" />
                        <Tunable type="sim_filter" name="enabled" class="TunableReference" display="Enabled" muid="8A4BAB8B1E7C6FC0" description="A reference to a Sim Filter to use to create a Sim.&#xA;                &#xA;This does not guarantee that the created Sim will pass&#xA;tests_on_random_sim. However the resulting sim will be used as&#xA;a valid result." allow_none="False" Deprecated="False" filter="0" group="General" restrict="TunableSimFilter" />
                    </TunableVariant>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="1529E3EBE6B6C8A0" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9106FFFC1B7B9F44" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="8F01A681EF3CFF16" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="2E6FD960B26D218C" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="loot_applied_notification" class="OptionalTunable" default="disabled" display="Loot Applied Notification" muid="680AB9DFB1B64CF9" description="If enable the notification will be displayed passing the subject&#xA;and the random sim as tokens." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9F61A89CE4529ED" />
                        <TunableTuple name="enabled" class="TunableUiDialogNotification" display="Enabled" muid="662D2AF9A8E89C2F" description="Notification that will be shown when the loot is applied." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="additional_texts" class="OptionalTunable" default="disabled" display="Additional Texts" muid="570155E0FAC5F5E3" description="If enabled, add additional text to the dialog" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2824CA5C6B41D372" />
                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="9F3A4350479E6241" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="E153DC8C5C46344E" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableVariant>
                            <Tunable type="bool" name="anonymous_target_sim" class="Tunable" default="False" display="Anonymous Target Sim" muid="D38D1F16D98D1B11" description="DEPRECATED! Please use custom_mask_target_sim instead.&#xA;Use InGame/UI/Icons/Dialog/phone_anonymous_caller_icon.png and UI/Gameplay/Phone:UnknownCallerName.&#xA;&#xA;If this dialog is using a target sim id to give a conversation type view and this is checked, then the&#xA;target sim icon will instead be replaced by an anonymous caller." Deprecated="True" filter="0" group="General" />
                            <TunableVariant type="None" name="audio_sting" class="OptionalTunable" default="disabled" display="Audio Sting" muid="6C7E119B260D7B8C" description="If enabled, play an audio sting when the dialog is shown." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4484586850DA6BF" />
                                <TunableTuple name="enabled" class="TunablePlayAudio" display="Enabled" muid="581AEBA09CFAA073" Deprecated="False" filter="0" group="General">
                                    <Tunable type="ResourceKey" name="audio" class="TunableResourceKey" default="None" display="Audio" muid="3184B06C1310A022" description="The sound to play." Deprecated="False" filter="0" group="General" resource_types="0x39b2aa4a" />
                                    <Tunable type="bool" name="immediate_audio" class="Tunable" default="False" display="Immediate Audio" muid="203A3700628182C4" description="If checked, this audio will be triggered immediately, nothing&#xA;will block.&#xA;&#xA;ex. Earbuds audio will be played immediately while &#xA;the Sim is routing or animating." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="joint_name_hash" class="OptionalTunable" default="disabled" display="Joint Name Hash" muid="4E307C50D12BA535" description="Specify if the audio is attached to a slot and, if so, which&#xA;slot. Otherwise the audio will be attached to the object's &#xA;origin." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="212F1E306BE96415" />
                                        <Tunable type="str" name="enabled" class="TunableStringHash32" default="None" display="Enabled" muid="C048785F2BC629F0" description="The name of the slot this audio is attached to." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="play_on_active_sim_only" class="Tunable" default="False" display="Play On Active Sim Only" muid="82557270BD97344C" description="If enabled, and audio target is Sim, the audio will only be &#xA;played on selected Sim. Otherwise it will be played regardless &#xA;Sim is selected or not.&#xA;&#xA;If audio target is Object, always set this to False. Otherwise&#xA;the audio will never be played.&#xA;&#xA;ex. This will be useful for Earbuds where we want to hear the&#xA;music only when the Sim is selected." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="audio_sting_owner" class="OptionalTunable" default="disabled" display="Audio Sting Owner" muid="655CC465DE9D9F9" description="If enabled, this will set the owner of the audio sting when the&#xA;dialog is shown." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D856F3BA5EAD050C" />
                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="FA2534DC8354F817" static_entries="interactions.ParticipantType" description="The participant of the interaction who will play the audio_sting." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="UiDialogNotificationAutoDeleteReason" name="auto_delete_reason" class="TunableEnumEntry" default="NO_REASON" display="Auto Delete Reason" muid="2528B3856DF69E1E" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationAutoDeleteReason" description="Specify the notification's auto-delete reason." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="background_audio" class="OptionalTunable" default="disabled" display="Background Audio" muid="638C9CFB3C3D7E42" description="If enabled, play background audio while the dialog is open." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="93633B2CBF0C8459" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="2C04481275E8FB22" description="The background audio event string." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="background_image" class="OptionalTunable" default="disabled" display="Background Image" muid="8F4A76A6295F545B" description="If enabled, add a background image to the dialog.  This will only &#xA;be used in the case where dialog_bg_style is BG_DYNAMIC_IMAGE." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B56CD1DD66F6917" />
                                <Tunable type="ResourceKey" name="enabled" class="TunableResourceKey" default="None" display="Enabled" muid="125036D4A2355A48" description="The background image for the family portrait." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableVariant>
                            <TunableVariant type="None" name="custom_mask_target_sim" class="OptionalTunable" default="disabled" display="Custom Mask Target Sim" muid="A55C785DE057B614" description="When tuned, display the given icon/name for the target Sim instead of the Sim's actual icon/name." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FBA497346A41E93E" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6D686BDD03367CAE" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="alert_icon" class="OptionalTunable" default="disabled" display="Alert Icon" muid="214FD83E9ECDBE8C" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="98068ACD4737E90F" />
                                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="74BE82D6E414499" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="EAA593543FD8B5D9" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="9EB5222A163B9C6E" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="4223F3D56E4D67BD" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="5BB08A0318D3A4A" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="91D9478ACE3BDE17" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="102D319777B1B7D4" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="5C375612BE36C366" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="C17B3C259C6060D4" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="925745627152EA4F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="5761BEA4E9347886" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="DF082AEFE0A98B1C" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="7A027A1C43AF1C2D" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="D450A2823CF482C1" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                            </TunableTuple>
                                            <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="E0CCF048B94C629A" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="88DFAC50E76DEC2C" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="B594EF0DBDD45F" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="5F86966CCEECAA34" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="551E664CFE1A5AA8" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="5112663E2675E0B3" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="alert_sim_name" class="OptionalTunable" default="disabled" display="Alert Sim Name" muid="6EAAAB05B518DEA9" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7BEFE8A5248E3020" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EED34B0CA478E56C" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="header_icon" class="OptionalTunable" default="disabled" display="Header Icon" muid="929ADC388E792691" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE7DC69408B39B60" />
                                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="BE868B13A2BD15D2" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="A72DE887AEE09105" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="61DD8D87DC450CD" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="D170CACF92AB7673" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="A377A0ABF2867A2" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="2A3D5913F0F3E734" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="875D6E6B793128E0" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="CCF869E041C793F2" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="526E2E3D9DC9D83" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="7EFB3CC62825D53C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2A7C68EA006D9DAB" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="6C2D29DA356DD0A2" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="CF553CCD00B10514" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="91430085F95EEFC7" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                            </TunableTuple>
                                            <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="6530F4BDA3D36B96" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="682CC2F070FE9245" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="7507E2E189EBF374" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="B88133A0B368F4AA" Deprecated="False" filter="0" group="General">
                                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="4AADE7ECE8C3ED68" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="A131388470CC6EB9" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableEnum type="UiDialogBGStyle" name="dialog_bg_style" class="TunableEnumEntry" default="BG_DEFAULT" display="Dialog Bg Style" muid="139E71B797DFE7A" static_entries="ui-ui_dialog.UiDialogBGStyle" description="The style background to apply to this dialog." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="FooterType" name="dialog_footer_type" class="TunableEnumEntry" default="AUTOMATIC" display="Dialog Footer Type" muid="6B4C3D8E08D04D2E" static_entries="ui-ui_dialog.FooterType" description="An enumeration of the type for YES BUTTONS and DIALOG BUTTON footers.&#xA;AUTOMATIC lets the code decide which footer to use.&#xA;YES_BUTTONS_FOOTER is a footer with an OK BUTTON by default.&#xA;DIALOG_BUTTONS_FOOTER is a footer with only DIALOG BUTTONS." Deprecated="False" filter="0" group="General" />
                            <TunableList name="dialog_options" class="TunableEnumFlags" default="DISABLE_CLOSE_BUTTON" display="Dialog Options" muid="5E23C5A39E5F03C1" description="Options to apply to the dialog." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="UiDialogOption" class="TunableEnumEntry" default="DISABLE_CLOSE_BUTTON" muid="E1AD1383C1E21F6E" static_entries="ui-ui_dialog.UiDialogOption" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableEnum type="UiDialogStyle" name="dialog_style" class="TunableEnumEntry" default="DEFAULT" display="Dialog Style" muid="61923BDCA6245E2E" static_entries="ui-ui_dialog.UiDialogStyle" description="The style layout to apply to this dialog." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="UiDialogNotificationExpandBehavior" name="expand_behavior" class="TunableEnumEntry" default="USER_SETTING" display="Expand Behavior" muid="C08FAECFADE076BF" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationExpandBehavior" description="Specify the notification's expand behavior." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="icon" class="OptionalTunable" default="disabled" display="Icon" muid="BCCA95C0C992D8C0" description="If enabled, specify an icon to be displayed." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DFF28D2708A3C706" />
                                <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="DCF9F3F70D1695B" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="DD1626F4E1B253A3" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="26C330C270A7DA6B" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="FAD5119478B0A209" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="58F4E9B284454634" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="DB280365AB88A00" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="ACE76257C27071F8" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="A4A5C75379B24A33" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="9A6EE4EB0FE8276" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="C421A9392EBE7B8B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B5A3121E3AAD4121" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="B7C079D7BFCDE817" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="E8B27D08CB4AF058" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="B173A7F8200636FF" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableTuple>
                                    <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="8F834B9BE60DBF0E" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="3D22D65D6E3ED4EB" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="E93C1FACE174B08E" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="94D11BD5A415246A" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="9ACCC704DD795431" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="7D04FDA092C4A101" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="icon_override_participant" class="OptionalTunable" default="disabled" display="Icon Override Participant" muid="91285A808EDE5102" description="If enabled, allows a different participant to be considered the&#xA;owner of this dialog. Typically, this will only affect the Sim&#xA;portrait used at the top of the dialog, but there could be other&#xA;adverse affects so be sure to talk to your UI partner before tuning&#xA;this." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42A22740F2E1845B" />
                                <TunableEnum type="ParticipantTypeSingleSim" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="C4ED065FF10D07F4" static_entries="interactions.ParticipantTypeSingleSim" description="The participant to be used as the owner of this dialog. If this&#xA;participant doesn't exist, the default owner will be used&#xA;instead." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="UiDialogNotificationLevel" name="information_level" class="TunableEnumEntry" default="SIM" display="Information Level" muid="31B0BB847726F6F6" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationLevel" description="Specify the notification's information level." Deprecated="False" filter="0" group="General" />
                            <TunableList name="override_text_mapping" class="TunableMapping" display="Override Text Mapping" muid="EBFF987114E916FF" mapping_key="sim_age" mapping_value="override_string" description="If enabled, we will override the TNS text depending on age" Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="FDA99B72741048C" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="override_string" class="TunableLocalizedString" default="0x0" display="Override String" muid="F9F350A4230B02CE" description="The alternate text that will be displayed in the TNS." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="sim_age" class="TunableEnumEntry" default="ADULT" display="Sim Age" muid="DBC4CDE6DAD9CEAF" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="3CDD75F8DD6A8219" description="This field is deprecated. Please use 'icon' instead." Deprecated="True" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF98BE7DC7B82077" />
                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="F0D17A2B99552374" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="PhoneRingType" name="phone_ring_type" class="TunableEnumEntry" default="NO_RING" display="Phone Ring Type" muid="36FCF82DFE90DEC5" static_entries="ui-ui_dialog.PhoneRingType" description="The phone ring type of this dialog.  If tuned to anything other&#xA;than None this dialog will only appear after clicking on the phone." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="primary_icon_response" class="OptionalTunable" default="disabled" display="Primary Icon Response" muid="FEB959527F0500C5" description="If enabled, associate a response to clicking the primary icon." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F337E3E9E32A5371" />
                                <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="4361CB1FC22574AC" description="The response associated to the primary icon." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="51970022631B206C" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="41B4D47ABD677237" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="8534D66CE884FCAF" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="54235D8E248BA811" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF302D7C5B1306E9" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8D84C73F9AF890CE" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="8E99A51DF0CC3173" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="DD907586151CF08" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="E638B18052098B08" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E33BCCC4E59E78D9" />
                                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="726CC3D2F05AB2FB" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="4DACD00BCC8FC61" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="627CCC92E86D4629" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C12688353F50C6D" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="3FC2731A06CF01CB" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="loots" class="TunableList" display="Loots" muid="2A981A0A61056C2F" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                                <Tunable type="action" class="TunableReference" muid="C45C06AA580F0635" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="AFFD6A35AA6E1503" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73851748E77AD8F9" />
                                        <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="5142AAF55D56C7BB" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="D599A845704CA284" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                <TunableList name="arguments" class="TunableList" display="Arguments" muid="77F36AFD0B244E52" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableVariant" default="none" muid="78A600B05BF28BF4" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="89C04C42C4361359" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="6FEE397D7130C7AF" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="4163C96D29A79D9C" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="A97755D957A5DAF6" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="B439F632A81820B" description="An integer number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="5506A8C1F988447F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="4D9B05F9AC49DB26" />
                                                        <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="85C75AD396C67D6B" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="E72B059A4C9BF22E" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="595D36A8ABC35967" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="string" class="TunableTuple" display="String" muid="8F14BD14E7E2BA4C" description="A string." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="FC537FD4B4F436EE" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                                <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="4DB91AFB4A9818C3" description="The command." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="97F478E60D61F3EE" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="2B5C3A4F8452BABC" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="907552544E0C7D6" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8AB50AE05850CAE3" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="E91BC023872EC170" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BC99B6290A17F773" />
                                        <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="3AEF267036E22CCC" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="73325663847AF874" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9EA192003C816919" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="EF375F4ADD8B6C9F" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="B836B3F61715736" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="secondary_icon" class="OptionalTunable" default="disabled" display="Secondary Icon" muid="67914109C5C0C7AA" description="If enabled, specify a secondary icon to be displayed. Only certain&#xA;dialog types may support this field." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BCD33A05CC4936B6" />
                                <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="EA606179A39F1618" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="AFFCCE64DE45837" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="52867C3C82F28490" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="6AC0F0D40440985B" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="13B680D4922AD89E" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="7B82F885434A8000" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="2EC8DE3EB6D2C73B" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="FAA94C719F7F312B" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="F49DAE9D41A60E25" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="668E18CD22B5909B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B4941636078142AF" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="6EACBC34054539C4" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="983E1ACB51312191" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="BE99998951D2F96D" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableTuple>
                                    <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="DC5588ADE64B9C9E" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="A0E2E5B43D698CCE" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="DF00734429F87469" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="22C78288905AAE48" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="26F7FA3D68D46FA2" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="F49810C2D78277EE" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="secondary_icon_response" class="OptionalTunable" default="disabled" display="Secondary Icon Response" muid="7709DBE7F207DA9A" description="If enabled, associate a response to clicking the secondary icon." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7C5DFB43FCC9C047" />
                                <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="64D011E9A22BA14B" description="The response associated to the secondary icon." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="624CDF92DF26BC0" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C93E4040CCAD7EF8" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="6B591F4F6A02D388" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="478A2323D6B651CE" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4A20038490A052B3" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DF69CBB37E87D99A" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="D9240E2AA09EA2DE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="8ED477CB2F6C9161" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="1B43430083F1B73" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8DB36D68D21FDA33" />
                                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="70A18D71CF5F2ED" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="E3AC23914E666988" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F1E706EE9B8AF3B1" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C4A077E28E33FAD3" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="90EC959417F817F7" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="loots" class="TunableList" display="Loots" muid="A4F9A9B1E5EF4940" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                                <Tunable type="action" class="TunableReference" muid="9A7DF85093E25CCF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="DB1B29EBFEF78900" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7662D23A4DAD691" />
                                        <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="4EC8F463E51304E9" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="916C91EDF45B876C" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                <TunableList name="arguments" class="TunableList" display="Arguments" muid="43B1E1647A5CD501" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableVariant" default="none" muid="AC8D813737C70AA2" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="A1743FB4BB2DC78B" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="2307D75466DFD379" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="D38E05FB4106647F" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="CFAC6EF4E8981DAE" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="A88EA894CE5559D0" description="An integer number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="6CB7FC7A221C2FB3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="52E2C1DE25DBB9B9" />
                                                        <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="1A672A7A506A82CD" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="C0C6CED6BB52A4E2" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="BC7623673EC6CCD3" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="string" class="TunableTuple" display="String" muid="BB19EE9ACE342358" description="A string." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="8552949996F89ACB" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                                <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="9D22F48E2A78F04E" description="The command." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="81D8612FDC888079" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="85794A41501DD564" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="95B98516F6ACCD26" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3C346DAACF1E20AE" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="D68E438A85433C88" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF2DEF125FEABAC9" />
                                        <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="974A58A04AFB9C9F" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="F91B84A6E421CA74" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E425BCBBF94F00EC" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="104D7BCA9412194" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="F8DBAD1BCA16FDF4" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="subtitle" class="OptionalTunable" default="disabled" display="Subtitle" muid="655062492AB20469" description="If enabled, this dialog will include subtitle text." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EDFE952742A8454" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="12CA84CB87B72659" description="The dialog's subtitle." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="text" class="TunableLocalizedStringFactoryVariant" default="single" display="Text" muid="C148F22A75B2EAED" description="The dialog's text." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="concatenation" class="TunableLocalizedStringFactoryConcatenation" display="Concatenation" muid="71F0F1FF865F1861" description="A list of localized string concatenations. These strings will be joined together into single line-separated string" Deprecated="False" filter="0" group="General">
                                    <TunableList name="concatenations" class="TunableList" display="Concatenations" muid="2A6CB12E5274F067" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableLocalizedStringSnippet" default="literal" muid="93D2D092039FEE1E" description="This may be tuned in place here using 'literal' or as a reference to a LocalizedString tuning snippet." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="literal" class="TunableLocalizedString" default="0x0" display="Literal" muid="FC3D14DA42D3CD7D" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="3F169E1D0B52EAFA" description="A reference to a LocalizedString tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocalizedString" />
                                        </TunableVariant>
                                    </TunableList>
                                </TunableTuple>
                                <Tunable type="int" name="single" class="TunableLocalizedString" default="0x0" display="Single" muid="CA068F6BE281478F" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="variation" class="TunableLocalizedStringFactoryVariation" display="Variation" muid="D546816E00615E6C" description="A list of possible localized string variations." Deprecated="False" filter="0" group="General">
                                    <TunableList name="variations" class="TunableList" display="Variations" muid="4429CF62739F2686" Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="111039C9D69446A" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="text_tokens" class="OptionalTunable" default="disabled" display="Text Tokens" muid="17D0651FE9BC6EB7" description="If enabled, define text tokens to be used to localized text." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="21F6084B5A00C7F4" />
                                <TunableTuple name="enabled" class="TunableLocalizationTokens" display="Enabled" muid="1B44417C49DD05C4" description="Define the text tokens that are available to all text fields in&#xA;the dialog, such as title, text, responses, default and initial&#xA;text values, tooltips, etc." Deprecated="False" filter="0" group="General">
                                    <TunableList name="tokens" class="TunableList" display="Tokens" muid="6C177D2B033AEC25" description="A list of tokens that will be returned by this factory. Any string&#xA;that uses this token will have token '0' be set to the first&#xA;element, '1' to the second element, and so on. Do not let the list&#xA;inheritance values confuse you; regardless of what the list element&#xA;index is, the first element will always be 0, the second element 1,&#xA;and so on." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableVariant" default="participant_type" muid="D211474F4CB5505C" description="Define what the token at the specified index is." Deprecated="False" filter="0" group="General">
                                            <Tunable name="active_holiday" class="TunableExistance" display="Active Holiday" muid="F816FD6BEB3ABD41" />
                                            <TunableTuple name="animal_home" class="TunableTuple" display="Animal Home" muid="9E01F9FCCCDB3124" description="Tokens for the animal home." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="animal_home_data" class="TunableVariant" default="max_capacity" display="Animal Home Data" muid="68D971D74C1685E1" description="Data you'd like to fetch about the animal home." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="current_occupancy" class="TunableExistance" display="Current Occupancy" muid="1512CDF679D2D220" />
                                                    <Tunable name="max_capacity" class="TunableExistance" display="Max Capacity" muid="66CB79A94899224A" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.Object" display="Participant" muid="106E0C5ACCB7964B" static_entries="interactions.ParticipantTypeSingle" description="The participant from whom we will fetch specified data.&#xA;This is expected to resolve to an Animal Home." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="associated_club" class="TunableTuple" display="Associated Club" muid="B40F501178A7FFEF" description="The token is a stored &quot;associated_club&quot; on this&#xA;interaction. Only works with ClubMixerInteractions or&#xA;ClubSuperInteractions." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="buck_amount" class="TunableTuple" display="Buck Amount" muid="EADEFE4DA1F961AC" description="The token is a number repesenting the amount of the &#xA;specified buck type the specified participant has." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="DA0BB51FE69D2FDD" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="8A705A97BAFEC905" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="buff_duration_remaining" class="TunableTuple" display="Buff Duration Remaining" muid="2C4A36B0F2BE45DD" description="Tokens for the remaining duration of a buff" Deprecated="False" filter="0" group="General">
                                                <Tunable type="buff" name="buff" class="TunableReference" display="Buff" muid="405535403A0550C4" description="The buff whose duration we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="DFCC21AE9011EDA7" static_entries="interactions.ParticipantTypeSingleSim" description="The participant from whom we will fetch the specified&#xA;buff duration." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_data" class="TunableTuple" display="Career Data" muid="A1E8D174E2E8E324" description="The token is a localized string, number, or Sim,&#xA;representing the specified career data for the specified&#xA;participant." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_data" class="TunableVariant" default="current_level_name" display="Career Data" muid="BCA6356743958C06" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="current_level_name" class="TunableExistance" display="Current Level Name" muid="6E1A9D12D44CB73B" />
                                                    <Tunable name="current_level_salary" class="TunableExistance" display="Current Level Salary" muid="885E06EC1B05B355" />
                                                    <Tunable name="next_level_name" class="TunableExistance" display="Next Level Name" muid="18EBBF88C6106654" />
                                                    <Tunable name="next_level_salary" class="TunableExistance" display="Next Level Salary" muid="E0FCF1C931543091" />
                                                    <Tunable name="previous_level_name" class="TunableExistance" display="Previous Level Name" muid="CF3DEB4F6AD77DB8" />
                                                    <Tunable name="previous_level_salary" class="TunableExistance" display="Previous Level Salary" muid="D985B9B2370A824A" />
                                                </TunableVariant>
                                                <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="3AA880F536FB774" description="The career we care about." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2A9CBF40AC097E24" static_entries="interactions.ParticipantType" description="The participant's whose career data we care about." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="civic_policy" class="TunableTuple" display="Civic Policy" muid="51B67906D1490A36" description="Tokens for the Civic Policy system." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="civic_policy_data" class="TunableVariant" default="voting_start_time" display="Civic Policy Data" muid="E60B3C49E5BA0E8F" description="The specific value to display." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="voting_end_time" class="TunableExistance" display="Voting End Time" muid="1778178FCFA1DE5E" />
                                                    <Tunable name="voting_start_time" class="TunableExistance" display="Voting Start Time" muid="427E215F50954796" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <Tunable name="current_trends" class="TunableExistance" display="Current Trends" muid="47B37C3BA621C865" />
                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="D8B1900EA6288D66" description="A catalog definition to use as a token. This is useful if&#xA;you want to properly localize an object's name or&#xA;description." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="5A63CEE204E332E4" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="game_component_data" class="TunableTuple" display="Game Component Data" muid="DA625B0A9ED4E72" description="The token is a localized number or Sim representing &#xA;the specified game component data from game component." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="game_component_data" class="TunableVariant" default="high_score" display="Game Component Data" muid="77103C27A5C9B0DE" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="high_score" class="TunableExistance" display="High Score" muid="A05DD51F06A7479B" />
                                                    <Tunable name="high_score_sim" class="TunableExistance" display="High Score Sim" muid="7D63E6FF6AADC8D" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="9A3041AF11439531" static_entries="interactions.ParticipantType" description="The participant's from whom the game component data &#xA;we want to fetch." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="gig_history" class="TunableTuple" display="Gig History" muid="968B108A6E603B17" description="The token used to display data from gig history." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="customer_participant" class="OptionalTunable" default="disabled" display="Customer Participant" muid="419B291D71E9A073" description="If enabled, this is the participant representing the customer in gig history.&#xA;If disabled, falls back to searching for any valid gig in history." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FEBD2996354A52D7" />
                                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="FF19A07DB49B641E" static_entries="interactions.ParticipantType" description="TargetSim searches for provided customer sim. Lot will search for the current lot." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="gig_history_data" class="TunableVariant" default="gig_customer_name" display="Gig History Data" muid="BAAB9CBD483E9634" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="gig_customer_name" class="TunableExistance" display="Gig Customer Name" muid="1305E5518EE607DA" />
                                                    <Tunable name="gig_project_title" class="TunableExistance" display="Gig Project Title" muid="D4C1359B1E8F1B5F" />
                                                </TunableVariant>
                                                <TunableEnum type="GigResult" name="max_gig_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Gig Result" muid="43764F27B850E2F6" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="GigResult" name="min_gig_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Gig Result" muid="6FE70DE2ADDFCC35" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="82A7CC0947D0A8BB" static_entries="interactions.ParticipantType" description="The participant whose gig history we will search." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="global_policy" class="TunableTuple" display="Global Policy" muid="7DA6C11430DA67D4" description="The token used to display data from the tuned global policy." Deprecated="False" filter="0" group="General">
                                                <Tunable type="snippet" name="global_policy" class="TunableReference" display="Global Policy" muid="8FAA08097C22D330" description="The global policy from which data is displayed." allow_none="False" Deprecated="False" filter="0" group="General" restrict="GlobalPolicy" />
                                                <TunableEnum type="GlobalPolicyTokenType" name="token_property" class="TunableEnumEntry" default="NAME" display="Token Property" muid="E6AD0B90B312E953" static_entries="global_policies-global_policy_enums.GlobalPolicyTokenType" description="Which property from the Global Policy Token to use. NAME&#xA;will use the policy's display name, PROGRESS will use&#xA;the progress made over the max progress value. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable name="interaction_cost" class="TunableExistance" display="Interaction Cost" muid="FFCE286B2CFC91FC" />
                                            <Tunable name="interaction_payout" class="TunableExistance" display="Interaction Payout" muid="E1ECB01884B60B34" />
                                            <TunableTuple name="lifestyle_brand" class="TunableTuple" display="Lifestyle Brand" muid="A8F660FC40E97951" description="The token used to display the name of a Lifestyle Brand &#xA;owned by a Sim." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.TargetSim" display="Participant" muid="748E173D1362F7DD" static_entries="interactions.ParticipantTypeSingle" description="The participant who owns the lifestyle brand." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="money_amount" class="TunableTuple" display="Money Amount" muid="631391F1D71331AB" description="The token is a number representing the amount of Simoleons&#xA;that were awarded in loot to the specified participant." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="901221385A2E47D6" static_entries="interactions.ParticipantType" description="The participant for whom we fetch the earned amount of&#xA;money." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_fashion_marketplace" class="TunableTuple" display="Object Fashion Marketplace" muid="9A9DC9118F1E49BB" description="Tokens for the object fashion marketplace component and &#xA;fashion marketplace system." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_fashion_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Fashion Marketplace Data" muid="CEA6D878BC53ADDD" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="6D94588D953B72A6" />
                                                    <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="15D796815506AC3" />
                                                    <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="80AECC56368CEF25" />
                                                    <Tunable name="suggested_sale_price" class="TunableExistance" display="Suggested Sale Price" muid="A30A8A8B15274F5F" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="object_marketplace" class="TunableTuple" display="Object Marketplace" muid="1702FF158120CE44" description="Tokens for the object marketplace component and marketplace&#xA;system." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Marketplace Data" muid="EC768A0E434E7F89" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="C08D94EB9110F694" />
                                                    <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="64FEB11C647D8858" />
                                                    <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="978637515E477093" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="object_property" class="TunableTuple" display="Object Property" muid="BF19A9371AD68166" description="The token is a property of a game object.  This could be &#xA;catalog properties like its price or its rarity which is a &#xA;property given by a component." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="GameObjectProperty" name="obj_property" class="TunableEnumEntry" default="CATALOG_PRICE" display="Obj Property" muid="88B975280937E087" static_entries="objects-game_object_properties.GameObjectProperty" description="The property of the object that we will request." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_state_value" class="TunableTuple" display="Object State Value" muid="E6343986B18D9597" description="The token is a string representing the value of a specific&#xA;state from the selected participant." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="260129FF65ABCCF7" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;state's value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="5D0B53158F954B2B" description="The state's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectState" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_count" class="TunableTuple" display="Participant Count" muid="9CF790E39148BB50" description="The number of participants of the specified type." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="BAB99335F30D40B4" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="E4BCA934605A8A71" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="E690C8F3EE28742C" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="17E593CCC3C491BE" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="C24E902971EED3D8" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="8D0A3D08FA62EC87" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="85B49953E783F581" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="330FE67EEDB7FADB" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="1A9FD50D603D90FB" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="21E0967BFB02C7D7" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="A3981B0C4C57F365" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="182D481D7DDA3C77" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="slot_type" class="TunableReference" muid="3836DC8EA0F317DA" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="BB4E774A34F99B52" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="ObjectChildren" display="Participant" muid="DA81ADB1338566DE" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="F1DF07F59FFBDB4B" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CE9EE366117220B6" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                        <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="8D834C0C1EC776DB" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="participant_type" class="TunableTuple" display="Participant Type" muid="C1BF3159E62CCD8C" description="The token is a Sim or object participant from the&#xA;interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="formatter" class="TunableObjectLocalizationTokenFormatterVariant" default="single" display="Formatter" muid="8F33A285C964C863" description="Define the format for this token." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="bullet_list" class="Tunable_TunableObjectLocalizationTokenFormatterBulletList" display="Bullet List" muid="2961207B63C172AF" description="The token is a string, which is a formatted bullet point list. Objects&#xA;are grouped by definition. The text for each item must be specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="bullet_text" class="TunableLocalizedString" default="0x0" display="Bullet Text" muid="7932C1FA297750AF" description="The text for the bullet entry. The string is provided the&#xA;following tokens, in this order:&#xA; 0 An object representitive of the group&#xA; 1 The number of objects in the group" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="single" class="Tunable_TunableObjectLocalizationTokenFormatterSingle" display="Single" muid="466BBE2A05D2E36F" description="The token is a single object name. If multiple participants are&#xA;returned, an arbitrary one is used. That is, unless the mismatch key is&#xA;specified. In that case, the string is used unless all of the&#xA;participants' definitions match." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="mismatch_name" class="OptionalTunable" default="disabled" display="Mismatch Name" muid="D97D87F39E46AA35" description="If enabled, this is the object name to use when using a multi-&#xA;object participant yielding definitions with different names." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26BB0623381AEE76" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="910C9A3CEA2E8229" description="A localized string that may NOT require tokens." allow_catalog_name="True" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="8B582F5491A66B27" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="68A49EE8A33910CA" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="EED0CA2B807E0624" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="69BE7288C3B2990A" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="8B95876DB3B9FA03" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="59C7745A1B992037" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="9FE18F7E50759924" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="884451459E00178" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="4162651BA19ECB1A" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="668093A8EC7CC0DA" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="351DB366353EE9DB" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="C49575FE2EF0C881" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="slot_type" class="TunableReference" muid="257BD67DE78068BF" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="DD42DCD3EC515AAB" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A710A9921FDCDC66" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="566F904DC481228D" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="72BBF2B8390F20A6" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                        <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="E90E3E0DEBBDE4B7" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="participant_type_special" class="TunableTuple" display="Participant Type Special" muid="48F127926C1F60B1" description="The token is a specified string grabbed from a supported participant type that &#xA;requires special handling. Currently supported are:&#xA;I. Participants that resolve into households&#xA;    1. Household Name&#xA;    2. Household Description&#xA;2. Participants that resolve into zone ids&#xA;    1. Lot Name&#xA;    2. Lot Description&#xA;    3. Name of household that lives there&#xA;    4. Description of household that lives there." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="participant_type" class="_SpecialParticipantTokenVariant" default="household" display="Participant Type" muid="6DA1102FA0F8F973" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="household" class="Tunable_FromHouseholdParticipant" display="Household" muid="776CFC2287CCFA0" description="Helper class used to support participants that resolve into households." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="attribute" class="TunableVariant" default="name" display="Attribute" muid="9732BB1A208EA532" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="description" class="TunableExistance" display="Description" muid="B2068C85BF960D41" />
                                                            <Tunable name="name" class="TunableExistance" display="Name" muid="9149F2DE8250D712" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantTypeHousehold" name="participant" class="TunableEnumEntry" default="TargetHousehold" display="Participant" muid="2BF3AAB70D690BC6" static_entries="interactions.ParticipantTypeHousehold" description="Participant that resolves to a household." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="zone" class="Tunable_FromZone" display="Zone" muid="B3BDA05DC2640AC6" description="Helper class used to support participants that resolve into zone ids." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="attribute" class="TunableVariant" default="zone_name" display="Attribute" muid="9F38EEA007752DBB" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="occupant_household_description" class="TunableExistance" display="Occupant Household Description" muid="CCFDCCCCF9F5140A" />
                                                            <Tunable name="occupant_household_name" class="TunableExistance" display="Occupant Household Name" muid="346647E990A556EE" />
                                                            <Tunable name="zone_description" class="TunableExistance" display="Zone Description" muid="DFB39A11177FD33F" />
                                                            <Tunable name="zone_name" class="TunableExistance" display="Zone Name" muid="3B454EC252E377B2" />
                                                        </TunableVariant>
                                                        <TunableEnum type="ParticipantTypeZoneId" name="participant" class="TunableEnumEntry" default="PickedZoneId" display="Participant" muid="9926081EAFB21693" static_entries="interactions.ParticipantTypeZoneId" description="Participant that resolves to zone id of a multi unit business." Deprecated="False" filter="0" group="General" invalid_entries="AllUnitZoneIds" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="picked_part" class="TunableTuple" display="Picked Part" muid="4851D553F9C43FD3" description="The token used to display the name of a picked part." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="scholarship_letter_component_data" class="TunableTuple" display="Scholarship Letter Component Data" muid="E94E348B942D9390" description="The token can be used to get strings representing scholarship&#xA;information from the scholarship letter component of an object." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="AC94D4D25B3FEAED" static_entries="interactions.ParticipantTypeObject" description="The participant from whom to get the scholarship letter&#xA;component data." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="scholarship_letter_component_data" class="TunableVariant" default="applicant_name" display="Scholarship Letter Component Data" muid="C7E43E4DA674B558" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="applicant_name" class="TunableExistance" display="Applicant Name" muid="87B1FBC3ADE265AE" />
                                                    <Tunable name="scholarship_amount" class="TunableExistance" display="Scholarship Amount" muid="6A0E8333CC70347" />
                                                    <Tunable name="scholarship_description" class="TunableExistance" display="Scholarship Description" muid="551AC268B765B24D" />
                                                    <Tunable name="scholarship_name" class="TunableExistance" display="Scholarship Name" muid="A148128FBED50685" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="sickness" class="TunableTuple" display="Sickness" muid="E9958DD2CA97E9DC" description="The token is the name of the sickness on the specified Sim." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="862F74163DDA2DD4" static_entries="interactions.ParticipantType" description="The participant who is sick." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="small_business" class="TunableTuple" display="Small Business" muid="11578ADB987AE500" description="The token is the name of the small business owned by specified Sim." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2E343949F96972DC" static_entries="interactions.ParticipantType" description="The participant who has small business." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="statistic_value" class="TunableTuple" display="Statistic Value" muid="28FDF88494E5429B" description="The token is a number representing the value of a specific&#xA;statistic from the selected participant." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="clamp_value_to_floor" class="Tunable" default="False" display="Clamp Value To Floor" muid="1E91084BE19EF2FA" description="If True, the value will be clamped to its floor." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="99A55C6A9B369F76" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="58FE84A9D4A43CA4" description="The statistic's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="use_statistic_name" class="Tunable" default="False" display="Use Statistic Name" muid="B13F78D911B1E8E1" description="If True, the value will be the name of the statistic." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="street" class="TunableTuple" display="Street" muid="3B866E1A1C365CA0" description="                    " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="street" class="TunableTunableLocalizationStreetSelector" display="Street" muid="9F2BFC615E731EE9" description="Using the Street Selector tuning, provide a token localization appropriate&#xA;street selection." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="8729D1087AE00E73" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="801DE99494D442BA" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="546E66D706672783" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="62F796F81DA8432E" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="7B9BB4BCC5857AE7" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="BA36D52DFC874597" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="77217BA0D751775D" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="372A0E8F017361C" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="D91656884D8D53CA" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableVariant type="None" name="street_data" class="TunableVariant" default="policy_up_for_repeal" display="Street Data" muid="C2BC0DB83EA99B2" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="policy_up_for_repeal" class="TunableExistance" display="Policy Up For Repeal" muid="3F5E3F5454039793" />
                                                    <Tunable name="random_losing_balloted_policy" class="TunableExistance" display="Random Losing Balloted Policy" muid="EB6E589436F2FBA2" />
                                                    <Tunable name="winning_balloted_policy" class="TunableExistance" display="Winning Balloted Policy" muid="FC2E7E9DF729134" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="venue" class="TunableTuple" display="Venue" muid="13E75274A8B323F9" description="                    " Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="venue_data" class="TunableVariant" default="active_venue" display="Venue Data" muid="4A81584F03680FA9" description="                        " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="active_venue" class="TunableExistance" display="Active Venue" muid="6135735466291869" />
                                                    <Tunable name="source_venue" class="TunableExistance" display="Source Venue" muid="B5622771A6E22252" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="timeout_duration" class="OptionalTunable" default="disabled" display="Timeout Duration" muid="5448B02699B46E01" description="If enabled, override the timeout duration for this dialog in game&#xA;time." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C84677321C43A52" />
                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="5" display="Enabled" muid="94DBC76413336839" min="5" max="None" description="The time, in sim minutes, that this dialog should time out." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="title" class="OptionalTunable" default="disabled" display="Title" muid="A72F74A4C8CF03E4" description="If enabled, this dialog will include title text." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD3D2B3DC33A415" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="66BAAA2B3BC9D28E" description="The dialog's title." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="tns_suppression_group" class="OptionalTunable" default="disabled" display="Tns Suppression Group" muid="426D8D982D568D3F" description="If enabled, the TNS will be considered for suppression. Suppression occurs if the number&#xA;of notifications in this group that fire exceed the tuned TNS suppression limit. " Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3FCBC15850B1E5" />
                                <TunableEnum type="TNSSuppressionGroup" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="C343831BFE52EA57" dynamic_entries="ui-notification_suppression_enums.TNSSuppressionGroup._elements" static_entries="ui-notification_suppression_enums.TNSSuppressionGroup" Deprecated="False" filter="0" group="General" invalid_entries="NONE" />
                            </TunableVariant>
                            <TunableList name="ui_responses" class="TunableList" display="Ui Responses" muid="B7B785CA69721CE5" description="A list of buttons that are mapped to UI commands." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableUiDialogResponse" muid="5CA5C1510CBE65A4" description="A dialog response." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="5F5F7D9F18FD3383" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D85B26FEAC640C67" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="1FF1F296BDF0FD44" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="7409729F92DC51FB" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34D809EDF98E415C" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C3547D3B319B7107" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="C9E2FAF04F7A3DA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="F996C9F419288D25" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="17BE9BE277A3F409" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C52990B41D2D2F39" />
                                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="23DDFE2463677490" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="D052207D66BCB654" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="605E3674C0420223" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="AF8123D7DE0FE2AB" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="C37684C1CBBE786A" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="loots" class="TunableList" display="Loots" muid="DE9CAC6160A982FE" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                                <Tunable type="action" class="TunableReference" muid="3C1FC39710882CD8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="F6CCC212B3E64E19" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC1881BE75F238F1" />
                                        <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="EB035ABB4431959F" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="8912B6C5A835FD47" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                <TunableList name="arguments" class="TunableList" display="Arguments" muid="836E6B514E4647BC" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableVariant" default="none" muid="F08F3A5C93FD1F79" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="DB51916A14DC8380" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="287B44E943D9E1B7" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="82BF70C396BCC1F4" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="E513DD884A318681" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="42AA856B93E38F1" description="An integer number." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="6CE93A6960AECFF8" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="246089C0B394C442" />
                                                        <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="252E85DF3BDED980" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="8147D4C628D1705D" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="262B11120D14B4A8" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="string" class="TunableTuple" display="String" muid="D24474652864ABB7" description="A string." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="C38E2CBCA7C02CB1" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                                <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="18CA089575D8FFDD" description="The command." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="37664F9717CB24D5" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <Tunable type="int" name="text" class="TunableLocalizedString" default="0x0" display="Text" muid="1E646178FECD4342" description="The prompt's text." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="328206E760657D61" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F891E9C58B47FBE7" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="637BB06208E37AB2" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="94146667122996C2" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9493A45BB887359" />
                                        <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="5EB7B3E83D7B6B9A" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="77E672275E988092" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="369557978A105542" />
                                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="D895153CE509421F" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="4A31F7D1ACDD044A" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                            <TunableEnum type="UiDialogNotificationUrgency" name="urgency" class="TunableEnumEntry" default="DEFAULT" display="Urgency" muid="FDB44ADF264AB8CF" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationUrgency" description="Specify the notification's urgency." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="UiDialogNotificationVisualType" name="visual_type" class="TunableEnumEntry" default="INFORMATION" display="Visual Type" muid="DF709637D7C76225" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationVisualType" description="Specify the notification's visual treatment." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="number_of_random_sims" class="OptionalTunable" default="disabled" display="Number Of Random Sims" muid="371F80C268DB87BC" description="If enabled allows you to specify the number of Sims to choose to&#xA;add the relationship with." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="23A2F57C1FAF9118" />
                        <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="5A63129FDAD1C223" min="1" max="None" description="The number of Sims to choose to add relationship with from&#xA;the list of valid choices." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="relationship_multiplier" class="OptionalTunable" default="disabled" display="Relationship Multiplier" muid="3EA81334C6434F9F" description="A multiplier made for relationship operations." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B86FFBBB4100EC94" />
                        <TunableTuple name="enabled" class="TunableTunableMultiplier" display="Enabled" muid="7864774B975C731" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="1CD83488104458E9" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="A8D0DC4B8F3FE7DB" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="B2A2C8771219B36B" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="9D685E0998C92892" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D2C98B24D9D36511" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="store_single_result_on_interaction" class="OptionalTunable" default="disabled" display="Store Single Result On Interaction" muid="5E8C2F4CA1A4DAAC" description="If enabled will place the result into the SavedActor specified on&#xA;the interaction.&#xA;&#xA;This will only work if the value of number_or_random_sims is 1.&#xA;This will overwrite whatever else is currently set in the&#xA;SavedActor space chosen." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="970CCC62E0385571" />
                        <TunableEnum type="ParticipantTypeSavedActor" name="enabled" class="TunableEnumEntry" default="SavedActor1" display="Enabled" muid="70919F4D544B42D0" static_entries="interactions.ParticipantTypeSavedActor" description="            &#xA;                " Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="CC0043E1DC8E6887" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="98580CFFA738C62C" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="5B09CB8C63C8FA36" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="53E92032D18FDE0F" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="57EFFF59E733599C" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TdescFragTag name="tests_on_random_sim" class="TunableTestSet" display="Tests On Random Sim" muid="81E5F1011C428BBD" description="Tests that will be run to filer the Sims where we will pick the&#xA;random sim to apply this statistic change." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="47F4ED732F4B5AED" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="D756B4F342D1BFDE" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="77544DF2530331EA" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="D2E12B19F3D28B81" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="34BED03FABADCC7B" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="C1DC4981E33E075" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="40EFD08C4F9A38A8" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="29077DDF432F193A" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableVariant type="None" name="who" class="TunableVariant" default="known_sims_only" display="Who" muid="8CFEB036F93EDFEF" description="Which Sims are valid choices before running tests.&#xA;If set to known_sims_only then it will only choose between Sims &#xA;that the subject sim already knows.&#xA;&#xA;IF set to all_sims then it will choose between all of the sims, &#xA;including those that the Sim hasn't met." Deprecated="False" filter="0" group="General">
                        <Tunable name="all_sims" class="TunableExistance" display="All Sims" muid="D071098B88D4A1C4" />
                        <Tunable name="known_sims_only" class="TunableExistance" display="Known Sims Only" muid="6781C601F5492337" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="relationship_change" class="TunableStatisticAddRelationship" display="Relationship Change" muid="563FA97DB0B8442B" description="Adds to the relationship score statistic for this Super Interaction" Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="add_track_if_not_present" class="Tunable" default="True" display="Add Track If Not Present" muid="C7658F6024257651" description="When changing the value of a track, add the track if it's not already present.&#xA;False means if the track is not already present, the operation is skipped" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="amount" class="Tunable" default="0" display="Amount" muid="ACDA031675F04F65" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="6600744DE3903304" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="D4CACD02107BB32A" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="9D526D6225DD9B1C" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="5E207E2E12F843DE" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="799C24B1193BD3E8" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="86506B01AC7335B7" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="AC25CC13C40FBB0B" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1D219AD681F9151" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="419296C935735455" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="4549C7913C8D622" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_multiplier" class="OptionalTunable" default="disabled" display="Relationship Multiplier" muid="D969B4E6A1CF4DD1" description="A multiplier made for relationship operations." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6291C60196B9807F" />
                        <TunableTuple name="enabled" class="TunableTunableMultiplier" display="Enabled" muid="D37122A228B1A66C" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="440BB28E98502EDC" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="89D4D1D99EDF9499" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="98D3BCD61B760F45" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="719639DD5482001C" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="69FA5E34E9FE58C2" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="970F157986AB1305" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="C215F032A16B2329" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="840DB118C32706E1" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="904BB91E5938DB8D" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="FA965AEBCFDF4BD8" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="A746789288F40A3A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="245E98E3E7E19613" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="123F460A56C6163E" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="B2FE3E03491738C2" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="E7D0348A7CDE5C15" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="8470EF2105D37F89" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="66CFF85D0B4FAE26" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="AC36F95CA6B6350F" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="FD6D48F04397A3D5" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="33E4488DD66BB911" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_change_multiple" class="TunableStatisticAddRelationshipMultiple" display="Relationship Change Multiple" muid="542706C52E29BE10" description="Modifies the relationship track score of multiple tracks at &#xA;once." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="amount" class="Tunable" default="0" display="Amount" muid="F5CC7C026C2B8C50" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="1D569557BD7AD8F7" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="96A01A7FE2CBEA12" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="175766FFCAFA2F2A" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="DDCB75BC4F15405" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="2E0BDA8F64543E86" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="589430A7DFBEA728" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="68E1573ABF79AC51" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F959C26C857F18BB" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="40AB29037732789B" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="7208AB8453E6C8E9" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_multiplier" class="OptionalTunable" default="disabled" display="Relationship Multiplier" muid="BD5341F4B64FE548" description="A multiplier made for relationship operations." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6662DFE08D471034" />
                        <TunableTuple name="enabled" class="TunableTunableMultiplier" display="Enabled" muid="E23EAE22F9FF6D3F" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="1BE53911C9BAB2EA" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="3E91EF4202AD66B7" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="AF6809B7364BCACF" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="D19825F840FB3B9B" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="9936185E88F9AFE" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="C51AE2A52794E57F" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="A59E6884FE9A963A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="A23B3B68CF5A8863" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="9D397AEF0F57EA3C" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="FD96652E7B96C28F" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="29D4E1D2E795CCDC" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="9D6F2BDE08DEB55D" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="84D3099C6FDDB559" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="2DC30243E65052" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="869A558C10FF2788" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="F519EF619C0D8F54" />
                    </TunableVariant>
                    <TunableVariant type="None" name="track_selection_strategy" class="TunableVariant" default="sentiments_by_type" display="Track Selection Strategy" muid="BA630E8C6405470A" description="The strategy we will use for selecting tracks for this op to&#xA;operate on." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="sentiments_by_type" class="TunableTunableSentimentTrackSelectionByType" display="Sentiments By Type" muid="EB9B21AE313F60DD" description="A TunableRelationshipTrackSelectionStrategyBase that will select sentiments&#xA;that match the tuned values." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="sentiment_duration" class="OptionalTunable" default="disabled" display="Sentiment Duration" muid="F6F6412CEC9F487C" description="If tuned, only sentiments with the tuned duration will be affected." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D6E877A7C9841F7C" />
                                <TunableEnum type="SentimentDurationType" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="6F9DD41BCDA30B6C" static_entries="relationships-relationship_enums.SentimentDurationType" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableVariant>
                            <TunableVariant type="None" name="sentiment_sign" class="OptionalTunable" default="disabled" display="Sentiment Sign" muid="89FEBEB41ED8C921" description="If tuned, only sentiments with the tuned sign will be affected." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5880FBBEDA981E4" />
                                <TunableEnum type="SentimentSignType" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="F2E4E29B408F4F1E" static_entries="relationships-relationship_enums.SentimentSignType" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="relationship_clear_decay_enabled_override" class="TunableRelationshipClearDecayEnabledOverride" display="Relationship Clear Decay Enabled Override" muid="9913F4846B4BEA20" description="Clear any decay enabled override for the given relationship track. Allows other logic to drive decay&#xA;enabled." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="93262CE62F0E1E86" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="D070AA6F3149A24" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="A127752D353789F7" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="718E02E89EFD3324" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="E6F6D74080AF3935" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="FE91052C6B9A3C2" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="1DB01BD1197888B3" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F21C1A911C06F02" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="5B2999FB94EFA89D" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="B3A13B6078808CB7" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="2E13F9C89E6A39C7" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="E4631F2A7972188D" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="FE13B3E73CD8B00F" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="A54F4F57058B088C" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="223693D678129E61" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="3D7C22248DDE227C" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="6102BBFD6E78EAF7" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="880972CDCCFE3836" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="CDB93C758815C5E0" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="43D7A57917F9BE08" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="4E53EEB7403D6E73" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="D608F27ED229EC8" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="693866A26F4ABD80" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="C0349F323300E0BE" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="DA81F6CEECB048B5" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_clear_interval_decay_rate_override" class="TunableRelationshipClearIntervalDecayRateOverride" display="Relationship Clear Interval Decay Rate Override" muid="6A367859DAD48894" description="Clear interval decay rate overrides." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="9DB44BC2C4B3B7BC" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="40EBC64CA7C4378D" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="6515265D30A7325E" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="6876DA1FF5079200" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="6A873D98767DC6D3" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A9BCB98BC02D193C" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="522B97642292E845" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B6D6A67D908E3AB" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="F472FDCD5BEE5A3C" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="5A35A3D8489D9E74" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="1FE84D2A875DF2D5" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="D55A689F94A3BCA3" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="B560259C00E2153C" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="DAA2FBF48BFBFEB" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="E570BCD94CC8B28F" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="EA750418E88107C3" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="36C50DDB0411DF28" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="1C65CCA48146E8CB" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="111FBFF82173AA64" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="EB0C1EBA2171A24A" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="52F797074A1438CD" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="33963C9F2B85AB2E" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="88C296AE33CA297D" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="55BDF8529E7D35DC" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="69959B2E5D49FF31" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_remove_track" class="TunableStatisticRemoveRelationshipTrack" display="Relationship Remove Track" muid="E68D7A26DC927B8D" description="Removes the given relationship track." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="45A51DACF3BC3F29" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="39922A061A8D0E3" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="5C9DAB78F87AAE37" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="5B4C32AB54190C48" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="E7EF93116C8240C4" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="E801422B77BFAF23" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="32C712DFCADF7304" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D307F41EEC0E01AC" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="D5F27E3242E7C65" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="EDC7B5EF4A40C2AC" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="911EE4DADB2A6CA6" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8BDCC3DCE2943AAE" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="47DA3C90AA4FC30A" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="9274B389570540B1" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="22DBD3DC8FD43821" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2C990E292D07442E" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="7B9A3F2C10017DC6" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="75FE88A1CD72D714" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="A932D001024D3C5A" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="B519D17EC9399330" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="C837A4C665A02835" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="A7335ED6F8B7F62" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="367B605915226029" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="5EF8DBF5702EFCA5" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="4092D3485F2D725E" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_set" class="TunableStatisticSetRelationship" display="Relationship Set" muid="DF82188066719E4C" description="Sets the relationship score statistic to a specific value." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="add_track_if_not_present" class="Tunable" default="True" display="Add Track If Not Present" muid="7A15FF54AE7D1842" description="When setting the value of a track, add the track if it's not already present.&#xA;False means if the track is not already present, the operation is skipped" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="7D8A3F8BD66811B1" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="2E2E0F34D4F2555E" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="A899F6BED6EC3E10" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="12EDD108E9356B65" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="87F24FA558B3C3C7" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="6725AE3006CF5370" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="CD9A5D22AEDEEB07" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D875F2FDE2587EB1" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="A79E8FFB8519DE0D" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="86CD740A883949" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_multiplier" class="OptionalTunable" default="disabled" display="Relationship Multiplier" muid="C253D7CD981BEAF2" description="A multiplier made for relationship operations." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6548376D3CA949E9" />
                        <TunableTuple name="enabled" class="TunableTunableMultiplier" display="Enabled" muid="D0BB6B0E328FD11C" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="3FF706128C9C252F" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="A4B28D88283C5732" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="66C86871BC2EDEAD" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="5404DE0175E066D9" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="E1FA33137686525D" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="37CE5F17CE42EAF3" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="53F3898AD3B4856F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="4BFFE36CC9F7A419" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="DF37D149FCCB1E56" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="F0E58E3F483A61CF" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="FB68A812B5A1E28D" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A4A708648AB48039" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="9DF5205186DB911A" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="D67EC67AAB9BE75" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="1B23A77344647CE" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="286E87A59406BB52" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="16E2DA14D46F27CC" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="C997A6A423A5A86E" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="262FA6CC83A6569D" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="600AF226A060A073" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2B31529BE3BB56B3" description="The value to set the relationship to." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="relationship_set_convergence_value" class="TunableStatisticSetRelationshipTrackConvergenceValue" display="Relationship Set Convergence Value" muid="4C426C1E74F8FD96" description="Sets the convergence value on the given relationship track." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="11DD9AE4D38255A5" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="4A50E195A80C6442" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="F019D678302B490" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="D9310910BEE85595" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="FB1F9C067CB4DD12" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="46B61153EAF0D39D" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <Tunable type="float" name="convergence_value" class="Tunable" default="0" display="Convergence Value" muid="D181D2176445D6EB" description="The convergence value to set on the tuned relationship track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="84407854DEEE0311" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="678D8F72AA71BF3E" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="C06329B77879894E" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="392C74662F4E6097" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="13A2B113980E95E1" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="23D6C15349DC738F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="D773F4AC4BEC037D" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="399F72D1650C91D0" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="CEC117505835C4C" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="4807C18FFDB79E47" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="E3CB2AC4BD3F2A00" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="86AE780029F176CC" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="E3D4F45C633B13E" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="A401D8625C1318C8" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="65AFAC0F70D7941D" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="53D7DE0899A16503" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="18E455BE27527591" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="EE649B63AB3CAFBE" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="E712860BD1A3609B" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_set_decay_enabled_override" class="TunableRelationshipSetDecayEnabledOverride" display="Relationship Set Decay Enabled Override" muid="D66305647C54874E" description="Force relationship track's decay to be enabled or disabled. Will supersede any other logic." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="6F03D40A5B058815" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="9B6479CFB1A8575" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="EEF39C94A4AE408B" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="6AAFE0A950153F69" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="76A4A7EA843DDF89" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="FBCF2DC7753FBBD7" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <Tunable type="bool" name="decay_enabled" class="Tunable" default="False" display="Decay Enabled" muid="957A2E73F837D1AD" description="If enabled, will force decay to always be active.&#xA;If disabled, will never allow decay to be active." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="AA6564220B150DE8" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="770474DE7ED314B7" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="A39B4AEE24345303" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="79B1E60062B26B1A" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="E9C30F566B9EAD4E" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2658BB0412F4259B" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="C75777A256BE051" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="D87FA6EA01F6CD4E" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="3503D4024783C270" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="625EFD5C8DA3C6FA" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="983A6D7D5EF561C0" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="ADECAE8EEA2B8C36" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="7D587916C1C9CC61" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="9DA3E5A9D8F78FE5" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="E7B2D02D1B1D365" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="3D83461C4D93C814" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="886ED4781F5A5D73" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="E8264F94BCDB10FF" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="DEA014652B586E8C" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_set_interval_decay_rate_override" class="TunableRelationshipSetIntervalDecayRateOverride" display="Relationship Set Interval Decay Rate Override" muid="764E1C1E86B7845D" description="Apply interval decay rate overrides, which skips all other decay rate logic." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="F224719BCA9BD34C" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="ACD8A2885926E4A5" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="FD8D7D5A06F97E3C" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="FFECEDF4D795BED8" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="3A8977EB3CF76527" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="B7A481E91B11533B" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="492572A58AA57813" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F5F7FB6F1D201E24" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="38E3DFC9A1879CD4" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="C367468025805F03" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="new_rates" class="TunableList" display="New Rates" muid="2509AAC134F171BF" description="The interval decay rates that we are going to use instead of&#xA;the stat's default rates.&#xA;&#xA;Note: This will skip all other decay rate logic if applied." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="D1963341343E4FD1" description="The interval/decay rate pair." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="decay_override" class="Tunable" default="0.0" display="Decay Override" muid="113B65B20AABF93B" description="The value that the base decay will be overridden with." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="interval" class="TunableInterval" display="Interval" muid="25265FD404AEEA61" description="The range at which this decay rate will apply. It is inclusive&#xA;on the lower bound and exclusive on the upper bound." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100" display="Lower Bound" muid="C430F9611CF0489F" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="3C07A91ED573A34" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="970ED81BE3D0C6CF" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B3D32A947CC5D06F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="F51F767AB4A026E0" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="DCC426AE3A370F5" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="48FC9C75F8415826" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8347783832841808" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="C771E59598C01AD9" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="F8E44E5AE1D3D36" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="A3ABF9F062D3AFFA" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="2DE2E0293BB1A970" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="AD244053A6695F5D" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="D4EC76BC411AE056" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="82C6A9F9AE339D62" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="8BFB51BAB7E04244" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="C403C4C08326EC43" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_set_max" class="TunableStatisticSetRelationshipMax" display="Relationship Set Max" muid="101763FCACD1B991" description="Sets a relationship track to its maximum value." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="FCD5D28C4B5CD29A" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="71E244603F1475D2" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="2CA617C2BD306744" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="3BFF1B493046D9F0" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="ACA216DAF31E3AD9" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A5B104DD9D460D3A" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="48CAE446B1A00BFA" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C42531601F0B83E" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="88E1656075272A81" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="5989A623AA967F7A" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="5DDBAC10CC2FD64" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2DC79FBC8281D9EF" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="C97710F99E480C17" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="704DB359D41BFAB4" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="522F5B4714B8E6DE" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="5C20C56CC1728CF1" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="769ADCFBA877AC" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="EDE5E4D904ABFF59" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="BA86A83DAF7F1BD1" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="FC6DA4C0D4D8FBEC" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="FF030B3EAD91DD22" />
                    </TunableVariant>
                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="5D95E832E75BED87" description="The track to be manipulated." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <TunableTuple name="track_range" class="TunableInterval" display="Track Range" muid="48354E1ACDE560FA" description="The relationship track must &gt; lower_bound and &lt;= upper_bound for&#xA;the operation to apply." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-101" display="Lower Bound" muid="26997A5BFD3E0C8F" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="3AD6442A285EEFBC" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="relationship_set_multiple" class="TunableStatisticSetRelationshipMultiple" display="Relationship Set Multiple" muid="B1B5CE6F681E182A" description="Sets the relationship track score of multiple tracks at &#xA;once." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="60937A6D966DA592" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="EA8F761E3BE3A673" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="BE5F4FF29A9D3BBD" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="26167C6C1E776A05" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="5F64E4D7A609EF6E" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="19C05A05BD8F0391" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="headline_icon_modifier" class="OptionalTunable" default="disabled" display="Headline Icon Modifier" muid="DC681AD563830502" description="If enabled then when updating the relationship track we will&#xA;use an icon modifier when sending the headline." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E657B7E3A5F85398" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="6D6C1F3924A6FE84" description="The icon that we will use as a modifier to the headline." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <Tunable type="bool" name="hide_relationship" class="Tunable" default="False" display="Hide Relationship" muid="A5CA68BF457C0C48" description="Sets the relationship's hidden property to this value after a &#xA;successful interaction." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_multiplier" class="OptionalTunable" default="disabled" display="Relationship Multiplier" muid="B8B6FA357F538077" description="A multiplier made for relationship operations." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D16CAC5CACB3C45" />
                        <TunableTuple name="enabled" class="TunableTunableMultiplier" display="Enabled" muid="597B42D2F94C5038" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="196C2EF082B7C8FD" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="18D7ADE05FD34D0E" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="19D8CCCF6CEFE2C0" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="8233A3D00B9701D4" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="BF5F3C0195DA5161" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="3934BCBCFED03B61" description="The owner Sim for this relationship change. Relationship is updated&#xA;between the participant sim and the target objects as defined by&#xA;the object relationship track." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="BF1B1C3F7C509E20" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="639B3D5E3EEF0973" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="target_filter_tests" class="TunableTestSet" display="Target Filter Tests" muid="9FB9FEDA87B13DAC" description="As subject filter tests, except per target object. See description&#xA;of subject filter tests." filter="0" group="General" />
                    <TunableList name="target_participant_type" class="TunableEnumFlags" display="Target Participant Type" muid="DE7D3D1CA02D927A" description="The target Sim for this relationship change. Any&#xA;relationship that would be given to 'self' is discarded." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="790F459B8C59AA54" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableList>
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A8B6DDF3DB27E806" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="5C91B701898F09D1" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="7A5D4B4D7DF346F" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="B385DA03FA6BF366" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="3B5322CDF4B06BFE" />
                    </TunableVariant>
                    <TunableVariant type="None" name="track_selection_strategy" class="TunableVariant" default="sentiments_by_type" display="Track Selection Strategy" muid="98063C700CDC1F76" description="The strategy we will use for selecting tracks for this op to&#xA;operate on." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="sentiments_by_type" class="TunableTunableSentimentTrackSelectionByType" display="Sentiments By Type" muid="9773BC6B82D91B7F" description="A TunableRelationshipTrackSelectionStrategyBase that will select sentiments&#xA;that match the tuned values." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="sentiment_duration" class="OptionalTunable" default="disabled" display="Sentiment Duration" muid="7D7B017E577788E3" description="If tuned, only sentiments with the tuned duration will be affected." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EA010AE8E97724B5" />
                                <TunableEnum type="SentimentDurationType" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="F0F1581E19EF7F0E" static_entries="relationships-relationship_enums.SentimentDurationType" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableVariant>
                            <TunableVariant type="None" name="sentiment_sign" class="OptionalTunable" default="disabled" display="Sentiment Sign" muid="E8D5AC91B249A473" description="If tuned, only sentiments with the tuned sign will be affected." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="225EA91A0E12EAEE" />
                                <TunableEnum type="SentimentSignType" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="BEE937921026C5D8" static_entries="relationships-relationship_enums.SentimentSignType" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BC18544A89B87F5B" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic_add" class="TunableStatisticAddOp" display="Statistic Add" muid="E874A992AF24EF3F" description="Attempt to add the specified statistic." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7BAF4DD86D203C0" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="4E9E28F3667D4D43" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="F8BD59B3CE7157CC" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="F2310CC48E18B4DB" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="F904B816E85F7BE6" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="DCF53BB87622C8AF" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_change" class="TunableStatisticChangeOp" display="Statistic Change" muid="4571C290F047F513" description="Modify the value of a statistic." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="amount" class="Tunable" default="0" display="Amount" muid="AEB3C686B0A4DFE1" description="The one-time gain for this operation." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="exclusive_to_owning_si" class="Tunable" default="True" display="Exclusive To Owning Si" muid="CB2579FBC6B73F6D" description="If enabled, this gain will be exclusive to the SI that created it&#xA;and will not be allowed to occur if the sim is running mixers from&#xA;a different SI.&#xA;If disabled, this gain will happen as long as this&#xA;SI is active, regardless of which SI owns the mixer the sim is&#xA;currently running.&#xA;This is only effective on Sims." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="maximum" class="TunableVariant" default="no_max" display="Maximum" muid="88CCF740A0F6D533" description="A variant containing the different ways you can cap the max amount a&#xA;statistic reaches as result of a change." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_max" class="TunableExistance" display="No Max" muid="9DEF60CCFD2718AB" />
                        <TunableTuple name="points" class="TunableMaxPoints" display="Points" muid="42CAB7E2228FCB20" description="The max amount of points that a stat can achieve after an increase." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="max_points" class="Tunable" default="0" display="Max Points" muid="386EBFEE11AD9670" description="The point total that a stat cannot go above when increasing. &#xA;If the increase would go above this point total, instead it will&#xA;just be equal to this point total." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="rank" class="TunableMaxRank" display="Rank" muid="7DF4C578236B879E" description="The max rank a stat can achieve after an increase." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="max_rank" class="TunableRange" default="0" display="Max Rank" muid="708ACB0B0EFC84D8" min="0" max="None" description="The rank that a stat cannot go beyond when increasing.&#xA;If the increase would go beyond achieving this rank, instead&#xA;it will be set to the min points required to meet this rank.&#xA;This will prevent any gains toward the next rank from occurring.&#xA;&#xA;NOTE: Must be used with a RankedStatistic or it will return 0&#xA;as the max." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="object_cost_multiplier" class="OptionalTunable" default="disabled" display="Object Cost Multiplier" muid="2B03EBE9E997DB2A" description="When enabled allows you to multiply the stat gain amount based on the &#xA;value of the object specified." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="431C14449243B313" />
                        <TunableTuple name="enabled" class="TunableTunableObjectCostModifierCurve" display="Enabled" muid="D26E52F7D4558623" description="A construct that determines a multiplier based on the value/cost of an&#xA;object." Deprecated="False" filter="0" group="General">
                            <TunableList name="multiplier_curve" class="TunableCurve" display="Multiplier Curve" muid="7924F798CC8341A7" description="The multiplier will be determined by interpolating against a curve.&#xA;The value of the subject in simoleons is used. This means that a &#xA;curve for cost should have value at its x-axis." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableVector2" muid="E6F91ED7BCDCF2C2" description="Point on a Curve" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="x: Value" muid="E1CB284073C6A315" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="y" class="Tunable" default="0.0" display="y: Multiplier" muid="A349EFEE2E96226" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                            <TunableEnum type="ParticipantTypeSingle" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="292209E762B361C6" static_entries="interactions.ParticipantTypeSingle" description="The object whose cost you want to base the multiplier on." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="PeriodicStatisticBehavior" name="periodic_change_behavior" class="TunableEnumEntry" default="APPLY_AT_START_ONLY" display="Periodic Change Behavior" muid="C49D039DA6EAB80B" static_entries="statistics-statistic_enums.PeriodicStatisticBehavior" description="When applying this change operation at the beginning of an interaction&#xA;as part of a periodic statistic change and statistic is&#xA;a continuous statistic, tune the behavior of this operation when&#xA;interaction begins.&#xA;&#xA;Terminology:&#xA;BaseBehavior: For change operations that succeed chance&#xA;and test or if chance is 100% or no tests, the statistic stores the&#xA;start time and when interaction ends determine how much time is passed&#xA;and multiply amount.  Continuous statistic WILL NOT decay with this&#xA;behavior.  This is for better performance.&#xA;&#xA;IntervalBehavior:  If continuous statistic is using interval behavior.&#xA;the amount tuned will be given at specified interval if chance and&#xA;tests succeeds.  Continuous statistics WILL decay between interval&#xA;time.&#xA;        &#xA;Tuning Behavior &#xA;APPLY_AT_START_ONLY: If chance and tests for change operation is&#xA;successful, periodic update will occur and follow BaseBehavior.  If&#xA;either fail, change operation is not given at any point.&#xA;&#xA;RETEST_ON_INTERVAL: If test and chance succeeds, then this will follow&#xA;BaseBehavior.  If test or chance fails, this operation will follow&#xA;interval behavior.&#xA;&#xA;APPLY_AT_INTERVAL_ONLY: This will strictly follow Interval Behavior." Deprecated="False" filter="0" group="General" />
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="5F7A7280D9ADAC19" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TunableList name="statistic_multipliers" class="TunableList" display="Statistic Multipliers" muid="67E34CCC6E67730" description="Tunables for adding statistic based multipliers to the payout in the&#xA;format:&#xA;&#xA;amount *= statistic.value" Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTunableStatisticModifierCurve" muid="C499A4116FD46A5F" description="A construct that determines a multiplier based on a statistical value." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="multiplier" class="TunableVariant" default="raw_value" display="Multiplier" muid="F5925A92F061A289" description="Define how the multiplier will be applied." Deprecated="False" filter="0" group="General">
                                <Tunable name="raw_value" class="TunableExistance" display="Raw Value" muid="1334ABDE45ABF11B" />
                                <TunableList name="value_curve" class="TunableCurve" display="Value Curve" muid="8CAA4356B390A180" description="The multiplier will be determined by interpolating against a&#xA;curve. The user-value is used. This means that a curve for&#xA;skills should have levels as its x-axis." Deprecated="False" filter="0" group="General">
                                    <TunableTuple class="TunableVector2" muid="15906A67E359F3C4" description="Point on a Curve" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="EF3B983FB5284D15" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="4848E53011D51E6" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableList>
                            </TunableVariant>
                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="9CA18DFB6560E9FD" description="The payout amount will be multiplied by this statistic's value." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="D48B4C29955E99E" static_entries="interactions.ParticipantType" description="The participant to look for the specified statistic on." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="6792471EDB6B7701" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="AA67CFEDB7AFD6AE" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="905664BFC7864F7B" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="E465DE36685D43EE" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="36F38BBB75BDC588" />
                    </TunableVariant>
                    <TunableList name="tunable_multipliers" class="TunableList" display="Tunable Multipliers" muid="4E3617D44327A54A" description="List of multipliers to be applied when gaining amount" Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTunableMultiplier" muid="9306D0AEFB7F0B30" description="A construct that determines a total multiplier value based on tunable tests." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="80FBD947B959B9AC" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="68B33E0B6CC9E245" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="2252B5C4263DB38A" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="B0E4C62F073AFD69" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="C986C17615AA8BE3" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="statistic_change_by_category" class="TunableChangeStatisticByCategory" display="Statistic Change By Category" muid="FAF7AAA8A29990DA" description="Change value of  all statistics of a specific category." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="D713452A55CA2D22" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="47481B317A5F865D" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="E04D510CB6D1522D" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="2D16AAC7361F1569" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="9ADA9843ED4D6843" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="F5091D444BEC0D8A" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="change" class="TunableVariant" default="none" display="Change" muid="1E42C56E66A4F807" Deprecated="False" filter="0" group="General">
                        <Tunable name="none" class="TunableExistance" display="None" muid="800E375A992BA8B6" />
                        <TunableTuple name="percent_change" class="TunablePercentChangeAmountFactory" display="Percent Change" muid="966AF2E16048D397" Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="percent_change_amount" class="TunablePercent" default="-50" display="Percent Change Amount" muid="4935A10CC9D6F6EC" min="-100" max="100" description="Percent of current value of statistic should amount&#xA;be changed.  If you want to decrease the amount by&#xA;50% enter -50% into the tuning field." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="stat_change" class="TunableChangeAmountFactory" display="Stat Change" muid="41C01F8CAA4A8796" Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="change_amout" class="Tunable" default="0" display="Change Amout" muid="19DF1A800596AAF" description="Amount of change to be applied to statistics that match category." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="StatisticCategory" name="statistic_category" class="TunableEnumEntry" default="INVALID" display="Statistic Category" muid="10834757D9E0867E" dynamic_entries="statistics-statistic_categories.StatisticCategory._elements" static_entries="statistics-statistic_categories.StatisticCategory" description="The category of commodity to remove." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="570F74E9318218C8" static_entries="interactions.ParticipantType" description="The sim(s) the operation is applied to." Deprecated="False" filter="0" group="General" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="4D222FDFEF28EC2B" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D2287E6205E82B46" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="DD54CAA8E797ED55" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="6511E42DD26F2BC1" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="5E3F40C8A0B2241D" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="3F0B31F8E837090E" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_lock" class="TunableStatisticLockOp" display="Statistic Lock" muid="F62D5F830631331F" description="Lock or Unlock a statistic." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="4A828967E4C97288" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="2F815F080365544A" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="F20314E55428711A" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="4EC4DAA2D7A43608" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="219403269A2D47F4" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="82AD3E76DA39F3E2" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <Tunable type="bool" name="lock" class="Tunable" default="True" display="Lock" muid="65268FF3C1A7134E" description="Lock or unlock a statistic." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="StatisticLockAction" name="lock_action" class="TunableEnumEntry" default="DO_NOT_CHANGE_VALUE" display="Lock Action" muid="35896317F4ABA4FC" static_entries="statistics-statistic_enums.StatisticLockAction" description="Determine what to do with the value of a&#xA;statistic when we lock it." Deprecated="False" filter="0" group="General" />
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="6F14B7E74D092D89" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Commodity" />
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="919081A71E1FD1D4" static_entries="interactions.ParticipantType" description="The sim(s) the operation is applied to." Deprecated="False" filter="0" group="General" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="78969C65EFF7DC91" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="E26187D61F0AD844" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="C210159636A2FD84" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="E2E9A31355252399" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="B731C9AEC1A02D92" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="E1C73285366A256E" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_remove" class="TunableStatisticRemoveOp" display="Statistic Remove" muid="DCB48086C5E6B60D" description="Attempt to remove the specified statistic." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="77F11A176EE945A4" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="FC0CFC424F24FE54" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="B043044B30EAEE5E" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="DD48D06E32D00BD" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="4AEB0C7C240BDF45" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="832DCC789185D6B3" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_remove_by_category" class="TunableRemoveStatisticByCategory" display="Statistic Remove By Category" muid="CDA4F7AD42CD0A13" description="Remove all statistics of a specific category." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="chance" class="TunableSuccessChance" display="Chance" muid="9165406969D2DE9D" description="Percent chance that the loot action will be considered. The&#xA;chance is evaluated just before running the tests." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="base_chance" class="TunablePercent" default="100" display="Base Chance" muid="DB7663A7EB34D1AB" min="0" max="100" description="The basic chance of success." Deprecated="False" filter="0" group="General" />
                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="B99023E2F6D29DDB" description="A list of multipliers to apply to base_chance." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="C0D579DDAD380BE6" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="E6AC4E9D10D910DF" min="0" max="None" description="The multiplier to apply to base_chance if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="7E1881E74E0A59C7" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <TunableVariant type="None" name="count_to_remove" class="OptionalTunable" default="disabled" display="Count To Remove" muid="3FE030F13191E087" description="If enabled, randomly remove x number of commodities from the tuned category.&#xA;If disabled, all commodities specified by category will be removed." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="111270EEE9936DAE" />
                        <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="86AB8174E77CF0D8" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="StatisticCategory" name="statistic_category" class="TunableEnumEntry" default="INVALID" display="Statistic Category" muid="266DE066628F66FB" dynamic_entries="statistics-statistic_categories.StatisticCategory._elements" static_entries="statistics-statistic_categories.StatisticCategory" description="The category of commodity to remove." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="116CDFF81BF0AAD8" static_entries="interactions.ParticipantType" description="The sim(s) the operation is applied to." Deprecated="False" filter="0" group="General" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="73584CEC2CA2650E" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="2890429E619D0939" description="The test to decide whether the loot action can be applied." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="A381F01CB8AC9EF3" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="57FC09B3078B8CF9" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="ADC26294AA2E71BD" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="AF3D4AA5E0A3878" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_set" class="TunableStatisticSetOp" display="Statistic Set" muid="CE1AC75CF4E0D81E" description="Set a statistic to the provided value." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="86426C080D3B9DE5" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="DEBEBBED5867DD60" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="A693186D654D87BA" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="E95FFBC8DC759C75" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="370A19FEF9E92E36" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="D00A619D0E6F9957" />
                    </TunableVariant>
                    <Tunable type="int" name="value" class="Tunable" default="None" display="Value" muid="BC04AB7F547B7532" description="The new statistic value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic_set_in_range" class="TunableStatisticSetRangeOp" display="Statistic Set In Range" muid="12564810064E72AE" description="Set a statistic to a random value in the tuned range." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="A9E30837C0960667" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="F95C7413C8B919A3" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="B604B5AA14A7D352" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="F23259BAE72A8A86" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="C52A938F597EF1B0" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="47A3C3659D28083C" />
                    </TunableVariant>
                    <TunableVariant type="None" name="value_type" class="TunableVariant" default="int_range" display="Value Type" muid="323F7305FF300D49" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="float_range" class="Tunable_StatisticSetRangeFloat" display="Float Range" muid="ED6CD2AA73039E74" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="6E73849C5B863D31" description="The upper and lower bound of the range." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E5E22BB99E936676" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="2" display="Upper Bound" muid="892B5E56D9BA87FC" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="int_range" class="Tunable_StatisticSetRangeInt" display="Int Range" muid="187A7A8A07650EB5" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="350FEDB0BC989064" description="The upper and lower bound of the range." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="BF1A629EAA7891D5" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="2" display="Upper Bound" muid="59D68CDFD6933A9" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_set_max" class="TunableStatisticSetMaxOp" display="Statistic Set Max" muid="2E4005E880AAC6C0" description="Set a statistic to its maximum value." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="BB9808902B5EA92C" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="871765B76FBF57CE" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="30E7526897B2E951" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="3173098F86FF8D7" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="E4D0765FD21D0FCB" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="1733737A521F970E" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_set_min" class="TunableStatisticSetMinOp" display="Statistic Set Min" muid="166A9A449283228B" description="Set a statistic to its minimum value." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="A7A9346C6D864CA" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="3C775459AD00821E" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="1B444F1A0479E375" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="483F2DF30A1800CA" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="9427E04EC3CE9367" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="9653CCDE22AF84AE" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="statistic_set_rank" class="TunableStatisticSetRankOp" display="Statistic Set Rank" muid="4232216B5346AD58" description="Set a Ranked Statistic to a specific rank level." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="161226E1111B43A7" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RankedStatistic" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="405330B3A6D5CA42" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="54A8B261138D27BA" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="E894358D8DBB8F35" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="EBFD1757982E21B1" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="5BB762DDB51867AC" />
                    </TunableVariant>
                    <Tunable type="int" name="value" class="Tunable" default="None" display="Value" muid="C9AC03DDDA551D2C" description="The new rank value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic_transfer" class="TunableStatisticTransferOp" display="Statistic Transfer" muid="F8B210FB17F0C5BD" description="Transfer a statistic value from one target to another." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="59E1DF18382D6BC0" description="The statistic we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Commodity,Statistic,Skill,LifeSkillStatistic,RankedStatistic,TraitStatistic" />
                    <TunableEnum type="ParticipantType" name="statistic_donor" class="TunableEnumEntry" default="TargetSim" display="Statistic Donor" muid="D6BC417CD56CB4E6" static_entries="interactions.ParticipantType" description="The owner of the statistic we are transferring the value from." Deprecated="False" filter="0" group="General" />
                    <TdescFragTag name="subject_filter_tests" class="TunableTestSet" display="Subject Filter Tests" muid="8672A657603DF00F" description="These tests will be run once per subject. If the subject &#xA;participant of this loot action resolves to multiple objects, each &#xA;of those objects will be tested individually. Any subject that &#xA;fails this test will be ignored by this loot. This will have no &#xA;effect on whether we consider the loot to have passed testing on&#xA;on other subjects or targets. We can use this in cases where we &#xA;want to give loot based on some criteria like &quot;All active household&#xA;members that are dogs get this loot&quot;.&#xA;&#xA;These tests will have no effect on &quot;run tests first&quot; as they are&#xA;only used for participant filtering and not to determine loot &#xA;success.&#xA;&#xA;The resolver used for these tests is a SingleObjectResolver based &#xA;on subject sim. This means that test should generally be &#xA;testing against &quot;Actor&quot; and should not assume the presence of &#xA;additional participants that may be present in the containing loot.&#xA;Ask a GPE if you have questions." filter="0" group="General" />
                    <TunableVariant type="None" name="text" class="TunableVariant" default="use_default" display="Text" muid="FAC31D4749E63A9B" description="Specify the display text to use for this tunable. This tuning&#xA;structure may be shared across multiple tunables. It is up to the&#xA;system consuming the tunable to determine in which ways the tuned&#xA;display text is used.&#xA;&#xA;e.g. Loot Operations&#xA; The adventure system auto-generates notifications based on the loot&#xA; that was awarded from a chance card. A loot's display text, if&#xA; used, will be an item in the generated bulleted list. The ability&#xA; to override display text allows tuners to set custom next in such&#xA; notifications.&#xA; &#xA;e.g. Reward Tuning&#xA; Rewards have display text so that, similarly to adventures, a&#xA; bulleted list of entries can be auto-generated when obtained by a&#xA; Sim. Use this tunable to control the text of such entries." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_text" class="TunableExistance" display="No Text" muid="29529F0BD8A587D1" />
                        <Tunable type="int" name="override" class="TunableLocalizedString" default="0x0" display="Override" muid="BDDB6FE899F68B3C" description="Specify a string override. The tokens are different depending on&#xA;the type of tunable." Deprecated="False" filter="0" group="General" />
                        <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="17BFB065872FED20" />
                    </TunableVariant>
                    <TunableEnum type="TransferType" name="transfer_type" class="TunableEnumEntry" default="ADDITIVE" display="Transfer Type" muid="7209DF3D8B7F0D33" static_entries="statistics-statistic_ops.TransferType" description="Type of statistic transfer to use." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="transfer_type_average_advanced" class="OptionalTunable" default="disabled" display="Transfer Type Average Advanced" muid="6AE9E4D3F116C3CD" description="If enabled, the average calculation will be the sum of multiplying&#xA;the stat value and stat quantity then dividing with total quantity.&#xA;T  = Transferred Stat value&#xA;S  = Stat value&#xA;QT = Quantity Transferred Stat value&#xA;QS = Quantity Stat value&#xA;Result = ((T * QT) + (S * QS)) / (QT + QS)&#xA;&#xA;If disabled, the result will calculate Mean of 2 stat values.&#xA;Result = (T + S) / 2" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5CA9C07754CA54CC" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FB50C23D7F675078" description="Statistic quantities for both subject and donor." Deprecated="False" filter="0" group="General">
                            <Tunable type="statistic" name="quantity_stat" class="TunableReference" display="Quantity Stat" muid="6F9440CCED1A3618" description="Statistic quantity subject which will be applied to the&#xA;average calculation." allow_none="False" Deprecated="False" filter="0" group="General" />
                            <Tunable type="statistic" name="quantity_transferred_stat" class="TunableReference" display="Quantity Transferred Stat" muid="5E5DD9428379697C" description="Statistic quantity donor which will be applied to the&#xA;average calculation." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="transferred_stat" class="TunableReference" display="Transferred Stat" muid="DE371B7DB3D9834F" description="The statistic whose value to transfer." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <Tunable type="bool" name="confirm_leave_situation_for_work" class="Tunable" default="False" display="Confirm Leave Situation For Work" muid="AB24704AE50DA629" description="Sims in situations who go to work will automatically be pulled out&#xA;of the situation. If this is enabled, a dialog will show for&#xA;playable Sims, asking player to confirm going to work, decline&#xA;going, or take PTO (if Sim has any).&#xA;&#xA;Dialog that shows up is tunable at:&#xA;careers.career_tuning -&gt; Career -&gt; Leave_Event_Confirmation" Deprecated="False" filter="0" group="Special Cases" />

        <TunableList name="crafted_object_scoring" class="TunableList" display="Crafted Object Scoring" muid="A74DC58191F48F18" description="Test for objects crafted. Each test can have a separate score." Deprecated="False" filter="0" group="Scoring">
            <TunableTuple class="TunableTuple" muid="5B917A6274BCD9AB" description="Test for objects crafted. Each test can have a separate&#xA;score." Deprecated="False" filter="0" group="General">
                <TunableTuple name="object_list" class="TunableCraftedItemTest" display="Object List" muid="5694F7A31A4BFF3A" description="A test to see if the crafted item should give score." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="crafted_with_ingredients_test" class="OptionalTunable" default="disabled" display="Crafted With Ingredients Test" muid="DD4B43A6FC444ED1" description="If enabled, require the item to be crafted with specific ingredients" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="23E239EB0E402AB8" />
                        <TunableTuple name="enabled" class="TunableCraftingConsumedIngredientsTest" display="Enabled" muid="78F4F60DE339D5FF" description="The ingredients test to satisfy." Deprecated="False" filter="0" group="General">
                            <TunableList name="ingredient_list" class="TunableList" display="Ingredient List" muid="BDCF4B11BE7A8DB8" description="List of ingredient requirements.&#xA;Test will succeed if all listed ingredient were used in the crafting process." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableVariant" default="none" muid="ADEACD9557BE888B" description="Possible ingredient mapping by object definition of by &#xA;catalog object Tag." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="ingredient_by_definition" class="TunableIngredientRequirementByDef" display="Ingredient By Definition" muid="47F1F7C792D40010" description="An Ingredient Requirement that is defined by an object definition." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="count" class="TunableRange" default="1" display="Count" muid="55FF5CF10BD8B3B3" min="1" max="None" description="The number of this ingredient allowed/required." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object" name="ingredient_ref" class="TunableReference" display="Ingredient Ref" muid="25B7CCAD38C4C30F" description="Reference to ingredient object definition.&#xA;Example: gardenFruitGENOnion_01" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="ingredient_by_tag" class="TunableIngredientRequirementByTag" display="Ingredient By Tag" muid="76D4AEE607380F34" description="An Ingredient Requirement that is defined by a tag." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="count" class="TunableRange" default="1" display="Count" muid="8FA653E98760088" min="1" max="None" description="The number of this ingredient allowed/required." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="ingredient_tag" class="TunableEnumEntry" default="INVALID" display="Ingredient Tag" muid="CA7369EAA7242ED5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Tag that ingredient object should have.&#xA;Example: Func_Ingredient_Fruit" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="8E0930A04BE3C024" />
                                </TunableVariant>
                            </TunableList>
                            <TunableVariant type="None" name="subject" class="OptionalTunable" default="disabled" display="Subject" muid="799DA53DE9E9DCB3" description="Participant to look up the crafting process.  &#xA;Tuning this is not necessary if this loot run within a crafting interaction or during the crafting process." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8728B144777A4097" />
                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="Object" display="Enabled" muid="4F9141763F573E19" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FBE310CA94D57135" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E83B6CB1B034FD9" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9DD5F2A617354760" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="52540052BC2D9B4C" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AD416D63370B2DCE" />
                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="771BD2DD5C72F60A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BE5F145E79237F45" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="692C43356A59F71C" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="1B5965EDFBCC03F1" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3EFB7A03C3602EE" />
                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="58FCE9D0C9E042C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DCD06C439DF0925A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="91776590D0B75879" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="59AAF7A612D85D4D" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="5EE157BC6C9F3FE1" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="716BA6DF4F96C115" Deprecated="False" filter="0" group="General">
                                <Tunable type="object" class="TunableReference" muid="D15463320319362A" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="57A56F93B8A8D9C4" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="316646259834CBA4" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="64C9F02B1EA9DC34" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="561935CEE3F4785D" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="6FAC4167DF710C5" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                            <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="C2926F63946B7B5F" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <Tunable type="int" name="score" class="Tunable" default="1" display="Score" muid="487D95D317E7D1CC" description="Score for passing the test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <TunableEnum type="JobHolderDiedOrLeftAction" name="died_or_left_action" class="TunableEnumEntry" default="DO_NOTHING" display="Died Or Left Action" muid="7202AFEA2CDB6A0F" static_entries="situations-situation_types.JobHolderDiedOrLeftAction" description="The action to take if a sim in this job dies or leaves the lot.&#xA;&#xA;Examples: &#xA;If the bartender leaves the ambient bar situation, you need a new one (REPLACE_THEM)&#xA;If your creepy uncle leaves the wedding, you don't care (DO_NOTHING)&#xA;If your maid dies cleaning the iron maiden, you are out of luck for today (END_SITUATION).&#xA;&#xA;NB: Do not use REPLACE_THEM if you are using Sim Churn for this job." Deprecated="False" filter="0" group="Special Cases" />

        <Tunable type="int" name="display_name" class="TunableLocalizedString" default="0x0" display="Display Name" muid="E772B402DF670649" description="Localized name of this job. This name is displayed in the situation&#xA;creation UI where the player is making selection of sims that belong&#xA;to a specific job. E.g. &quot;Guest&quot;, &quot;Bride or Groom&quot;, &quot;Bartender&quot;.&#xA;&#xA;Whenever you add a display name, evaluate whether your design &#xA;needs or calls out for a tooltip_name." allow_none="True" Deprecated="False" filter="0" group="UI" />

        <Tunable type="bool" name="do_not_spawn" class="Tunable" default="False" display="Do Not Spawn" muid="660D5DB3AFF4141" description="If enabled, this sim won't actually be invited to fill the job.&#xA;This is used for Funerals or other situations where details of a&#xA;sim are needed, but the sim itself isn't." Deprecated="False" filter="0" group="Special Cases" />

        <Tunable type="bool" name="elevated_importance" class="Tunable" default="False" display="Elevated Importance" muid="795F7ED13A617B24" description="If True, then filling this job with a Sim will be done before&#xA;filling similar jobs in this situation. This will matter when&#xA;starting a situation on another lot, when inviting a large number&#xA;of Sims, visiting commercial venues, or when at the cap on NPCs.&#xA;&#xA;Examples:&#xA;Wedding Situation: the Bethrothed Sims should be spawned before any guests.&#xA;Birthday Party: the Sims whose birthday it is should be spawned first.&#xA;Bar Venue: the Bartender should be spawned before the barflies." Deprecated="False" filter="1" group="Special Cases" />

        <TunableList name="emotional_setup" class="TunableList" display="Emotional Setup" muid="9715806CF4934E6A" description="Apply the WeightedSingleSimLootActions on the sim that is assigned this job. These are applied&#xA;only on NPC sims since the tuning is forcing changes to emotions.&#xA;&#xA;E.g. an angry mob at the bar, flirty guests at a wedding party." Deprecated="False" filter="0" group="On Creation">
            <TunableTuple class="TunableTuple" muid="63503946164665CA" Deprecated="False" filter="0" group="General">
                <Tunable type="action" name="single_sim_loot_actions" class="TunableReference" display="Single Sim Loot Actions" muid="9FD2C520AA925BD" allow_none="False" Deprecated="False" filter="0" group="General" restrict="WeightedSingleSimLootActions" />
                <Tunable type="int" name="weight" class="Tunable" default="1" display="Weight" muid="E7AD10246FC5C4D" description="Accompanying weight of the loot." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Tunable type="sim_filter" name="filter" class="TunableReference" display="Filter" muid="863B8F593272EFBC" allow_none="False" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />

        <Tunable type="bool" name="game_breaker" class="Tunable" default="False" display="Game Breaker" muid="A7EAE142F86D845E" description="If True then this job must be filled by a sim&#xA;or the game will be broken. This is for the grim reaper and&#xA;the social worker." Deprecated="False" filter="1" group="Special Cases" />

        <Tunable type="bool" name="give_rewards_to_npc" class="Tunable" default="False" display="Give Rewards To Npc" muid="6815386E2F900D0C" description="If true we will give this reward to NPCs instead of only to&#xA;selectable sims." Deprecated="False" filter="0" group="Scoring" />

        <Tunable type="int" name="goal_scoring" class="Tunable" default="1" display="Goal Scoring" muid="C6DC93FC3F36E608" description="The score for completing a goal" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="Scoring" />

        <TunableVariant type="None" name="goodbye_notification" class="TunableVariant" default="no_notification" display="Goodbye Notification" muid="5945E0D23060765C" description="The &quot;goodbye&quot; notification that will be set on Sims with this&#xA;situation job. This notification will be displayed when the&#xA;Sim leaves the lot (unless it gets overridden later).&#xA;Examples: the visitor job sets the &quot;goodbye&quot; notification to&#xA;something so the player knows when visitors leave; the party&#xA;guest roles use &quot;No Notification&quot;, because we don't want 20-odd&#xA;notifications when a party ends; the leave lot jobs use &quot;Use&#xA;Previous Notification&quot; because we want leaving Sims to display&#xA;whatever notification was set earlier." Deprecated="False" filter="0" group="General">
            <Tunable name="never_use_notification_no_matter_what" class="TunableExistance" display="Never Use Notification No Matter What" muid="3956A352A232DA4C" />
            <Tunable name="no_notification" class="TunableExistance" display="No Notification" muid="2CF07A3780358E46" />
            <TunableVariant type="None" name="notification" class="TunableNotificationSnippet" default="literal" display="Notification" muid="9C593EAAF2191619" description="This may be tuned in place here using 'literal' or as a reference to a Notification tuning snippet." Deprecated="False" filter="0" group="General">
                <TunableTuple name="literal" class="TunableUiDialogNotification" display="Literal" muid="C4D7453B5CD7375D" description="A dialog that is displayed as a notification." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="additional_texts" class="OptionalTunable" default="disabled" display="Additional Texts" muid="CB669C5F493ED57" description="If enabled, add additional text to the dialog" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B064C350EC7F7A4" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="D067996E05172DD1" Deprecated="False" filter="0" group="General">
                            <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="AA09A31EDE0F2B81" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                    <Tunable type="bool" name="anonymous_target_sim" class="Tunable" default="False" display="Anonymous Target Sim" muid="90A3AA6A99AF40B0" description="DEPRECATED! Please use custom_mask_target_sim instead.&#xA;Use InGame/UI/Icons/Dialog/phone_anonymous_caller_icon.png and UI/Gameplay/Phone:UnknownCallerName.&#xA;&#xA;If this dialog is using a target sim id to give a conversation type view and this is checked, then the&#xA;target sim icon will instead be replaced by an anonymous caller." Deprecated="True" filter="0" group="General" />
                    <TunableVariant type="None" name="audio_sting" class="OptionalTunable" default="disabled" display="Audio Sting" muid="C95D59A60707BCF5" description="If enabled, play an audio sting when the dialog is shown." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3FCCEAEB1DDC54C9" />
                        <TunableTuple name="enabled" class="TunablePlayAudio" display="Enabled" muid="2F1DEC94B36AA2F9" Deprecated="False" filter="0" group="General">
                            <Tunable type="ResourceKey" name="audio" class="TunableResourceKey" default="None" display="Audio" muid="1FE53315B0EDD6C3" description="The sound to play." Deprecated="False" filter="0" group="General" resource_types="0x39b2aa4a" />
                            <Tunable type="bool" name="immediate_audio" class="Tunable" default="False" display="Immediate Audio" muid="B469B4D1276D9A1D" description="If checked, this audio will be triggered immediately, nothing&#xA;will block.&#xA;&#xA;ex. Earbuds audio will be played immediately while &#xA;the Sim is routing or animating." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="joint_name_hash" class="OptionalTunable" default="disabled" display="Joint Name Hash" muid="21B403A8213FA596" description="Specify if the audio is attached to a slot and, if so, which&#xA;slot. Otherwise the audio will be attached to the object's &#xA;origin." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="46526464B6DF616D" />
                                <Tunable type="str" name="enabled" class="TunableStringHash32" default="None" display="Enabled" muid="FB7C66F7547345E3" description="The name of the slot this audio is attached to." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="bool" name="play_on_active_sim_only" class="Tunable" default="False" display="Play On Active Sim Only" muid="D30C5DCAACC2BC3C" description="If enabled, and audio target is Sim, the audio will only be &#xA;played on selected Sim. Otherwise it will be played regardless &#xA;Sim is selected or not.&#xA;&#xA;If audio target is Object, always set this to False. Otherwise&#xA;the audio will never be played.&#xA;&#xA;ex. This will be useful for Earbuds where we want to hear the&#xA;music only when the Sim is selected." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="audio_sting_owner" class="OptionalTunable" default="disabled" display="Audio Sting Owner" muid="88E611E01A0003D5" description="If enabled, this will set the owner of the audio sting when the&#xA;dialog is shown." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7EBBB428CE01B60F" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="32786EDFE9788536" static_entries="interactions.ParticipantType" description="The participant of the interaction who will play the audio_sting." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="UiDialogNotificationAutoDeleteReason" name="auto_delete_reason" class="TunableEnumEntry" default="NO_REASON" display="Auto Delete Reason" muid="9EC4B3B758A28E9C" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationAutoDeleteReason" description="Specify the notification's auto-delete reason." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="background_audio" class="OptionalTunable" default="disabled" display="Background Audio" muid="85C7C42E5BF2DD83" description="If enabled, play background audio while the dialog is open." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E655B23C1FF4150E" />
                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="413848381C2AA6B2" description="The background audio event string." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="background_image" class="OptionalTunable" default="disabled" display="Background Image" muid="DAE50E85709561" description="If enabled, add a background image to the dialog.  This will only &#xA;be used in the case where dialog_bg_style is BG_DYNAMIC_IMAGE." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C7193BEE2069001" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableResourceKey" default="None" display="Enabled" muid="DCC1EF8CF9A705E3" description="The background image for the family portrait." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <TunableVariant type="None" name="custom_mask_target_sim" class="OptionalTunable" default="disabled" display="Custom Mask Target Sim" muid="5EE9AD98C86F5C1A" description="When tuned, display the given icon/name for the target Sim instead of the Sim's actual icon/name." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="21219DBAAE07AF42" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DD548A8868C937AB" Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="alert_icon" class="OptionalTunable" default="disabled" display="Alert Icon" muid="A9FF6EACF8D9C8E" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A6F9FA1B8F817AC8" />
                                <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="859C5FF10745B5C0" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="6137A2D09C97F104" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="23286F31C6A48EB3" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="9AF1AE6F90086059" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="52B65C5A99EA6B1A" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="3D24CA5C04D9FEB6" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="49F80D6BBC88EC10" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="B05F0F6590853CEE" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="4AD9C5E3F6E15B69" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="1A983E1B0EE627E2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="A3D200D6D2F60A0A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="6F29F9BB690598E6" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="4A49FAB1E3318568" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="F85B662212D48F0C" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableTuple>
                                    <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="A473A85C7E23B565" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="828123D84CEABAB5" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="8DBC76C1445DE10" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="14B5730C3F73659D" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="A5F7472A15930F9F" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="2B46195A80B0052F" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="alert_sim_name" class="OptionalTunable" default="disabled" display="Alert Sim Name" muid="96E8B68CF5ACB55A" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A5B283EA110152CE" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="647C6BF0669BFF22" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="header_icon" class="OptionalTunable" default="disabled" display="Header Icon" muid="633F0EBD9495DEF2" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12DD17A46339C0E2" />
                                <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="D5C780E0595DD77" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="DD87D8784BA554C2" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="D293FE5146B25AC3" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="137E87980276D2F4" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="7B84805C22571771" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="DA2A830E3EF7C55E" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="975FA0A802D1A556" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="4A0DDC6A4FD915BE" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="BC08F5D45DEA7031" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="D8565FE60CDD2CC0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="785B6DE6186E546F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="DFC6B92461F994C2" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="1002F857DE2800F9" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="5A411AC1D6C8F477" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                    </TunableTuple>
                                    <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="C5EDB4433D9E0E93" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="5F1968D52BD8A901" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="609BBAE720E2E7C3" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="E8A31627F4B8F706" Deprecated="False" filter="0" group="General">
                                        <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="1686BBE60B61F266" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="5745E073F1F612E9" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="UiDialogBGStyle" name="dialog_bg_style" class="TunableEnumEntry" default="BG_DEFAULT" display="Dialog Bg Style" muid="34BBAD37E02E2285" static_entries="ui-ui_dialog.UiDialogBGStyle" description="The style background to apply to this dialog." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="FooterType" name="dialog_footer_type" class="TunableEnumEntry" default="AUTOMATIC" display="Dialog Footer Type" muid="C7A9BC43D3967AD7" static_entries="ui-ui_dialog.FooterType" description="An enumeration of the type for YES BUTTONS and DIALOG BUTTON footers.&#xA;AUTOMATIC lets the code decide which footer to use.&#xA;YES_BUTTONS_FOOTER is a footer with an OK BUTTON by default.&#xA;DIALOG_BUTTONS_FOOTER is a footer with only DIALOG BUTTONS." Deprecated="False" filter="0" group="General" />
                    <TunableList name="dialog_options" class="TunableEnumFlags" default="DISABLE_CLOSE_BUTTON" display="Dialog Options" muid="7A507F09A5497119" description="Options to apply to the dialog." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="UiDialogOption" class="TunableEnumEntry" default="DISABLE_CLOSE_BUTTON" muid="99DC1A6A2B93C8D9" static_entries="ui-ui_dialog.UiDialogOption" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableEnum type="UiDialogStyle" name="dialog_style" class="TunableEnumEntry" default="DEFAULT" display="Dialog Style" muid="CF4A911D7A83EEEF" static_entries="ui-ui_dialog.UiDialogStyle" description="The style layout to apply to this dialog." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="UiDialogNotificationExpandBehavior" name="expand_behavior" class="TunableEnumEntry" default="USER_SETTING" display="Expand Behavior" muid="AF87A58164A40282" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationExpandBehavior" description="Specify the notification's expand behavior." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="icon" class="OptionalTunable" default="disabled" display="Icon" muid="8D2D7282529286B5" description="If enabled, specify an icon to be displayed." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D6250883CB289DA" />
                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="3397F91F9DF397E" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="6B80BC8BC01EBB30" Deprecated="False" filter="0" group="General">
                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="7583FC41E410A027" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="73CF9EB1E8C35666" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="EC58BF5825E295FB" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="A05EE474BE6D63C" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="ED237A0F6B395FE5" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="A190548E3E022A88" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="F584DDEB0B1B7481" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="87A6A7EA1818B180" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="253246531ED54C4" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="80E0C5B4474F15B8" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="BF98CDBC15B918A6" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="DE029982C377A0FC" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableTuple>
                            <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="54F994430352627D" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="2202DF3DB3C8A724" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="66EEA2A268CEBF13" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="51C1A2C8145705AB" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="B9F0B0791B7D23E7" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="96FF8C4DAADDFE6B" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="icon_override_participant" class="OptionalTunable" default="disabled" display="Icon Override Participant" muid="2771A3B18A9634BB" description="If enabled, allows a different participant to be considered the&#xA;owner of this dialog. Typically, this will only affect the Sim&#xA;portrait used at the top of the dialog, but there could be other&#xA;adverse affects so be sure to talk to your UI partner before tuning&#xA;this." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A8BA92040731D3AD" />
                        <TunableEnum type="ParticipantTypeSingleSim" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="6C9E6C185DDD1266" static_entries="interactions.ParticipantTypeSingleSim" description="The participant to be used as the owner of this dialog. If this&#xA;participant doesn't exist, the default owner will be used&#xA;instead." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="UiDialogNotificationLevel" name="information_level" class="TunableEnumEntry" default="SIM" display="Information Level" muid="B320A309DD714872" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationLevel" description="Specify the notification's information level." Deprecated="False" filter="0" group="General" />
                    <TunableList name="override_text_mapping" class="TunableMapping" display="Override Text Mapping" muid="51DE81432BE7B1C3" mapping_key="sim_age" mapping_value="override_string" description="If enabled, we will override the TNS text depending on age" Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="90750F85323D3B2E" Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="override_string" class="TunableLocalizedString" default="0x0" display="Override String" muid="4DA4F5B14185698E" description="The alternate text that will be displayed in the TNS." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="sim_age" class="TunableEnumEntry" default="ADULT" display="Sim Age" muid="5DACD2F3F865A69E" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                    <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="2E8B90BE5B628B17" description="This field is deprecated. Please use 'icon' instead." Deprecated="True" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7347935CB2B44E56" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="F1583E752A6BE86" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="PhoneRingType" name="phone_ring_type" class="TunableEnumEntry" default="NO_RING" display="Phone Ring Type" muid="3520422F9BEB1FDD" static_entries="ui-ui_dialog.PhoneRingType" description="The phone ring type of this dialog.  If tuned to anything other&#xA;than None this dialog will only appear after clicking on the phone." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="primary_icon_response" class="OptionalTunable" default="disabled" display="Primary Icon Response" muid="696A696D998D4922" description="If enabled, associate a response to clicking the primary icon." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A362D0EB72AEE227" />
                        <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="1F3339D4893007BC" description="The response associated to the primary icon." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="249082DB960832A8" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2F393ABB86768A8B" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="E9151F0FDCAA9670" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="239A9D55D881DC72" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B30BBAE6DA5817" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="34C35D06A249441E" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="ABEE4D5C61199D9E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="244A0A45C2129DF9" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="8AA6B7BDDF92EF89" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="63A754E905113AA5" />
                                <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="85074330FAB958BE" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableVariant>
                            <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="6E653B48FBF9A54C" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="912CF0E5D7A12053" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EDBC24D84405F604" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="7237AACC6E970C44" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="loots" class="TunableList" display="Loots" muid="88959925DD30AA17" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                        <Tunable type="action" class="TunableReference" muid="2D484A24518F2171" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="F5CDF71B27825996" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3A35279CC8EAC43" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="7E98A3C5EB6E7FC0" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="F2A35155E6F22845" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="C4DFFB81DD9B4993" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="CE5F8DFC8F8806AB" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="E82B11030F2EBD5F" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="65998B64FA412035" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="8053EACA3853ECA9" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="6034C206E68A5E3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="1E4D22B56BD5E03D" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="C8EE0A63DB13A36F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="F0DEB46976E9AEC2" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="D5A9FD14AF826CBC" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F80B881A913A1888" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="B3ACC71C8C1B0D2A" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="5D24DF49ECA7CFE7" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="408A7AE2B18F4C6B" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="42586A2EFC4AD3E8" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="ACBFCCE856B36D80" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="EF321245897F575E" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89BDB398396C2F1B" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F8A29647EA367A8" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="A7700F1C752E1CC2" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F6CFBF947E11A50" />
                                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="240B41895F09B714" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="61AE808DF914CA60" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8775048B056BBC10" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="ECB4201394F74FE9" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="69A5268444000C9B" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="secondary_icon" class="OptionalTunable" default="disabled" display="Secondary Icon" muid="654696B5C276A766" description="If enabled, specify a secondary icon to be displayed. Only certain&#xA;dialog types may support this field." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F20E8807B24C1C87" />
                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="BAD0BF3C11F084B5" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="74859C5F16A49251" Deprecated="False" filter="0" group="General">
                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="5A25A3D05E7BF20B" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="1D5E88785EAC2FDE" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="79318C92C3E2274A" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="49498D75ADC5A556" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="1EB8F97B1B2696A7" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="BA28A2BA54DBE80" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="26B613AA384C3007" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="CF68C0CE7B812791" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="AD6A76F7E5DCEF55" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="5AA4652FCB1BC197" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="2C32F31E534DEF9E" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="EEAEC353F8CC2A58" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableTuple>
                            <TunableTuple name="small_business" class="TunableSmallBusinessIconFactory" display="Small Business" muid="907E7B869A1455BE" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="CA7DA6E2DE4ACBAD" description="The Participant who owns the small business we want to get the icon from." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="5D5A82C0129DAEFC" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="9D599E037F6DCB52" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="4A507A9E09671FB1" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="FD05F16E674C3028" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="secondary_icon_response" class="OptionalTunable" default="disabled" display="Secondary Icon Response" muid="2B39AA6BADF51069" description="If enabled, associate a response to clicking the secondary icon." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16478D709893847" />
                        <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="36F58A3568EF873A" description="The response associated to the secondary icon." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="5947A6227E764976" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF966A017F80D2F7" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="10FECD407CF019E4" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="97D03EDF4DA10003" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F576D1080DED1216" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="25E4B7CA7A4C7923" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="2FF92426238C897B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="A2469D8113505F39" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="B36AA728FFD121A9" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="602FF475B7A822F5" />
                                <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="53F0A8048C82D26A" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableVariant>
                            <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="536FA91406F22E58" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C0F8E3D4AFA8F98" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D751F1717755CB07" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="D6B81D79DC325630" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="loots" class="TunableList" display="Loots" muid="CDF2E5A6E5FB4CAF" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                        <Tunable type="action" class="TunableReference" muid="19C79D87471FD718" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="ACDC0E7B46F32F21" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AB632A843E6773D5" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="68AB39EBA7274175" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="A294DB74A5537D0C" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="9E613BC57C378E58" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="58F5A5943E2EFCC1" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="6B90C1632E2E4925" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="3179D4FF9A91725B" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="8E677A2AC45921C6" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="81E561C0AA13E908" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="8A0E7A60349A2D05" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="40A2EEE20AB8B1A8" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="F198F2C8A329BC4F" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="AB3358D55EE1E085" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="500608939FBD5550" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="CD973E0F97C44821" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="6FFCE96AE6A20F8A" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="FE1C783264C6F442" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="A054E328BF49F2DE" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="AC2F79FFDCCE5B74" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="B77E47804E07D0DD" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="599DB3B976EE8ECE" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="904F0450FD0F9B86" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="ED428EE1F2F3535B" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="70C7FD4FCABE786" />
                                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="321311BBA749EFF4" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="B61B4308004E5F4" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EB79D8C0BEBDCB63" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="1910B505F8EF3AB2" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="6E4515FBA827DB12" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="subtitle" class="OptionalTunable" default="disabled" display="Subtitle" muid="A98A0D251156BEDA" description="If enabled, this dialog will include subtitle text." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B967093B692524F2" />
                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="243AD25AD9721E7C" description="The dialog's subtitle." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="text" class="TunableLocalizedStringFactoryVariant" default="single" display="Text" muid="BDA4C247F621BCD5" description="The dialog's text." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="concatenation" class="TunableLocalizedStringFactoryConcatenation" display="Concatenation" muid="63C89A10AFEAF309" description="A list of localized string concatenations. These strings will be joined together into single line-separated string" Deprecated="False" filter="0" group="General">
                            <TunableList name="concatenations" class="TunableList" display="Concatenations" muid="B7A4DAFBE45CD54A" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableLocalizedStringSnippet" default="literal" muid="B6C3797DDC8238E9" description="This may be tuned in place here using 'literal' or as a reference to a LocalizedString tuning snippet." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="literal" class="TunableLocalizedString" default="0x0" display="Literal" muid="DBDB9328532DED47" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="C9F85F5C07A834B0" description="A reference to a LocalizedString tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocalizedString" />
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                        <Tunable type="int" name="single" class="TunableLocalizedString" default="0x0" display="Single" muid="C4287D83C2586629" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="variation" class="TunableLocalizedStringFactoryVariation" display="Variation" muid="F4E9BF287BFA4C8A" description="A list of possible localized string variations." Deprecated="False" filter="0" group="General">
                            <TunableList name="variations" class="TunableList" display="Variations" muid="7DD9C56C1129536D" Deprecated="False" filter="0" group="General">
                                <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="1555B8A4902279C6" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="text_tokens" class="OptionalTunable" default="disabled" display="Text Tokens" muid="14958A02DAE01EC3" description="If enabled, define text tokens to be used to localized text." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2791862CA77B223" />
                        <TunableTuple name="enabled" class="TunableLocalizationTokens" display="Enabled" muid="8F500886526A2104" description="Define the text tokens that are available to all text fields in&#xA;the dialog, such as title, text, responses, default and initial&#xA;text values, tooltips, etc." Deprecated="False" filter="0" group="General">
                            <TunableList name="tokens" class="TunableList" display="Tokens" muid="FC3C8219EE98AECA" description="A list of tokens that will be returned by this factory. Any string&#xA;that uses this token will have token '0' be set to the first&#xA;element, '1' to the second element, and so on. Do not let the list&#xA;inheritance values confuse you; regardless of what the list element&#xA;index is, the first element will always be 0, the second element 1,&#xA;and so on." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableVariant" default="participant_type" muid="10C9CB95EFCDD0D7" description="Define what the token at the specified index is." Deprecated="False" filter="0" group="General">
                                    <Tunable name="active_holiday" class="TunableExistance" display="Active Holiday" muid="93E71A1F61F541FC" />
                                    <TunableTuple name="animal_home" class="TunableTuple" display="Animal Home" muid="11D0AE892E342574" description="Tokens for the animal home." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="animal_home_data" class="TunableVariant" default="max_capacity" display="Animal Home Data" muid="1C7BEF72F97204E5" description="Data you'd like to fetch about the animal home." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_occupancy" class="TunableExistance" display="Current Occupancy" muid="58B85462CF1BF50E" />
                                            <Tunable name="max_capacity" class="TunableExistance" display="Max Capacity" muid="B41912DB3993DAD" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.Object" display="Participant" muid="8F755D73BC1CDC41" static_entries="interactions.ParticipantTypeSingle" description="The participant from whom we will fetch specified data.&#xA;This is expected to resolve to an Animal Home." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="associated_club" class="TunableTuple" display="Associated Club" muid="8156CB68982C5E63" description="The token is a stored &quot;associated_club&quot; on this&#xA;interaction. Only works with ClubMixerInteractions or&#xA;ClubSuperInteractions." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="buck_amount" class="TunableTuple" display="Buck Amount" muid="B3C4FBF8F8E22B13" description="The token is a number repesenting the amount of the &#xA;specified buck type the specified participant has." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="C623125C8B0BFE7" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D7F4CAC24735EF73" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_duration_remaining" class="TunableTuple" display="Buff Duration Remaining" muid="B6B305F1573E6109" description="Tokens for the remaining duration of a buff" Deprecated="False" filter="0" group="General">
                                        <Tunable type="buff" name="buff" class="TunableReference" display="Buff" muid="97FDB838AEDED665" description="The buff whose duration we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6B4E7AE3471C2E2" static_entries="interactions.ParticipantTypeSingleSim" description="The participant from whom we will fetch the specified&#xA;buff duration." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_data" class="TunableTuple" display="Career Data" muid="3829665B85B9D236" description="The token is a localized string, number, or Sim,&#xA;representing the specified career data for the specified&#xA;participant." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career_data" class="TunableVariant" default="current_level_name" display="Career Data" muid="CD4E19F9E1820AA8" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_level_name" class="TunableExistance" display="Current Level Name" muid="EC146E0801B4E80F" />
                                            <Tunable name="current_level_salary" class="TunableExistance" display="Current Level Salary" muid="F842261005E29682" />
                                            <Tunable name="next_level_name" class="TunableExistance" display="Next Level Name" muid="178FCCC0E930E286" />
                                            <Tunable name="next_level_salary" class="TunableExistance" display="Next Level Salary" muid="A919F15467BF4C22" />
                                            <Tunable name="previous_level_name" class="TunableExistance" display="Previous Level Name" muid="2E88AD75D0A3C819" />
                                            <Tunable name="previous_level_salary" class="TunableExistance" display="Previous Level Salary" muid="AD97BDD33AFFAB89" />
                                        </TunableVariant>
                                        <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="4A47049F055409F1" description="The career we care about." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BF17D113DC6A532A" static_entries="interactions.ParticipantType" description="The participant's whose career data we care about." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="civic_policy" class="TunableTuple" display="Civic Policy" muid="67729CD062E69DFA" description="Tokens for the Civic Policy system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="civic_policy_data" class="TunableVariant" default="voting_start_time" display="Civic Policy Data" muid="A31A7A0E2ED21713" description="The specific value to display." Deprecated="False" filter="0" group="General">
                                            <Tunable name="voting_end_time" class="TunableExistance" display="Voting End Time" muid="F8436DD9D3891432" />
                                            <Tunable name="voting_start_time" class="TunableExistance" display="Voting Start Time" muid="B70D97276E5156B2" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <Tunable name="current_trends" class="TunableExistance" display="Current Trends" muid="1F456CBE4FA69981" />
                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="E2D8454AB927F67F" description="A catalog definition to use as a token. This is useful if&#xA;you want to properly localize an object's name or&#xA;description." Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="40A6C8A3D5AF24B7" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="game_component_data" class="TunableTuple" display="Game Component Data" muid="D3222D4005CB7A0D" description="The token is a localized number or Sim representing &#xA;the specified game component data from game component." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="game_component_data" class="TunableVariant" default="high_score" display="Game Component Data" muid="BFB81B798CA2F926" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="high_score" class="TunableExistance" display="High Score" muid="9BF7BC63CB6D7DF3" />
                                            <Tunable name="high_score_sim" class="TunableExistance" display="High Score Sim" muid="F5A5FC0156323182" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="1B6B8227D64AA10" static_entries="interactions.ParticipantType" description="The participant's from whom the game component data &#xA;we want to fetch." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gig_history" class="TunableTuple" display="Gig History" muid="92B1A0FD3BCB0F3C" description="The token used to display data from gig history." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="customer_participant" class="OptionalTunable" default="disabled" display="Customer Participant" muid="A9AD1F3BB90DBB76" description="If enabled, this is the participant representing the customer in gig history.&#xA;If disabled, falls back to searching for any valid gig in history." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2A7A23A9E9F6F3C" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="D9F8744D64196DE2" static_entries="interactions.ParticipantType" description="TargetSim searches for provided customer sim. Lot will search for the current lot." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="gig_history_data" class="TunableVariant" default="gig_customer_name" display="Gig History Data" muid="FB73DDCED71DE35C" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="gig_customer_name" class="TunableExistance" display="Gig Customer Name" muid="642B1791ED12CECE" />
                                            <Tunable name="gig_project_title" class="TunableExistance" display="Gig Project Title" muid="62CE682468C0B489" />
                                        </TunableVariant>
                                        <TunableEnum type="GigResult" name="max_gig_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Gig Result" muid="D05850640C62B084" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="min_gig_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Gig Result" muid="1FE750DC5818828D" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CAD0F9989FBDC7B7" static_entries="interactions.ParticipantType" description="The participant whose gig history we will search." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="global_policy" class="TunableTuple" display="Global Policy" muid="70DA6CC46B807B03" description="The token used to display data from the tuned global policy." Deprecated="False" filter="0" group="General">
                                        <Tunable type="snippet" name="global_policy" class="TunableReference" display="Global Policy" muid="F491E7BE4ED15E0D" description="The global policy from which data is displayed." allow_none="False" Deprecated="False" filter="0" group="General" restrict="GlobalPolicy" />
                                        <TunableEnum type="GlobalPolicyTokenType" name="token_property" class="TunableEnumEntry" default="NAME" display="Token Property" muid="128AC111EA433B38" static_entries="global_policies-global_policy_enums.GlobalPolicyTokenType" description="Which property from the Global Policy Token to use. NAME&#xA;will use the policy's display name, PROGRESS will use&#xA;the progress made over the max progress value. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable name="interaction_cost" class="TunableExistance" display="Interaction Cost" muid="E2EE7802392CA81" />
                                    <Tunable name="interaction_payout" class="TunableExistance" display="Interaction Payout" muid="E12BFB0FA259F70E" />
                                    <TunableTuple name="lifestyle_brand" class="TunableTuple" display="Lifestyle Brand" muid="7EA19BD93FBDA494" description="The token used to display the name of a Lifestyle Brand &#xA;owned by a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.TargetSim" display="Participant" muid="B6C8F9C7070F1D50" static_entries="interactions.ParticipantTypeSingle" description="The participant who owns the lifestyle brand." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="money_amount" class="TunableTuple" display="Money Amount" muid="5DCCBD1FA8060FD4" description="The token is a number representing the amount of Simoleons&#xA;that were awarded in loot to the specified participant." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CC20087748CC967F" static_entries="interactions.ParticipantType" description="The participant for whom we fetch the earned amount of&#xA;money." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_fashion_marketplace" class="TunableTuple" display="Object Fashion Marketplace" muid="438EF4C31E954FF8" description="Tokens for the object fashion marketplace component and &#xA;fashion marketplace system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_fashion_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Fashion Marketplace Data" muid="E6615EA8CD9DFC9B" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="DFDB48F06876E674" />
                                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="360863FB10746F5C" />
                                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="A30025E72151F8E4" />
                                            <Tunable name="suggested_sale_price" class="TunableExistance" display="Suggested Sale Price" muid="27FD729BD114C394" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_marketplace" class="TunableTuple" display="Object Marketplace" muid="6F2BF4803A3EF898" description="Tokens for the object marketplace component and marketplace&#xA;system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Marketplace Data" muid="80732AD3A3F920BF" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="8E11BCBE37A05096" />
                                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="898C115FD36274C6" />
                                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="BB8AF6498C224AA4" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_property" class="TunableTuple" display="Object Property" muid="763F0A9E99582C50" description="The token is a property of a game object.  This could be &#xA;catalog properties like its price or its rarity which is a &#xA;property given by a component." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="GameObjectProperty" name="obj_property" class="TunableEnumEntry" default="CATALOG_PRICE" display="Obj Property" muid="55F4B63664FAD64D" static_entries="objects-game_object_properties.GameObjectProperty" description="The property of the object that we will request." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_state_value" class="TunableTuple" display="Object State Value" muid="E3386F7A4970DC5B" description="The token is a string representing the value of a specific&#xA;state from the selected participant." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="7491EA4DB4B67082" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;state's value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="5DC14C2198AD0549" description="The state's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectState" />
                                    </TunableTuple>
                                    <TunableTuple name="participant_count" class="TunableTuple" display="Participant Count" muid="3353D34A7682D67C" description="The number of participants of the specified type." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="B50D4B84446236EB" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="D21446B65BF5B660" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="D543C32238835CC7" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="24632043F293CD09" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="97CE8CCEC28D4ED0" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="99856E2DFCCCA447" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="55888C4402F4EEB7" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="C024BF05BCA35A54" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="452A67B242CD6FFE" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="197BD04CD9E9124F" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="8743C7484C398AE2" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="D5278CEAF5968944" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="slot_type" class="TunableReference" muid="A121EA703C946A1C" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="6EF0ECF15D86637" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="ObjectChildren" display="Participant" muid="7456793678F7219" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="78D877589B2C4E90" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F4E0247F72639CAD" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="6910FE1DB3D96437" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="participant_type" class="TunableTuple" display="Participant Type" muid="6642E81F3C3ED681" description="The token is a Sim or object participant from the&#xA;interaction." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="formatter" class="TunableObjectLocalizationTokenFormatterVariant" default="single" display="Formatter" muid="B7B6D81C61A4DC0D" description="Define the format for this token." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="bullet_list" class="Tunable_TunableObjectLocalizationTokenFormatterBulletList" display="Bullet List" muid="3432014D33FCDD76" description="The token is a string, which is a formatted bullet point list. Objects&#xA;are grouped by definition. The text for each item must be specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="bullet_text" class="TunableLocalizedString" default="0x0" display="Bullet Text" muid="868D455F57F78542" description="The text for the bullet entry. The string is provided the&#xA;following tokens, in this order:&#xA; 0 An object representitive of the group&#xA; 1 The number of objects in the group" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="single" class="Tunable_TunableObjectLocalizationTokenFormatterSingle" display="Single" muid="E5E37629207E097C" description="The token is a single object name. If multiple participants are&#xA;returned, an arbitrary one is used. That is, unless the mismatch key is&#xA;specified. In that case, the string is used unless all of the&#xA;participants' definitions match." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="mismatch_name" class="OptionalTunable" default="disabled" display="Mismatch Name" muid="DD4A55696E6FB99B" description="If enabled, this is the object name to use when using a multi-&#xA;object participant yielding definitions with different names." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F70888C37ACE81F5" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1B8F337247FACB83" description="A localized string that may NOT require tokens." allow_catalog_name="True" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="7FC98DBC883024FF" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="22F75555B204AC6E" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="CB5C2E6EF2F19DAE" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="801074DE868B19C5" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="7F302063DC54E768" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="5121167E42A619C0" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="40424B7846005495" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="89A48DE9720E992E" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="742173D97204FA1B" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="51E3ACC1F69AE44F" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="51ADD27ABA84F26C" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="5E76D6A43AA9A1E2" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="slot_type" class="TunableReference" muid="A342B7C693961644" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="B2218A26637AF76E" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2357EBCA230E9903" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="D7C2441A7F4331DF" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="3E1B4DB54C99CD2C" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="C654B0B4D6549794" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="participant_type_special" class="TunableTuple" display="Participant Type Special" muid="14CEB79888AA2088" description="The token is a specified string grabbed from a supported participant type that &#xA;requires special handling. Currently supported are:&#xA;I. Participants that resolve into households&#xA;    1. Household Name&#xA;    2. Household Description&#xA;2. Participants that resolve into zone ids&#xA;    1. Lot Name&#xA;    2. Lot Description&#xA;    3. Name of household that lives there&#xA;    4. Description of household that lives there." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="participant_type" class="_SpecialParticipantTokenVariant" default="household" display="Participant Type" muid="5B5DA8BCDCF4B14A" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="household" class="Tunable_FromHouseholdParticipant" display="Household" muid="694CB1DBC14DDFE5" description="Helper class used to support participants that resolve into households." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="attribute" class="TunableVariant" default="name" display="Attribute" muid="82C4DDB1F8DAB988" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="description" class="TunableExistance" display="Description" muid="F12710D734C6BD81" />
                                                    <Tunable name="name" class="TunableExistance" display="Name" muid="FD3B3E3BBC06C86D" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeHousehold" name="participant" class="TunableEnumEntry" default="TargetHousehold" display="Participant" muid="F97FAFD979D79287" static_entries="interactions.ParticipantTypeHousehold" description="Participant that resolves to a household." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="zone" class="Tunable_FromZone" display="Zone" muid="C285495315B75E88" description="Helper class used to support participants that resolve into zone ids." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="attribute" class="TunableVariant" default="zone_name" display="Attribute" muid="3A6419FD220B7ACC" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="occupant_household_description" class="TunableExistance" display="Occupant Household Description" muid="22CDB9264A528356" />
                                                    <Tunable name="occupant_household_name" class="TunableExistance" display="Occupant Household Name" muid="36BD06610E498004" />
                                                    <Tunable name="zone_description" class="TunableExistance" display="Zone Description" muid="BD73DC8A2552ED6A" />
                                                    <Tunable name="zone_name" class="TunableExistance" display="Zone Name" muid="50F2CD4CAD7E6957" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeZoneId" name="participant" class="TunableEnumEntry" default="PickedZoneId" display="Participant" muid="5188DC093F57FC41" static_entries="interactions.ParticipantTypeZoneId" description="Participant that resolves to zone id of a multi unit business." Deprecated="False" filter="0" group="General" invalid_entries="AllUnitZoneIds" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="picked_part" class="TunableTuple" display="Picked Part" muid="4F47CE4FE3799EA9" description="The token used to display the name of a picked part." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="scholarship_letter_component_data" class="TunableTuple" display="Scholarship Letter Component Data" muid="2CBD036704BB467E" description="The token can be used to get strings representing scholarship&#xA;information from the scholarship letter component of an object." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeObject" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="9753B989E8EBBBE4" static_entries="interactions.ParticipantTypeObject" description="The participant from whom to get the scholarship letter&#xA;component data." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="scholarship_letter_component_data" class="TunableVariant" default="applicant_name" display="Scholarship Letter Component Data" muid="5ADDF292E65B8681" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="applicant_name" class="TunableExistance" display="Applicant Name" muid="9F0FCAE0D484BA78" />
                                            <Tunable name="scholarship_amount" class="TunableExistance" display="Scholarship Amount" muid="20E5BFC69928FCFB" />
                                            <Tunable name="scholarship_description" class="TunableExistance" display="Scholarship Description" muid="8A522CCEF561E969" />
                                            <Tunable name="scholarship_name" class="TunableExistance" display="Scholarship Name" muid="73967CB3E1A665AD" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="sickness" class="TunableTuple" display="Sickness" muid="383E6C7C762CE3EC" description="The token is the name of the sickness on the specified Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="5DEDDF3054181B49" static_entries="interactions.ParticipantType" description="The participant who is sick." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="small_business" class="TunableTuple" display="Small Business" muid="AE8A6582CAADC46B" description="The token is the name of the small business owned by specified Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="87EC8F5F9EBDF2D" static_entries="interactions.ParticipantType" description="The participant who has small business." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic_value" class="TunableTuple" display="Statistic Value" muid="6995B0CD9F061026" description="The token is a number representing the value of a specific&#xA;statistic from the selected participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="clamp_value_to_floor" class="Tunable" default="False" display="Clamp Value To Floor" muid="B6691494A69F118A" description="If True, the value will be clamped to its floor." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="FA3142734D51D91B" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="3C936EB1F8540F8E" description="The statistic's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="use_statistic_name" class="Tunable" default="False" display="Use Statistic Name" muid="58872905EF452E3E" description="If True, the value will be the name of the statistic." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="street" class="TunableTuple" display="Street" muid="E6CABA5CEC506D7" description="                    " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="street" class="TunableTunableLocalizationStreetSelector" display="Street" muid="348FF8EC4EF02289" description="Using the Street Selector tuning, provide a token localization appropriate&#xA;street selection." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="DC59679DCB5EA784" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="9A9816424A3A51FC" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="5440386369395D11" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="9A1DB453D37B38AB" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="B7349D0D6E3A2F5A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="2AD82D8B2B339B91" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="FD41C0AC8ABAF362" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="D4E1C4CF520356A9" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9C4D8357F4B083AE" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableVariant type="None" name="street_data" class="TunableVariant" default="policy_up_for_repeal" display="Street Data" muid="C60F4885D024305B" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="policy_up_for_repeal" class="TunableExistance" display="Policy Up For Repeal" muid="D80D36AC6A7565B1" />
                                            <Tunable name="random_losing_balloted_policy" class="TunableExistance" display="Random Losing Balloted Policy" muid="66A0C27356813E69" />
                                            <Tunable name="winning_balloted_policy" class="TunableExistance" display="Winning Balloted Policy" muid="1C475FCE7B5E3C95" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="venue" class="TunableTuple" display="Venue" muid="3290D9A094936E27" description="                    " Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="venue_data" class="TunableVariant" default="active_venue" display="Venue Data" muid="ED9E838FF7B41034" description="                        " Deprecated="False" filter="0" group="General">
                                            <Tunable name="active_venue" class="TunableExistance" display="Active Venue" muid="EA6453558B3A62C6" />
                                            <Tunable name="source_venue" class="TunableExistance" display="Source Venue" muid="7E0FCED814B53E35" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="timeout_duration" class="OptionalTunable" default="disabled" display="Timeout Duration" muid="5C4C814DE07D57DD" description="If enabled, override the timeout duration for this dialog in game&#xA;time." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="13D4E8AA61F10A79" />
                        <Tunable type="float" name="enabled" class="TunableSimMinute" default="5" display="Enabled" muid="9D84D170E9FBD8DD" min="5" max="None" description="The time, in sim minutes, that this dialog should time out." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="title" class="OptionalTunable" default="disabled" display="Title" muid="5A3275CD6C28EE4B" description="If enabled, this dialog will include title text." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AA9D61D81F22F1B4" />
                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="460FD16306C61C9F" description="The dialog's title." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="tns_suppression_group" class="OptionalTunable" default="disabled" display="Tns Suppression Group" muid="1119BCF23F7DE0EB" description="If enabled, the TNS will be considered for suppression. Suppression occurs if the number&#xA;of notifications in this group that fire exceed the tuned TNS suppression limit. " Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26E8A8AB53CA1575" />
                        <TunableEnum type="TNSSuppressionGroup" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="CA066E0F5AFED5C" dynamic_entries="ui-notification_suppression_enums.TNSSuppressionGroup._elements" static_entries="ui-notification_suppression_enums.TNSSuppressionGroup" Deprecated="False" filter="0" group="General" invalid_entries="NONE" />
                    </TunableVariant>
                    <TunableList name="ui_responses" class="TunableList" display="Ui Responses" muid="1A9B2752C94A60C7" description="A list of buttons that are mapped to UI commands." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableUiDialogResponse" muid="E5EEA6474A66F72B" description="A dialog response." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="E257DCF1D9428E5C" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6C3A38E54FE171A3" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="3E31D4471E38F021" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="build_buy_filters" class="OptionalTunable" default="disabled" display="Build Buy Filters" muid="C77A23469B231B4" description="If enabled, specified category and pack id will be applied in the build buy mode" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="818A7B1626CE8110" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1EFACE2700DD4B93" description="Category tag and Pack ID to filter in build buy mode" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Tag" name="category_tag" class="TunableEnumWithFilter" default="INVALID" display="Category Tag" muid="4DA2FE413C955A06" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Category tag to filter in build buy mode&#xA;Filters include all the buy categories" Deprecated="False" dynamic_entries_prefix="buycat|buycatee|buycatld|buycatmag|buycatss|buycatpa" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    <TunableEnum type="Pack" name="pack_id" class="TunableEnumEntry" default="BASE_GAME" display="Pack Id" muid="BE0F31A73D52D563" static_entries="sims4-common.Pack" description="Pack Id to be filtered in build buy mode" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="button_icon" class="OptionalTunable" default="disabled" display="Button Icon" muid="38742EAA884204F5" description="If enabled, this is the icon to be shown on this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E7626CE832D7726" />
                                <Tunable type="ResourceKey" name="enabled" class="TunableIcon" default="None" display="Enabled" muid="BCC462DDB658C98B" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableVariant>
                            <TunableVariant type="None" name="loots_for_response" class="OptionalTunable" default="disabled" display="Loots For Response" muid="9E27DA85C104CC4" description="If enabled, specify loots to apply and dialog response id for this response." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="44C32A6C13DB8CB5" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="288947658479DF89" description="Loots to apply for the response and dialog response id that will override the original id." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="CustomButtonType" name="dialog_response_id_override" class="TunableEnumEntry" default="DIALOG_RESPONSE_CUSTOM_1" display="Dialog Response Id Override" muid="E8AA8DFE68AE0144" static_entries="ui-ui_dialog.CustomButtonType" description="The dialog response id for this response that will override the default response&#xA;id. Make sure this is unique for each response." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="loots" class="TunableList" display="Loots" muid="D6A03D60E70BB6B6" description="A list of loots that will be applied when the player selects this response." Deprecated="False" filter="0" group="General">
                                        <Tunable type="action" class="TunableReference" muid="476BC633AC6D97BC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="3F429E9F280CDA39" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA73B6C8094A99E3" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="C6C486F3E7550C0E" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="510AC5D12BF352E5" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="71E64D1CFF861B1C" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="88A2BA687D709132" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="7BBF31AF822346D3" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="F90D74742135F63" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="2A2CD199FC57616A" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="E51E2C74BFE564B9" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="700897818378EFDB" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="7FD131A23DAD8D3F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="F5D2C7D80F806FF4" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="F76CC99BD2F4173" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2F5340AD83389785" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="616BBC0F4462E2CA" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="BC3C3F01CCA5BB08" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="E0BC5BFB8D725B15" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="658F86239649AB4D" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="694BF9805270218E" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <Tunable type="int" name="text" class="TunableLocalizedString" default="0x0" display="Text" muid="81EDFE301A375963" description="The prompt's text." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="tooltip_text" class="OptionalTunable" default="disabled" display="Tooltip Text" muid="E4D80B9211A33178" description="If enabled, this is the tooltip text to be shown on hover for this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E454D11061A1A1D6" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="83CCD5F6BFAC273C" description="The tooltip's text." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="tutorial_id" class="OptionalTunable" default="disabled" display="Tutorial Id" muid="4DA84A9A32A831C0" description="If set, this tutorial ID will be used for SHOW_LESSONS requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35D0B136436A1B4F" />
                                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="E5598BD2C93C33C2" description="ID of a Tutorial, TutorialCategory, or TutorialSubcategory to be displayed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="ui_message_name" class="OptionalTunable" default="disabled" display="Ui Message Name" muid="5C33013574D6E169" description="If set, this UI message will be used for SEND_UI_MESSAGE requests." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2ABC17F1F958699B" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="6654F0A0ECC190F5" description="Name of a UI message to be sent." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="E4041F06032BC642" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                    <TunableEnum type="UiDialogNotificationUrgency" name="urgency" class="TunableEnumEntry" default="DEFAULT" display="Urgency" muid="1F53D7A4F587691E" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationUrgency" description="Specify the notification's urgency." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="UiDialogNotificationVisualType" name="visual_type" class="TunableEnumEntry" default="INFORMATION" display="Visual Type" muid="7575EB84A74EE461" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationVisualType" description="Specify the notification's visual treatment." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="751D6E9F2A61AB0C" description="A reference to a Notification tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Notification" />
            </TunableVariant>
            <Tunable name="use_previous_notification" class="TunableExistance" display="Use Previous Notification" muid="6A0A8E2C4EF20BF0" />
        </TunableVariant>

        <TunableVariant type="None" name="help_tooltip" class="OptionalTunable" default="disabled" display="Help Tooltip" muid="10FD0A921AB37325" description="If enabled, this Job will have a Help Icon in the Situation Creation UI that will display this tooltip on&#xA;hover." Deprecated="False" filter="0" group="UI">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72D14D995E14BB90" />
            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D341E39F87E0F24A" description="The tooltip to show when the player hovers over the Help Icon for this Job." Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <Tunable type="bool" name="hide_from_creation_ui" class="Tunable" default="False" display="Hide From Creation Ui" muid="D65A34F9EF349C98" description="If enabled, this job will be hidden from view in the SituationCreation panel." Deprecated="False" filter="0" group="Special Cases" />

        <Tunable type="int" name="hire_cost" class="Tunable" default="0" display="Hire Cost" muid="22AB6464F0D2D625" description="The cost to hire a Sim for this job in Simoleons." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

        <Tunable type="ResourceKey" name="icon" class="TunableResourceKey" default="None" display="Icon" muid="8753ACECAE4035E7" description="Icon to be displayed for the job of the Sim" allow_none="True" Deprecated="False" filter="0" group="UI" resource_types="0x2f7d0004" />

        <Tunable type="bool" name="ignore_on_creation_restrictions" class="Tunable" default="False" display="Ignore On Creation Restrictions" muid="8C4E780163206CDE" description="The On Creation tunables (Emotional Setup and Commodities) will only&#xA;be applied if the Sim is in no other Situations and is actively being&#xA;created for this Situation/Job. In some cases, like Diners at Restaurants, &#xA;we want to ignore these restrictions so Commodity and Emotional changes are &#xA;made when this Situation Job is applied.&#xA;&#xA;NOTE: On Creation tunables are still only applied to NPC Sims. This&#xA;restriction can not be ignored. Also, please consult your GPE partner&#xA;before you tick this box. It can lead to some very bad bugs if multiple&#xA;situations are trying to mess with a Sim's emotions/commodities." Deprecated="False" filter="0" group="On Creation" />

        <TunableList name="include_assigned_jobs_as_requesting_sims" class="TunableList" display="Include Assigned Jobs As Requesting Sims" muid="CF54CA1E5878048A" description="If a sim has been assigned to one of these jobs, include them&#xA;as one of the requesting sims for the Filter." Deprecated="False" filter="0" group="Sim Filter">
            <Tunable type="situation_job" class="TunableReference" muid="4E69BF94DB127CEA" description="The Situation Job to consider." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <TunableList name="interaction_scoring" class="TunableList" display="Interaction Scoring" muid="982907E4CB1E41FD" description="Test for interactions run. Each test can have a separate score." Deprecated="False" filter="0" group="Scoring">
            <TunableTuple class="TunableTuple" muid="861E1837AFD054FC" description="Each affordance that satisfies the test will receive the&#xA;same score." Deprecated="False" filter="0" group="General">
                <TunableTuple name="affordance_list" class="TunableParticipantRanInteractionTest" display="Affordance List" muid="DF2F630930DC8A00" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                    <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="545AFAD055AEA386" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="snippet" class="TunableReference" muid="32C784EC22B8BE39" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                    </TunableList>
                    <TunableList name="affordances" class="TunableSet" display="Affordances" muid="1B7A3E01E82376C9" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="interaction" class="TunableReference" muid="F98B2C7CA1CD7009" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="F77C4B4201103FD3" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="FCE7FA340C0A06CD" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="7685863CEA9F7820" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2B403B7DA40174A" />
                        <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="45DB2C6983F10659" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="4AB8D7A7EC657F5A" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A758F5ED4BF87DE3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="A87CB4478A83FB67" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="49410514931BEBAC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="4F1C40C3F0AF72C8" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="6A2DB776F53EFEC6" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="46E59BAAABAD4474" />
                            <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="DA00C3CE0587A735" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="3E1C8B1F5E38AE08" Deprecated="False" filter="0" group="General">
                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="D25127DF585BEDC4" />
                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="720341E93B7446AC" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="19FDA819039C8AAA" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8EDB86AF7922EC1B" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="6FE52676237C9246" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6CA9F8A11F470603" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7F405BAE286AC8AE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DEC1D272A41AF981" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="DEA22C54E7C6FEA8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="object_state" class="TunableReference" muid="789722C4CCA1EE48" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="BC0C64655CDEF9A1" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="811C8FDA737CE7F6" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B5BD2FD23AA47F7" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A3B8FA2109A19AE6" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4B0A3B031E5ADE77" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9E742B084DB276F1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C3B904D4807304BD" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="4DCAA5DC841C7BF7" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableVariant type="None" name="role_tags" class="OptionalTunable" default="disabled" display="Role Tags" muid="FEAADA53B0338AE0" description="If enabled then we will require that the target of the&#xA;interaction being scored is a sim and that sim&#xA;meets the criteria of the black and whitelists." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D9FEF2ABA78069B7" />
                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A0E3E6424AC4712E" Deprecated="False" filter="0" group="General">
                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6D9467D7D1830717" description="A set of tags that we will not apply the score&#xA;if the target sim has one of them." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5A826C5DB62C124A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single role tag to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="9FA5416772874CB9" description="If enabled then we will make sure that the&#xA;target sim has at least one of the tags&#xA;in the role tags." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D13777544A81CE1B" />
                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="D5196A21A6B69715" description="The set of role tags that we will check&#xA;against the role tags of the sim." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CE501154D03616CB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single role tag to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
                <Tunable type="int" name="score" class="Tunable" default="1" display="Score" muid="3650D424EC3A28D9" description="Score for passing the test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Tunable type="bool" name="is_guest" class="Tunable" default="False" display="Is Guest" muid="5255E304EAF7E0C7" description="This job is a guest.&#xA;Guests jobs are special in that it shows the hire control arrows so that&#xA;it is easy for players to invite a number of random guests. We need this distinction on the UI&#xA;side to override the tooltips on the hire control for something more appropriate&#xA;for guests." Deprecated="False" filter="0" group="General" />

        <Tunable type="int" name="job_description" class="TunableLocalizedString" default="0x0" display="Job Description" muid="CC51087276890A7C" description="Localized description of this job" allow_none="True" Deprecated="False" filter="0" group="UI" />

        <TunableVariant type="None" name="job_uniform" class="OptionalTunable" default="no_uniform" display="Job Uniform" muid="8AA5DB491275B469" description="If enabled, when a Sim is assigned this situation job, that Sim&#xA;will switch into their outfit based on the Outfit Category.&#xA;&#xA;If the Outfit Category is SITUATION, then an outfit will be&#xA;generated based on the passed in tags and the Sim will switch&#xA;into that outfit." Deprecated="False" filter="0" group="General">
            <Tunable name="no_uniform" class="TunableExistance" display="No Uniform" muid="37ABB29FBB83B86E" />
            <TunableTuple name="uniform_specified" class="TunableTuple" display="Uniform Specified" muid="B759C9511D0C8119" description="                    " Deprecated="False" filter="0" group="General">
                <TunableEnum type="DefaultOutfitPriority" name="outfit_change_priority" class="TunableEnumEntry" default="NoPriority" display="Outfit Change Priority" muid="C00ABF7F9ACA9225" dynamic_entries="sims-outfits-outfit_enums.DefaultOutfitPriority._elements" static_entries="sims-outfits-outfit_enums.DefaultOutfitPriority" description="The outfit change priority.  Higher priority outfit&#xA;changes will override lower priority outfit changes." Deprecated="False" filter="0" group="General" />
                <TunableEnum type="OutfitChangeReason" name="outfit_change_reason" class="TunableEnumEntry" default="Invalid" display="Outfit Change Reason" muid="80F231B8F9FD0037" dynamic_entries="sims-outfits-outfit_enums.OutfitChangeReason._elements" static_entries="sims-outfits-outfit_enums.OutfitChangeReason" description="An enum that represents a reason for outfit change for&#xA;the outfit system.&#xA;&#xA;An outfit change reason is really a series of tests&#xA;that are run to determine which outfit category that&#xA;we want to switch into.&#xA;&#xA;In order to do this, add a new OutfitChangeReason entry&#xA;in outfit-enums module.&#xA;&#xA;Then go into&#xA;ClothingChangeTunables-&gt;Clothing Reasons To Outfits&#xA;and add a new entry to the map.&#xA;&#xA;Set this entry to your new enum entry.&#xA;&#xA;Then you can add new elements to the list of tests and&#xA;outfit categories that you want it to change the sim&#xA;into." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="playable_sims_change_outfits" class="Tunable" default="True" display="Playable Sims Change Outfits" muid="1283520D9A6B80FE" description="If checked, Playable Sims will change outfit when the job is set for the Sim. This&#xA;should be checked on things like user facing events,&#xA;but not Venue Background Event Jobs." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="situation_outfit_generators" class="OptionalTunable" default="disabled" display="Situation Outfit Generators" muid="B65F25E9950266CE" description="If enabled, the situation will use the outfit tags&#xA;specified to generate an outfit for the sim's&#xA;SITUATION outfit category.  If generating an outfit&#xA;make sure to set outfit change reason to something that&#xA;will put the sim into the SITUATION outfit category or&#xA;you will not have the results that you expect." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6946DA68EA559BF" />
                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="79D38A9C47DA70C7" description="Only one of these items is picked randomly to &#xA;select the outfit tags within this list.&#xA;E.g. If you want to host a costume party where the &#xA;guests show up in either octopus costume or a shark &#xA;costume, we would have two sets of tuning that can &#xA;specify exclusive tags for the specific costumes. &#xA;Thus we avoid accidentally generating a sharktopus &#xA;costume.&#xA;&#xA;If you want your guests to always show up in &#xA;sharktopus costumes then tune only one set of tags &#xA;that enlist all the outfit tags that are associated &#xA;with either shark or octopus.&#xA;&#xA;If some tags are only compatible with adults, and &#xA;no outfit with that tag exists for children you&#xA;should add an outfit test for that set of tags&#xA;so that only adults can pick out of that item&#xA;on the list." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="8D4A889071C21E29" description="Set of outfit generator and tests that will &#xA;be run on the sim to validate if the generator &#xA;is valid for this outfit." Deprecated="False" filter="0" group="General">
                            <Tunable type="snippet" name="generator" class="TunableReference" display="Generator" muid="E022201717699747" description="A reference to a Outfit tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Outfit" />
                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="3BADBF0384CB3ADE" description="Test set the sim will need to pass to be &#xA;able to wear the outfit correspnding to the &#xA;tuned tags." filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                </TunableVariant>
                <Tunable type="bool" name="use_sold_fashion_outfit" class="Tunable" default="False" display="Use Sold Fashion Outfit" muid="6C5853E747019647" description="If checked, we would request a fashion outfit &#xA;that was recently sold as a situation outfit for this job." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="zone_custom_outfit" class="Tunable" default="False" display="Zone Custom Outfit" muid="FEBE42A84664A7A3" description="If checked, we would request the current zone to give a&#xA;special outfit for this job." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableVariant>

        <TunableList name="location_based_filter_terms" class="TunableList" display="Location Based Filter Terms" muid="D61F302BCE04F4E8" description="A set of filter terms, based on the current location, that&#xA;augment the tuned filter. This allows for location-based&#xA;variations." Deprecated="False" filter="0" group="Sim Filter">
            <TunableVariant type="None" class="TunableLocationBasedFilterTermsSnippet" default="literal" muid="6DCA0083AEE4209A" description="This may be tuned in place here using 'literal' or as a reference to a LocationBasedFilterTerms tuning snippet." Deprecated="False" filter="0" group="General">
                <TunableTuple name="literal" class="TunableLocationBasedFilterTerms" display="Literal" muid="FB23867F3A5602F4" description="A set of filter terms that vary based on the current location.&#xA;Currently we only support variations based on current region." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="default_filter_terms" class="OptionalTunable" default="disabled" display="Default Filter Terms" muid="291A5280DBBE70AD" description="Default filter terms to use if the current region is not specified." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6C557F2CE86E01F2" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="70735D10956E6815" Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="1F4F89B8356C9B02" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="1121CB991236FD09" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D87FD23E4EFF2FEE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="12708B1C474773E4" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AD5511A6A87B41B1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="93635BC8ED1EC1FF" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="C9FA94627EDBB503" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4D86FE365B306F17" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="40FFCED0ACADD989" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F896F478BDE12987" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="939BE0414894FF55" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="3D6ABCACBCBA1649" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="8614F17AE66547B6" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CBD71AD63757F903" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="9DA7FE31DB30ED26" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="19D11647BA039EB8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="AC45A8F368C2C797" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1833A6B134B18A27" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="6A846DAB28EBBA32" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="FB6CBC07EAE1CA3C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="653DC7FB0952AF9E" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="B616123A4FD886A6" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="9E1E01F96245700A" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="5D4D4B9343EF49E0" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="957011855261B928" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="58F230C2999E7B42" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="10C9B044332E48B5" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="155564B8075241BF" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1B33F9635B8411C3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3C473C2B519F4619" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="8BA412669E8FDF15" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="B420D04E7BDE6BBD" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="231E9E9222B13746" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CBB8C8F9985E8A6C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C16C1EF35134BAF3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="B029F440D8D24CA9" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D23A339C3799B10B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="690B8679CE0ACCFA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5DAE15944EF605A3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="49B55018E39F7DE8" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="6FFC3916DC434F8" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="D7A5BCBD32FF9A15" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="320E35136B5B8735" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="9512693D26BD9F31" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                            <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="2A48C94EC51E03FA" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="2DB991275969418B" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15309B36E8CB3CA8" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="F4DB67261C4B9EA0" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="35D49631F11639C1" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="56967D2C51584ED4" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" class="TunableReference" muid="317D280A4F041F0C" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="2EA209332547A333" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="7EED7861B1AFE6D7" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="63B8BB0F80CC1AF9" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                        <Tunable name="none" class="TunableExistance" display="None" muid="B4AC0A9B2BAEBE6C" />
                                        <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="453AFE859F101A7E" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="DFDC14DD28AF72A6" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="6774F0E42D18049A" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="AACDD9A08391D0A8" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="D06048173DC9B508" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3730725D79010B32" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6662226BCB29E1DB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="65AF75819BBF5D45" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="6DDAB67B7BB1BE90" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="E41BE1932F1D0FD7" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="D84B40C8F0D84DA0" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1C69E63582FED2D9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="A17A4964CD8DD852" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="custom" class="TunableTags" display="Custom" muid="F30AA3098223003B" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E71ACE7F9FA2C8CF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                        <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="3A3658A40B90876C" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EFA0F8C5CA37E6E1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5B5DC4ABA9809B6B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="6ED872072E716E72" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="359866F08AC5A041" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="50BB8B7BF9D856BB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5BF4C02DAFF3D4A5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="243CB6F6637A6917" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8702B03CF4C0E045" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3A4002012E9A7AFB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7A8A1B308FFC5E09" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="78EA96F3BF969983" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B2CF59CE3894C142" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="12CACCED9B20F98D" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6DFC7877F21D9935" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="3043F7FA7CB65D73" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="8E28CCDFFE94C5A0" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="97EB20027672307B" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6467BFA308BE9CFE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F9C18A0576AAAFE5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="635697626FAD1277" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2D7CEC1F9991DD1E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="860B655F46480FA3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="AA39E2094617F722" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="66E96708D063592" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="84AD43D2BE12B1E0" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2600F494DA9A9BB1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B6639C72E8EAFECC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6A324DA0B5D7FC9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="645520660A397E00" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="54FB892B2B42F85C" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="A99BC08366A6A039" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DA4D2232FCE9011C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="41B842EE200BF3FF" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="D180955312B80098" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="4C3D5379D1031742" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A470A0664C2D695A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="FE53E52B0450AE07" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F9B4218FEBB06D4C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="E68427D84B1F1FD7" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C795FAC9CDA46C3A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="277CFF7644DFED9E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="F4D6C5937ED0ADEA" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="FD996EDB9B7B19CB" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="58D50E8FFFE1E58B" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="67C4D810A50FDFD2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A7431D96CF92CBAA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="91F1975A96A0FACB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="56F6054486056E42" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5E1B0982D43107F0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6A099F75C56168CE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BBB4BB2A5C14D9A5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="38016964622D0DD" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="938E3AEF34AD51D9" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="94B5463D6C61448F" />
                                        <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="B3344FC3C34C923B" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DDBC9D15FE483B0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="F89BF0E37BC3E889" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BFB55845D17BCDEB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="4577688E4B01B909" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="5825295FBE3A3190" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9029A74D6B742D8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DE4355D20E666E96" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="9218A443A7012AD7" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="5348BE70463F5DCA" />
                                        <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="5BC495BE26D236FB" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9D971C3D7513CCD7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="7B7F865BA7D31B89" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E2BF9534D1395D2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D97086F856E331CC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="D3668BB5A3454A9E" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="973D94C15754C4A5" />
                                        <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="658DE390FD6844A5" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B1486B393DC8E694" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="694B0D5DEB58DDE4" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8DA1690650F2D091" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="4BE539ED5C90A505" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="DCD8C4BAF6D45DB3" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A59F98CD544D628C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="8E4FF6BEAFC49769" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="EE98CDD26747119A" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="76D6F0F560F03166" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4AE3320E5EB6CA38" />
                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8E8BDA7C9E9D9825" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="5A6B6746B575E7F3" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="94E1FA85DE9E8497" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="E26350B4F972F09A" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="48D537C72D90E4C" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="DB4B792E1B6D73CF" />
                                        <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="430AD040108F8EC2" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="4D01ECC07CB5A014" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="E8881015A577CDF0" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="930D9576866F29D5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6FED68830F61B37F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6D8D651017226C0D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="579EAF6F728B4A94" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="149E6E7FA1982AF7" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="A3848BFA814966A9" />
                                        <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="2BD22ED653BF65A6" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CDBB2CA701A06F85" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="E3D50F4F12099C0B" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FD9911F27D065C00" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="C715A41C96FC38A6" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="C8C1A872370ED3AC" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F296CECFB991FBC2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="2DD8D101D5FAC493" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="8F2EB964846FEFD2" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C394888C715BF9E" />
                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FA197FB82D0907E7" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="377C4FE5F8B36EEB" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="A1EF763E132F891D" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="D7BD0766F3ECCD98" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BC48540644887189" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4791C0FABDBD6B1B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="984EBDC79F5A4431" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="432B87271CDE064B" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="C655663FCD71C519" />
                                        <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="B5A1CA4EB6F7290F" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3E291FA23813DD35" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="317E15285A83FEDD" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DA4D617B432DF490" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="58BCD39CFB3F67B7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="319B4F0C754A4F91" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="4E2E8B5DC2B9C180" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9A5ACF6070ADC941" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="CFF656D198F211EE" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="567DD5DE2ACF2DD4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="6C9B284E57781BA5" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CAD78A0E77308DE3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="C9A814AA59949C20" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="BF35675C7F592C1F" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FE89BC140367EE05" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D3832EEADA029413" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4251D8080B7D0A28" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="F77F9F9E96EEAB86" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="DF767C50F9FB7CD3" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B38EC2F6FD626F98" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8F5AFC060F8FC8DF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4BA3CD5A52F94F0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="F0681A598EBC9453" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="48008F557C8959D1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F3DFE68CD4B30244" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AFA4B47B51A16A64" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="30D3AB4A4B117009" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="67C11FCFD9C80E9A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1B9DEC330F7D10B8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B64B6B1FD2F1B898" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="9B751A2448AFB92C" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="4E9F1E71C6B5BE89" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EB545FC78B3BEC2A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B711990BC7566134" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5B4DE07223596677" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="34496552D97B0840" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8B3CB231CD0BFE39" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="26E7216CA4D44E06" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8D5FB1D8F29A0BA5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="ADB7F38636D1648B" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                        <Tunable name="no_override" class="TunableExistance" display="No Override" muid="B4CC151F6F82BC9D" />
                                        <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="2359C767A2483EB6" />
                                        <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="161A887CCA076DAA" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="8936FAA82E74347E" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="7AC48113B3E446FF" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CAB1ABC244CBB146" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7CFDDB5FED0112A6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B840894CE62495E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="AA7C92153BA333E7" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="8B76CB65A4044750" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="AEF7D110C988D56C" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCA2B3E52EB83B25" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5A01A3FB92AACF1E" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4DAEC6DBAE310DE8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1E7DB695DD0B80C8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6EFF6C7BC38D949B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="3BB632A2655B1F5A" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4BD60DD76880D619" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6B856C77D16F1CFA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7B735D04B3997C5C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="20559408C166A4CC" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5D8BC8208133EEFD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="471A98DBED642D57" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7988BD959D7B4CB2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="6404730072611E8C" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EE738B9426BCDBEA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6EC0F82AE5914F31" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C67676EFA16C1A69" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="3E58849272A9B22C" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2FD04891120606B6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5B32B7C010919484" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B97D5B95D03834BE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="5B34536C7FD998EC" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="ECDCE4036562DA5D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="92F371CA1B6EF22D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="194B8E65BDC0069F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="A33C1113268F4A5A" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8BE4C38298ADFAAF" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="910B6E7C5F464F20" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="989ACCA4508F5BB9" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6CF364EC9BCBDE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E7F5848550C1C132" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E536F448F6021E0D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="25FC7915E99250D5" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                        <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="E6AD2C82AD454184" />
                                        <Tunable name="any" class="TunableExistance" display="Any" muid="76CDBCEAED41CA02" />
                                        <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="7563275FDE4F60EF" />
                                        <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="F1B3418E0DC54D10" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="28AEE91E497E1E8E" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="DA0F8DD59D51ED82" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="407156351852911B" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D105ED1E91BA1BAD" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="73432D7345765B38" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="FD53A8BEABC9992" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D37BD4EAC341167" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B762ADD06FA8491D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4D280A8D5F10142B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="C863DF7FFDF85C32" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8AFD30340427AC55" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3320EF7BB4839130" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="88BE2C795FECE731" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="456F7A3B371996A3" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3A4DDC2180FD48FA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="29380DD17D70425E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9CC42FD53B0746FC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="C8DEC05241C42DB8" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                        <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="A6884D0B1FEE4649" />
                                        <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="C5406524A0EE522A" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="region" class="TunableReference" muid="A3956149994EDFC9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                        </TunableList>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="B3382E6946F631EF" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F77DD9AA653D8ED7" />
                                        <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="2CC39718BB3621A2" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="806568BE4B1D4FB0" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="486BC2512A4A0AC1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4E33EEAB5D121686" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7C0E1E07D54A708F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="858B2BC94A98085D" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5A75A5600C647725" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="67B60FAE5E0B76E7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="7110D78BF0014AE8" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="432C3AC7DB731FAD" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="46D67D8FEA8E797A" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CDA13090A251BFFE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="2FA03A5C406EC2C7" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                        <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="2F37D43089964DE" />
                                        <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="8E6EA2C8AE8E5F04" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="F721DC513B5C8126" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="BC5CDD477FE4DF9A" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="732F4CB04A3487A" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="A9FF6C48D4EB2FE5" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="CD985BE051B71556" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9A46717CC12021CA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="58EB40E14D618F6F" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F8ED98730FAE3906" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D8B9236A814C0D84" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="3685D0C9946E63CF" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="60154A108B79E83" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6A7FB56429193F6F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="C356452D87CBBF99" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="A531C11EB31BB24D" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3DB93C6F71EA61E8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F2CFE533C601DA2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="401891C327DCA1F4" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="B6EA12AE775BEB10" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9AD338469B5AD486" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="DBB7E8D9DC880118" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="7BFF7C94CDC79542" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6A1C93722D47FDF6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C91CBDFD27B0A91A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E84F88080E27F13E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="perks" class="TunableSet" display="Perks" muid="CC6B0688216D790A" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="bucks_perk" class="TunableReference" muid="535AE7B962AC83B4" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="1E9BDA13AC90484E" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="48C464046FC5EC0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7E43429288CFDF54" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="434AF4B185C4638C" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="3669670028F8DF25" />
                                        <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="ECD7BDBF5565F2DB" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="7F40E6E6AD1E8640" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ABE2E5095ADC7DBF" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EE5AC77E941B697" description="                " Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="B404C4D600A42C03" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="848BB5091C053F44" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="55DB96F420B7AC8F" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="C18255EDCA765B81" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="C5209063B3114861" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A8F37C56AF468316" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BC12B154409056AF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3065850BE862DBC6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="BEC45BE2B96E9D96" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="80E9A91EFC92A883" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="4AFA6C3D6204142A" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7B42581192585884" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="B09CA74D30DB1A40" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="9D0D1DCE4CB627F6" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="57332F04751FEE3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="82A57198126059D5" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="978AEFC8D3F648D" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="60CF1F43DEB463BB" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB292298C88161CA" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="6BAED44DF2B34BC9" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="6EAEDBE9CF69F4CE" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="647E80C6229E3D37" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="5B2D12128C237C47" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="7BD2626BEC4C57DA" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="716BCE2C26493114" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="D8FF74D9A37FD2FF" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="F44DBE06F3171F65" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="6E1D8DFDF180F82E" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="48453B22E187761C" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="685CD4A2EC4E2001" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C84903E8E43F76B2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="92E40C4B4784B515" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1287A1D702592120" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="8C7D18795113D1A4" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="FD5D679CAE6F2102" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="D214465E20637C6" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="3F766D7A91602C1F" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="90B030A08BCD3ADE" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="E86CCB5D2AEBA472" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="30142E65D92977B7" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="741DA2D02E457FAB" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="white_list" class="TunableSet" display="White List" muid="727E8C25691C9F1E" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="755F5197098C6D21" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="D8353476D4B9BC2B" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="216690CFEFADC8ED" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="FA3160DE3E9C0CDA" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="D5E3F13F297F961" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="CC3FF1CF6283EB8E" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="D7EFD88503D2A6A4" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="74ABBA0C1018BAE2" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C7E37D0B27E19E77" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="99A96A97E0C0FA0D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EFB091E105D79A3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="8B0B5A94E861B2CF" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="703588D021D0FE92" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="92547DFE621F0786" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="A0361949D4C8A1A2" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="C77C4A07509EF1D1" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="9549036EDCF4025F" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="E86FBB0F4DBE9E0" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="C2DC8CE0BDC249EC" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="white_list" class="TunableSet" display="White List" muid="47BC91A83330D118" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="897703EADDBE5BFC" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="6A2679B6445C8389" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="CBAFA492FDD8EA28" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="6A3487E0F681714A" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="8960FE8E432EF754" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="8EDA88D2EEAFA261" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="836B70B0A19A47E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="E597111C70316D07" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FAD41CB868172163" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="152D0E973891FB72" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="D8D2F77CFDA94046" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A034CBB6F007950A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="616A5DC1363DA7D6" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="16002026B35C7ED9" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="F1E9E126169DA682" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="6BD0F55D86C043C3" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="828B4F7F4E82621C" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="7CCBD91A698D5478" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="68F37C618AC9F360" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="24C5513B1B6BE249" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="341134C74B360D43" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="35FC8708FC7C6DAD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F4086BEC370F6082" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7FA844801A8E3CC8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="374ED2223F8905E0" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                                    <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="5792A2253BD8DF5C" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AF6FFFB5EF1E1B47" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="52551EDA91AC68A7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DF254EB89D3DE7D8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="4FB63636B838B27F" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E23DF2656183FFC2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E01D013680A7995E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1B5A75D5A029EA59" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="E5958AE0F5C69C79" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="A44301AD355B4A3" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D71145951193C5CD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="A129719CC90DC755" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E3F9B9AD3A77E337" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="6BB4F10A675FE021" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="B1D746A9C32CE11E" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9E75F45C227F72D1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="B81216198320E9F4" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="F61C74ACEA720BE4" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8306BF260BFCF37F" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F52CB6551D37BE21" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="9850C60C3868EDF1" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="DA7D2CA44538A0DE" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="5927995F4102453B" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                                </TunableTuple>
                                <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="EEDC8414F177DBD9" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5E82D12EC1AA119C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="D0D391C2D5BA1748" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="544D6043ABEEE1D6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="2B7D2B8B931A6D70" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="D316C4201D640608" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="46005678D494ADC8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="5D75F24D95B98220" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="491C77073DAFA1E2" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="73FFA48CE9228D9F" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8C58D918ACD8429F" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2B9A3EDEE73C0C29" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="34A12315395B3287" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="D7B73B7D11685DF7" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableList name="skill_list" class="TunableList" display="Skill List" muid="1E0BB409A81D322B" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                                        <Tunable type="statistic" class="TunableReference" muid="A95A2BF690EDD0DC" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="3E85ACC8BDA1FB2" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="58A71747AF00A007" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="A6A066783C479A53" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="ECCABA4422197BA9" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="133EB6A973762BA0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C514F42E36FC1F2C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="986C40A293118C82" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableTuple>
                                <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="476A28191885B618" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A34C9FC55736833C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="FEB78F1FC0F6810D" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3F2D221E8D91DCF7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="14090B97D75807CA" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="1E680C9749555FC9" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E187BDD2524C11C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="9196A44C3CDEBE88" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="44DE21FC71167B0C" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="97255EB1AAF65F77" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="15B5F07AC02B2E53" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="3A2F206ABBE4E271" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="D3DB67C7B061F76" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="9F5AD7352F7B6479" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                </TunableTuple>
                                <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="887804D06068DED7" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C9BB718CB7D28D94" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="B9B4FD54D96B817B" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="32A367E2C1193A1B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="318361EBE04D15F8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="1B6CD2FABE6CB90C" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableTuple>
                                <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="7782579EFFB9237F" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B7708DDD8614A3DB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EDF12DB3EBBCABF5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="traits" class="TunableSet" display="Traits" muid="C28CF755A8A51B1F" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="trait" class="TunableReference" muid="9FDA0C6B98086A8B" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="8FC4887AC02E3D79" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4D4E5E7BCB63CEF6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="82228D8292D403F3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="B3D834BD7D752CE6" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="81E428FACD4B27E8" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="C243BF25176F873" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="BE73B112151252C7" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                            <TunableList name="_majors" class="TunableList" display="Majors" muid="2142FEA4DDE931A4" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                                <Tunable type="university_major" class="TunableReference" muid="B50D9C47AA8F01F6" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7BA693DE40AC14F6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="7716E62457FE3576" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5804035A59C765D" />
                                        <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="D8E4EFA5E199C9BD" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableVariant>
                    <TunableList name="region_to_filter_terms" class="TunableMapping" display="Region To Filter Terms" muid="F50937CE59AAAA23" mapping_key="key" mapping_value="value" description="A mapping of region to filter terms." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="14F572EE28C39B54" Deprecated="False" filter="0" group="General">
                            <Tunable type="region" name="key" class="TunableReference" display="Key" muid="A359A21464A33E0A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                            <TunableList name="value" class="TunableList" display="Value" muid="9E4E7A6B291FEBA" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="E411F1C884988B04" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="A0D229C1A72CD1F7" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CB2DB1326A99A0CC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="8AC926338FF921DC" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5993F216EE52D4FD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="BBFEAE12110F2F2D" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="C4A8694C97B1FF46" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4B184F70A98C622E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="E1D021310B272638" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AF92B924811950B2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="81FF4F47DE4DB379" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="EA272C2F55090C33" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="ABA5F4FA46BA451F" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FD4C99F04BB54D47" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="85C424CAAF640821" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EB6D88C27C1173B2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="DF89DA9A30B02999" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1B9A42FA87A3338C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="AE7A76900D3BDEB0" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="218C66961555955" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="883C644774D1B780" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="282FCAC9CC8E1008" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="F777E3F63D2C8C03" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="77EAED92BDF4EB16" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="25F2C053A4B5E56C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9F2AA759A7FFF211" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="92F09FD381A333BA" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="42DFF153FC1B87AB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EF11DC05E198E41F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="51638E24173AB76E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="A1AA15B681FC1410" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="F4439686C91CA93" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2D7BB0D00FB167B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BA67322DB48B3BDF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5DD1EF3CB4D9FC1A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="B4072235D77C941F" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="84C51C98289DEF66" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="ADE42355CA1E1EBA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AFE424FF50563C55" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="5974B2F1CF7E583" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="D224D82E5EDC1FA2" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="E95E13D0DB9AD18E" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="87999B4F4B1B69D2" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="DDAE0EDC092B0958" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="FF69C4E1011BC8FA" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="940AC71CC2844C81" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6545829F4BCF2A6" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="3BC6616CD1D9755C" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="76C4B175E259BEBE" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="68156074A3454BEA" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" class="TunableReference" muid="788C30AA0A974454" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="501A344E86C6ECEC" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="F0E07996F50B0B28" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="F4DF57FF815668B1" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="14474C927E927B74" />
                                            <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="C504E99784FE4012" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="C22D82F7AC17B82D" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="2752678387FC48EB" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="3C519D8681895C80" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="2E68546C3E2E1A43" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1601691C66ACA3D4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EFD1CDC0A3C96D39" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9A93C0331024A42B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="E0DF94C8114895D6" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="3011CA3B2FBE2AFA" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="BD6DA9467E7C95F9" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="51EE6A142B10EEBB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="4E3B54FBC550E5FD" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="custom" class="TunableTags" display="Custom" muid="C5BA2EB1573A0580" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="72A5C49F908A8855" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableList>
                                            <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="8E1A37FD33A7EF6F" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A7EBE114A45C64BA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B762E76D5D70BEB2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="FD84CF92113AB58C" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D9ED416FFEF9DD3F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="23FE864FFBDA1426" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C13FAACD827E1FB3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="62D93D4FE3D9E930" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6B5FDB69EF376710" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E84BE629D094C2E2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1AE58A5546B4C2EF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="66580B6FE615CD40" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="184E54296A02B9C8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="CA9E639E0A5FED85" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="26F7CBD3735FA62E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="813D62EEE8194705" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="EE11B279B412C4F" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="7565F07D3766A20B" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D6F79983193FBDDB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="194CC1C53A0D434A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="CA4E529EF9439E3A" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F7F08B605B073797" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="686336C1A1B8B27E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="FA43C15CC9BCB6C5" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="A940C1279749FE19" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="7DFE0A6BD7B5A42D" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C8CD634DC2B8D014" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AB0ED6CB9C49D2F2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C0F0C4C20C70CDB8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="421483B40ED2EE7A" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="AF5C42CFF031BB9E" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="E96AF65D38363F2" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1A20DEB8EB6D702A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="8B7CC30CBD1C7CD9" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="E58FDA24265C57B6" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="C1607BA6B625DB5A" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EBA6872E6A8CEDE7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="64B29BEBB02F60D" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="91EFBBA2560BDC99" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="1F08DE2EBC909280" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="43AB7591332D4778" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="74F82129AE2BFBD0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="288F75BA6EFCF3AE" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="D9C6EAF115458534" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="396BDF48AFF2821D" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="838D5F9CCFEA5B90" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="49786F9BABE453FD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="65EFE242156403C6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="B4F2C293B0789ED2" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="89BC63268C4A42FD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="98B6CC1A8A0D3302" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1B8FDD5A599B245F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="4788080CE5B455E2" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="325CA0A4CD57BEED" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="CB52601C72645D0" />
                                            <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="5872E26385CB7450" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CDF3F6298C5F6AE1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="265A6EBC85DDDD86" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="58AB56A8E24EB56E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="C1B9514E4A9A4824" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="520FE720B984125" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7A3063C6EBF2836E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="275F8478532A6A6E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="F04EC0ABF58A50FC" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="EE385AB130A19AE6" />
                                            <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="7D3EB2F67D7AC985" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="774AEBB08F6EB7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="57D2173EC9D4946F" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6806EFB386B62554" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3F7552D31F0C01ED" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="7BDB2442942BFFF2" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="1492C114935B4DAC" />
                                            <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="B08ECDDE6C635803" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="65C618C7F903F459" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="A04B1179EF98F2A8" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7FDE459832A0C408" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="2EE2C803D3397CB5" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="E245678C3626D6DC" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B5A16B3E5DCE80CB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="21037625EBC5DEA1" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="641C039E53758582" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="766AD75FBD0ADF10" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9CAF8FBDC5EFF4D" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="720459DCCBED6CF" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="E7A312BC59438F0A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="D193D48EF29E284A" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="12A1D24DC837E087" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="BE62517ABFFC931E" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="3F08AF0018FBBE81" />
                                            <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="318B656D9FC9C327" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="D74521DF9E6B3607" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="40EAFB70C069C749" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4A694551DC40620F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="892580D543FC5E9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9E4D21B0E870D767" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="79610EAE1F11F075" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="2E5216C74B3049D2" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="B345346B03E65879" />
                                            <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="E192C1AF6F88FE1E" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C69FEDA68E432046" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="1EAB7B765277ABF8" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7095F53537AC4163" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="23F7977047FB52E8" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="439F7572E9FB1924" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="50D1BCFD0E300EF6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="E37C65254F06304E" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="C3F08C19BE4B14" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1C20AF4C98BF2C5" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="25ED9F169C62B1BE" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="FA6C13D806C1730E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="2EAD9FB7CE4DEE5D" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="33456F9DF3AA8F0C" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EB9C669CB2693A" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="11A11AC3CF2328F1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="362C5240B1796BA0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="83BEDBD4C5FC5C2B" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="E38E4057E2E87A73" />
                                            <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="1346CD7182E8AF69" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="45E4F23F052BDFCD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="8B6B170C28FC3516" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="59A85DFC99F77B34" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A76C02A48EB4E08B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="1BAA7557D0B1A45D" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="DD7284CF1AC85963" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E3451811BE2913F1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="25113036707DF968" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="2FC913EB816739EE" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="660524B54EDE46F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C3F06044A7FCA57A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="C942ADFA7D5B4904" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="437964E946950FCD" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B8A64438226AB6B8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F61E4A9A0678A4FD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F50F971D7CA4B577" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="FEBE6AF8984143C8" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="2AA5BD306600A15F" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1CB12D6F7AC9E84A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C8E740D29E33545C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E7438C63D86D44DD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="522D9BCCCE1A8C31" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2D98503601E57E3C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C0FF434C5B3649DC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8CB739D837231126" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="19FFC95717C025A3" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E2ABB53F12137C0F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FB6B2463D0D2BF02" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C2F32C1825443F6E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="8549DCD457A8925C" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="1CABE337494202" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B9F2B8E4407CD666" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="89BB1B1367C03B52" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7C494541476F9716" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="3E458443D2E555F2" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AAA1CBED36F821A5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C322F443C95434D3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="451C5B748F948C33" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="8DE92327DD407223" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_override" class="TunableExistance" display="No Override" muid="1B6CD178919F0CF2" />
                                            <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="F4F76E97DACEB9A9" />
                                            <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="DEB79C15472C669F" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="96B949615A7AE174" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="36160D9D61DFDBEC" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A15A7343E13AEE14" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FC2B27BDD0F20910" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="51D2D9CCF5FEB7B7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="BD88B93BDF50BE91" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="F3EB0E89A3E0F6" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="AF7851AD2B3CB3EB" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="97F5E269D7B8E84" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="443D9DBE99614354" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="48D7CDED3A9E0CF7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2BE04DD35FBEE259" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3F98202DBE3438E8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="109954DA708AB2E8" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BC74CEC3D2255AD5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EF892DA3F8BB6ACE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D0AA81C72243876E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="AFD3D91667D5F4BA" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1CFDC914629D72EB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DAD00D58E28DA61B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3D5101E730F31681" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="AA486AC5B7DBB63B" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F277D62F83D49E0F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="90EA0ECC279FEA28" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="39DEF2992489F4C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="38D5E4DB3BE58E04" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="10F637C8FD277056" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9F97337C2D41EB7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="95265129B09B5D06" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="79FEBFDABD5540BA" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="67EA41F9481265BA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C8752E46E8CD72E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="30EBCBDA985DD6A2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="9830EEBB247D37E4" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CE570A8F9D108197" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="34F759D897226B0A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="BD90DE3B935576FA" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BFCA1EDE669ECA64" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C8784029EE6741D0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="13102AE5DFD1BCE6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="E91BFFAB598DBAAF" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                            <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="E181D5F671EA6C95" />
                                            <Tunable name="any" class="TunableExistance" display="Any" muid="82616FD4FC1A6A34" />
                                            <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="A32FC78CD20EDBE4" />
                                            <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="D20661AFBB20ABE8" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="895B87D1FE7B5472" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="387C52519E5150BE" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26397FF8C4505689" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D754457F21C25DB6" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="B3AC8E06E51F3F3" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="8612AF3ED6D5D62B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9206D3CF84F761BA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E5733B09673C24D2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F986FC255C097703" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="D42DBA247B83C7AE" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="95834A7B04192915" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="97261CF11F4D351D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B53CEE81378765A6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="C1B7CD31770DEE98" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="355F63546A2C667" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="78C95EEDE29DAB9E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AD7B9A922597C243" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="89310BF586CCFA29" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="58014E4903EB9AB5" />
                                            <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="8F7376E0C25B09D2" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="region" class="TunableReference" muid="52C032CB26C7FA5B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="A67CA743D3D353BD" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DB931C2EE1554186" />
                                            <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="33D5F41F9CBC238D" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="235B60CC0F889D60" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EC03131DDD286DFE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="66BA23072826D54E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="18ECC72F13C7B0AC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="D9EE779A204F9C34" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="15758D5E50F47E69" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7D3D701D537F8D1C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="1EEACBA646B9AB2A" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="9C65B4EA9667732F" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="C6933AC96813F82E" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2605A6770AE1450" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="E6A4539DAE60DDCE" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="418DE60AF2E848F6" />
                                            <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="EA6DF8BAAD095921" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="65C0A3EDBAFC257E" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="D0F0962C661AA2DB" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="36F820D3CB09D221" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="7FECBD5578ADF325" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="11E89C3892E70DAF" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DB278D4DF568B93E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="48DDB0D45D2C8FEE" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="72BD583E81F40979" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A49848F9227DFF39" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="598D2B87AF66EFFB" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="AFB8479E08D18C55" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6ADD95528988436F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="4681206D63A5E535" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="663AED794A28EBB5" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="689566968CA32825" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BCCC5595A4FC0162" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="B649130F829BB1EF" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="FC2ED6B492A13238" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="CA691F5147D6D792" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="B13247406CBDF974" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="4F7A854F5E0573B5" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1A834DC7A106BD16" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="29C0A34BC269490E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2EDE3712C3234B6D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="perks" class="TunableSet" display="Perks" muid="E655A445E724D4BC" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="bucks_perk" class="TunableReference" muid="88CBA9291B62009A" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="96BA9772482FE2B7" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="98C65424CC0B2588" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9075413100B1DA6C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="76CA705F54C527D4" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="D3755D880E7CC81D" />
                                            <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="C2DF8A7F534DD1B3" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="730DFF6D8A6ECA54" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8C1476ADE2D297A1" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2D4DD803E0F44500" description="                " Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="7CDEF3D45F08E31A" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="BF14FC3C50CA63F9" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="B150CEC855C4B0C1" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="CFDE729F6D3A4BB8" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="B34F6515912ABFB4" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="918EBD45AFBAE29F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E0D7DB406A9EAC98" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9B2708313DE0ED87" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="41F53A457F81FA62" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="41BC9F3CEBE13C2C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="F599788D0568C6F8" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="84B09FE32AE03D43" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="8F766349ECC8A9B9" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="7666C470381AF27E" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8006CE5B7857709D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="EBBCE7B6553067AE" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="76023C4DC31E4CF9" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="9941ADD2E89D1A04" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A8E3CBF45934C2C4" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BDB140BD3550F447" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="C66B183580E9F3ED" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="BA7A6254A6968C34" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="94AF428F2683B095" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="F72C3540BC9D86AD" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="8C9102C97959B9FD" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="CE2BA8101538F08D" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="FF094A51077F5EB4" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="259447AB425CC694" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="DE25B969B461E691" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="DA50CBD2C7C254AF" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="86AAFAD80FE225F4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D8E9248804DCBBCF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4A244D8A83E7D3DC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="9D0ECE7540C4E9DB" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="FAEA0DA875A623B6" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="DAC1824EB02A79A3" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="656E077A3FDBF354" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="F6CBC6D77211BDE3" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="825825DF4661A767" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="D0C93C67F958446F" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="82C2771826077B75" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="white_list" class="TunableSet" display="White List" muid="21F75C4B0FA18A55" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="9CF3849FB56D3C91" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="8A79568A7A2B74B5" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="C470D44013164BC4" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="AF273CF3F65EA7CA" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="74CDF54C9E5A165D" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="1C413524714C7415" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="DEDB7CDE0F318E76" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="5879C87C741F0D0E" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="42E9FCCD4DBAB0F5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C0F5B164551B980A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C4460483C4825CF8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="2863A6FCDC3ACFD6" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="D0424C07AA025D27" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="10B29B2358E660D0" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="FAA3192518E4CC1C" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="F879CAE41D8BCC35" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="8A27A4B301415860" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="3F939CF0A4D8945B" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="40DC211B87EFCA7D" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="white_list" class="TunableSet" display="White List" muid="4E760FA150D20F9F" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="2B96DB44A313681B" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="4D52980B69F0480" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="78AFD1E442947698" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="DC477FBD583CA312" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="CDEEBF0EF26BB298" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="3FE5F16B8042E4EB" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="477DD98D6B4B9A2A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="DC2B6D2FBCC7FF32" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="28B22F5DEA6A4D05" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="39F78B3132CCA278" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="E75ECA665812437C" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E2FBFFAE28726F65" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="50BC40AA2B015DC7" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="DDFA979100580AEC" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="9A6BF8C226E5D0E0" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="7AE60F0B86D1028B" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="F93AAEAA6384FF68" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="8B1D2A1E28BC6C17" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="FAD0752ED073FFBD" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="A97CF1BA5A4C22DB" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="EDA927AE703FADFD" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="54C768E713C9BA37" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9C43F6231BD72268" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="65C2BE1AFB768CA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="29CAA1B051264188" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                                        <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="6E699B7887A2AFA7" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5BB4FD599DBF42DB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="35DFA20514CBD9D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="22101056EC70C111" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="45228B3CF76445A3" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="83FF68ADEB6F3D50" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F9B9B5C645340455" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="87B717D20A7EB4E8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="756B33949164E1B7" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="AF0C1F6CD2599AC2" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="292FDDF134B509F6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="B398B500D8E8C566" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E50540A31045D7BC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="4C8C7E694D302316" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="CB523B42E4C8F8B9" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EE9278DA1CAAD1AE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="8E219AA87379AF0D" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="20C8ABF476DAF1D3" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="413ADBC38770F2EC" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A5DAA2984BE13535" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="E77E589A8437122A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="B6EE706E60720523" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="15501B46690C6E0C" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="E8FCB3B840922E73" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="559798DBEFA3B6CC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="BCDA44C4A7D1DEE8" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="65CD0679E63FFDE1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="2DB705D19369E5A5" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="E3D0D50C4CB26113" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2C01B4DF5CA5F5C4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="6A7569535E05FBE5" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="63F6DF288B6D71CD" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="2546CB2E1D89AEC3" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3FD3B62A79C6CF35" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3402BD3B63324E9F" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="7446F7E0D3ED89F9" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="6F73E97DE2F2654F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="skill_list" class="TunableList" display="Skill List" muid="EC574860471F7B46" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="78B6F756985A4944" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="4DBB5624DE8F4050" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="A0CDA64ADB0E721D" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="73BC3335EC4AA720" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7124C8ED29DB113A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="623E955158C53E99" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A4715AAEB35C2929" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="582A6E409F8F59B0" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="E74D2DE9CECC1DC0" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C6670160A7DE184D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="E8C6942AB426B905" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6E1A031BE7F7EBDE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="18AEE6EBF87A41B7" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="2213E471A2814CD" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="448F5B9F7C763957" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="411E5A94187A2E71" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="D78F37E053A78CFB" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53F5195B47C68149" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="320C218BB113B98C" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="846F761C504372A6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="72ADAEEA6FF8EE69" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="AA9E9AA7D25CD58" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="66075A0CDEF52C38" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="32354B49D37F94C1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="6C55CC04BE118825" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A25D55F1F9ACBBCA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9D2EF94CAE8FF5C0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="3BBEB861FF05A15B" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="D1E5D7409A929F0B" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E7DEF9D73006CFF3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D36B30E3E8DED764" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="traits" class="TunableSet" display="Traits" muid="D760FFC63C76F472" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="trait" class="TunableReference" muid="9C035B29B943D44A" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="75231F3D538CB617" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DD734ED9BF103507" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CC763FD92B18AB0D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="1CA8B60DC8618DED" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="910A50A65580109" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="70BA6C8864A33026" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="6D792E298E2F95F8" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                                <TunableList name="_majors" class="TunableList" display="Majors" muid="35926FF960CEC413" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="university_major" class="TunableReference" muid="7D51782A931B522D" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2B3E4F989C45B097" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="FD07C0D2FE7D9CE0" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7001552147EEE2DA" />
                                            <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="8C0942E61E5CF780" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="D985D5155731687C" description="A reference to a LocationBasedFilterTerms tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocationBasedFilterTerms" />
            </TunableVariant>
        </TunableList>

        <TunableEnum type="JobHolderNoShowAction" name="no_show_action" class="TunableEnumEntry" default="DO_NOTHING" display="No Show Action" muid="4772B4C9A2836533" static_entries="situations-situation_types.JobHolderNoShowAction" description="The action to take if no sim shows up to fill this job.&#xA;&#xA;Examples: &#xA;If your usual maid doesn't show up, you want another one (REPLACE_THEM).&#xA;If one of your party guests doesn't show up, you don't care (DO_NOTHING)&#xA;If the President of the United States doesn't show up for the inauguration, you are hosed (END_SITUATION)" Deprecated="False" filter="0" group="Special Cases" />

        <Tunable type="bool" name="participating_npcs_should_ignore_work" class="Tunable" default="False" display="Participating Npcs Should Ignore Work" muid="AD49FC093B44F5CD" description="If checked, any NPC Sims running this situation job will continue&#xA;to do so instead of leaving for work when the time comes." Deprecated="False" filter="0" group="Special Cases" />

        <TunableList name="recommended_objects" class="TunableList" display="Recommended Objects" muid="F5CFE3458AC4FD3B" description="A list of objects that are recommended to be on a lot to get&#xA;the most out of this job" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
            <TunableTuple class="TunableVenueObject" muid="548ED260E8402FD7" description="Specify object tag(s) that should be on this lot.&#xA;Allows you to group objects, i.e. weight bench,&#xA;treadmill, and basketball goals are tagged as&#xA;'exercise objects.'" Deprecated="False" filter="0" group="General">
                <Tunable type="int" name="number" class="TunableRange" default="1" display="Number" muid="E7D3656463B55241" min="1" max="None" description="Number of the tuned object that have to be on the venue. Ex&#xA;Barstools 4 means you have to have at least 4 barstools before&#xA;it can be this venue." tuning_state="NeedsTuning" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General" />
                <TunableTuple name="object" class="TunableVenueObjectTags" display="Object" muid="B245286D9F0CA217" description="Specify object tag(s) that must be on this venue. Allows you to&#xA;group objects, i.e. weight bench, treadmill, and basketball&#xA;goals are tagged as&#xA;'exercise objects.'" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E1E00BEF7A747C30" description="The tags of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8ED625D949DF325E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FD9EE241320683AB" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="int" name="object_display_name" class="TunableLocalizedString" default="0x0" display="Object Display Name" muid="A8667044E6B0592D" description="Name that will be displayed for the object(s)" allow_catalog_name="True" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Tunable type="int" name="requirement_text" class="TunableLocalizedString" default="0x0" display="Requirement Text" muid="5A22A1DD7CD9713F" description="A string that will be displayed in the sim picker for this&#xA;job in the situation window." allow_none="True" Deprecated="False" filter="0" group="General" />

        <TunableList name="rewards" class="TunableMapping" display="Rewards" muid="CDF53D2F4811C939" mapping_key="medal" mapping_value="benefit" description="Rewards given to the sim in this job when situation reaches specific medals." Deprecated="False" filter="0" group="Scoring">
            <TunableTuple class="TunableTuple" muid="B2E36AA72E74035A" Deprecated="False" filter="0" group="General">
                <TunableTuple name="benefit" class="TunableSituationJobReward" display="Benefit" muid="4600454C84E3B1E3" description="Reward and LootAction benefits for accomplishing the medal." Deprecated="False" filter="0" group="General">
                    <TunableList name="loot" class="TunableList" display="Loot" muid="3DBD3B3C673DDF12" description="List of loots to give when completing this job. Actor is the sim with the job.&#xA;Target, if any, is determined by the loot_target field." Deprecated="False" filter="0" group="General">
                        <Tunable type="action" class="TunableReference" muid="8EFC69579F9F013D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                    </TunableList>
                    <TunableVariant type="None" name="loot_target" class="OptionalTunable" default="disabled" display="Loot Target" muid="6A4D88D2FF56464" description="If enabled then we will use the tuned situation job to pick a target&#xA;sim (or sims) in the owning situation with that job to be the target&#xA;of the loot operation. The loot_target_choice field will determine&#xA;wheter we apply the loot to a single target (chosen at random) or all&#xA;the sims in the given job." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BDA0789486613DC6" />
                        <Tunable type="situation_job" name="enabled" class="TunableReference" display="Enabled" muid="38F122FADAF0B9D6" description="The situation job that will be used to find a sim in the&#xA;owning situation to be the target sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="JobLootTargetChoice" name="loot_target_choice" class="TunableEnumEntry" default="RANDOM_SIM" display="Loot Target Choice" muid="5DCE708B333CD59A" static_entries="situations-situation_job.JobLootTargetChoice" description="Behavior of how loot is distributed if there are multiple target sims." Deprecated="False" filter="0" group="General" />
                    <Tunable type="reward" name="reward" class="TunableReference" display="Reward" muid="4835B409623331FE" description="Reward to give when completing this job. Actor is the sim with the job.&#xA;Target, if any, is determined by the loot_target field." allow_none="True" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableEnum type="SituationMedal" name="medal" class="TunableEnumEntry" default="TIN" display="Medal" muid="EA2D6C7682D7F755" static_entries="situations-situation_types.SituationMedal" description="Medal to achieve to get the corresponding benefits." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Tunable type="bool" name="should_revalidate_sim_on_load" class="Tunable" default="True" display="Should Revalidate Sim On Load" muid="7F342F693A71B4AE" description="If true we will revalidate the sim infos in the situation on&#xA;load.  This means that if something happened to cause the sims to&#xA;become invalidated then they will be counted as a no show on load.&#xA;This is mostly to protect if someone messes with the sim in manage&#xA;households to a point where they can no longer recover the&#xA;situation.  Set this to false if the sitaution should continue with&#xA;them under all circumstances.&#xA;Ex: During the birthday party that sim who ages up may become&#xA;invalid to age after they end up aging up." Deprecated="False" filter="0" group="Special Cases" />

        <TunableTuple name="sim_auto_invite" class="TunableInterval" display="Sim Auto Invite" muid="526E5AA5980A3FD" description="On situation start it will select a random number of sims in this interval.&#xA;It will automatically add npcs to the situation so that it has at least&#xA;that many sims in this job including those the player&#xA;invites/hires. If the player invites/hires more than the auto&#xA;invite number, no npcs will be automatically added.&#xA;&#xA;Auto invite sims are considered to be invited, so they will be&#xA;spawned for invite only situations too. For player initiated&#xA;situations you probably want to set this 0. It is really meant&#xA;for commercial venues.&#xA;&#xA;You can use Churn tuning on this job if you want the number of&#xA;sims to vary over time. Churn tuning will override this one.&#xA;&#xA;For example, an ambient bar situation would have a high auto&#xA;invite number for the customer job because we want many sims in&#xA;the bar but the player doesn't invite or hire anybody for an&#xA;ambient situation.&#xA;&#xA;A date would have 0 for this for all jobs because the situation&#xA;would never spawn anybody to fill jobs, the player would have&#xA;to invite them all." Deprecated="False" filter="0" group="Sim Auto Invite">
            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="F4DB775E91757957" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="int" name="upper_bound" class="TunableRange" default="0" display="Upper Bound" muid="2ED31B734A46B27C" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <Tunable type="bool" name="sim_auto_invite_allow_instanced_sim" class="Tunable" default="False" display="Sim Auto Invite Allow Instanced Sim" muid="5437FA819A861BDC" description="If checked will allow instanced sims to be assigned this job&#xA;to fulfill auto invite spots instead of forcing the spawning&#xA;of new sims.&#xA;&#xA;NOTE: YOU PROBABLY WANT TO LEAVE THIS AS UNCHECKED.  PLEASE&#xA;CONSULT A GPE IF YOU PLAN ON TUNING IT." Deprecated="False" filter="0" group="Sim Auto Invite" />

        <TunableEnum type="BouncerRequestPriority" name="sim_auto_invite_allow_priority" class="TunableEnumEntry" default="EVENT_AUTO_FILL" display="Sim Auto Invite Allow Priority" muid="55266FD718067733" static_entries="situations-bouncer-bouncer_types.BouncerRequestPriority" description="The Bouncer Request Priority that will be used to auto invite&#xA;Sims into this situation.&#xA;&#xA;Event Auto Fill: This should only be used for user facing&#xA;situations.&#xA;&#xA;Venue Required: Use this for Venue Employees that you want to&#xA;make sure stay on the lot and don't get pulled into club&#xA;gatherings or festivals.&#xA;&#xA;Background High: Use this for important background events such&#xA;as Club Gatherings or Festivals.&#xA;&#xA;Background Medium: Use this for regular on lot background&#xA;activities such as bar patrons.&#xA;&#xA;Background Low: Use this for regular open street background&#xA;activities such as walkbys." Deprecated="False" filter="0" group="Sim Auto Invite" invalid_entries="GAME_BREAKER,EVENT_DEFAULT_JOB,EVENT_VIP,EVENT_HOSTING" />

        <Tunable type="float" name="sim_auto_invite_chance" class="TunablePercent" default="100" display="Sim Auto Invite Chance" muid="422044CF71CF1BC2" min="0" max="100" description="The chance that this job will get auto-filled. Used for Funerals to&#xA;only occasionally add 'uninvited guests' to the situation." Deprecated="False" filter="0" group="Sim Auto Invite" />

        <Tunable type="bool" name="sim_auto_invite_use_common_blacklists_on_instanced_sims" class="Tunable" default="False" display="Sim Auto Invite Use Common Blacklists On Instanced Sims" muid="9BC696B192F0F0" description="If checked and auto invite allows the usage of instanced Sims&#xA;we will allow apply the common blacklists when selecting Sims&#xA;to fill these roles." Deprecated="False" filter="0" group="Sim Auto Invite" />

        <TunableTuple name="sim_count" class="TunableInterval" display="Sim Count" muid="6F4E8258900976EF" description="The number of Sims the player is allowed to invite or hire for&#xA;this job.  The lower bound is the required number of sims, the&#xA;upper bound is the maximum.&#xA;&#xA;This only affects what the player can do in the Plan an Event UI.&#xA;It has no affect while the situation is running." Deprecated="False" filter="0" group="General">
            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5C967F3581B9F9D3" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="C98BDCF6AAEBA4DD" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableVariant type="None" name="sim_shifts" class="OptionalTunable" default="disabled" display="Sim Shifts" muid="AD24A668943FF60" description="!!!DEPRECATED!!!&#xA;Please use zone director functionality to provide the same&#xA;results.&#xA;&#xA;If enabled, creates shifts of&#xA;sims who replace the sims currently in the job.&#xA;&#xA;When a situation is first started it will automatically invite a&#xA;number of sims appropriate for the time of day. This supercedes&#xA;sim_auto_invite.&#xA;&#xA;This is primarily intended for commercial venue employees.&#xA;This is NOT compatible with Sim Churn." Deprecated="False" filter="0" group="XXX Deprecated">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C7DAA4485803364" />
            <TunableTuple name="enabled" class="TunableSituationJobShifts" display="Enabled" muid="F5B1E0E00F5238AD" Deprecated="False" filter="0" group="General">
                <TunableList name="shift_times_and_staffing" class="TunableMapping" display="Shift Times And Staffing" muid="6498511B8566C4F6" mapping_key="beginning_hour" mapping_value="staffing" description="Each entry in the map has two columns.&#xA;The first column is the hour of the day (0-24) &#xA;that this shift starts.&#xA;The second column is the number of sims in that shift.&#xA;The entry with starting hour that is closest to, but before&#xA;the current hour will be chosen.&#xA;&#xA;Given this tuning: &#xA;    beginning_hour        staffing&#xA;    2                     0&#xA;    6                     1&#xA;    14                    2&#xA;    20                    2&#xA;    &#xA;2am is a shift change that sends everybody home&#xA;6am is a shift change that brings in 1 employee&#xA;2pm is a shift change that sends the current employee home and brings in 2 new ones.&#xA;8pm is a shift change that sends the 2 employees home and brings in 2 new ones. &#xA;&#xA;The entries will be automatically sorted by time at runtime." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="1459E69D56A2A539" Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="beginning_hour" class="Tunable" default="0" display="Beginning Hour" muid="530EA0C9DBD4D0F1" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="staffing" class="Tunable" default="0" display="Staffing" muid="21A28D6641A813A6" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </TunableVariant>

        <TunableVariant type="None" name="sim_spawn_action" class="TunableSpawnActionVariant" default="fade_in" display="Sim Spawn Action" muid="C22C967BB7A2A49E" description="Define the methods to show the Sim after spawning on the lot." Deprecated="False" filter="0" group="General">
            <TunableTuple name="affordance" class="TunableSpawnActionAffordance" display="Affordance" muid="E32378152CBCBE44" description="The Sim will run an interaction that will make it visible." Deprecated="False" filter="0" group="General">
                <Tunable type="interaction" name="spawn_affordance" class="TunableReference" display="Spawn Affordance" muid="40FCF327058F1608" description="The affordance that is pushed on the Sim as soon as they are spawned&#xA;on the lot." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SuperInteraction" />
            </TunableTuple>
            <Tunable name="do_nothing" class="TunableExistance" display="Do Nothing" muid="1FF062C886D4F508" />
            <Tunable name="fade_in" class="TunableExistance" display="Fade In" muid="7E81B97987447120" />
            <TunableTuple name="vehicle" class="TunableSpawnOnVehicleActionAffordance" display="Vehicle" muid="C27E9B11B9BDE72E" Deprecated="False" filter="0" group="General">
                <Tunable type="object" name="fallback_vehicle_def" class="TunableReference" display="Fallback Vehicle Def" muid="1D59A5775B183E57" description="The definition of the vehicle to spawn if the sim doesn't have&#xA;a favorite vehicle." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <TunableEnum type="Tag" name="vehicle_obj_tag" class="TunableTag" default="INVALID" display="Vehicle Obj Tag" muid="E8D379EBBBF21336" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The tag to use to look up if the sim has a favorite vehicle&#xA;to use for the spawn action." Deprecated="False" dynamic_entries_prefix="Func" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
            </TunableTuple>
        </TunableVariant>

        <TunableEnum type="SpawnPointOption" name="sim_spawner_leave_option" class="TunableEnumEntry" default="SPAWN_SAME_POINT" display="Sim Spawner Leave Option" muid="8E84D274976F9A9" static_entries="world-spawn_point.SpawnPointOption" description="This, in conjunction with Sim Spawner Leave Saved Tags, controls&#xA;which spawn point the Sim chosen for this job will leave to.&#xA;&#xA;SPAWN_ANY_POINT_WITH_CONSTRAINT_TAGS: Randomly choose a spawn point&#xA;with a tag tuned on the leave interaction's Spawn Point Constraint.&#xA;&#xA;SPAWN_SAME_POINT: Use the same spawn point the the Sim spawned in&#xA;from.&#xA;&#xA;SPAWN_ANY_POINT_WITH_SAVED_TAGS: Randomly choose a spawn point with&#xA;the saved tags.&#xA;&#xA;SPAWN_DIFFERENT_POINT_WITH_SAVED_TAGS: Choose the spawn point with&#xA;the saved tags that is furthest from the spawn point the Sim&#xA;spawned in from." Deprecated="False" filter="0" group="General" />

        <TunableVariant type="None" name="sim_spawner_leave_saved_tags" class="OptionalTunable" default="use_sim_spawner_tags" display="Sim Spawner Leave Saved Tags" muid="8BE38B1F4B556863" description="This, in conjunction with Sim Spawner Leave Option, controls which&#xA;spawn point the Sim chosen for this job will leave to. The default&#xA;behavior is to use the same tags as Sim Spawner Tags." Deprecated="False" filter="0" group="General">
            <TunableList name="use_custom_spawner_tags" class="TunableList" display="Use Custom Spawner Tags" muid="3F29FF497EBC8786" description="The saved tags to store on the Sim to help the Sim decide&#xA;                which spawn point to leave to." Deprecated="False" filter="0" group="General">
                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5D25D0DEE39A2493" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
            </TunableList>
            <Tunable name="use_sim_spawner_tags" class="TunableExistance" display="Use Sim Spawner Tags" muid="AE23B4F0904DA785" />
        </TunableVariant>

        <TunableList name="sim_spawner_tags" class="TunableList" display="Sim Spawner Tags" muid="174CC37C56A1E277" description="A list of tags that represent where to spawn Sims for this Job when they come onto the lot.&#xA;NOTE: Sims spawn either randomly or in order of valid tags see 'Use Random Sim Spawner Tag'" Deprecated="False" filter="0" group="General">
            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="30C435AC5FF736AC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <Tunable type="bool" name="spawn_at_lot" class="Tunable" default="True" display="Spawn At Lot" muid="83B5627C3F66DF0E" description="If checked we will spawn this sim at spawn points that are linked&#xA;to this lot.  Otherwise we will ignore that and spawn them at any&#xA;lot's tags." Deprecated="False" filter="0" group="General" />

        <TunableList name="tags" class="TunableSet" display="Tags" muid="4C7F427628DCF284" description="Designer tagging for making the game more fun." Deprecated="False" filter="0" group="General" unique_entries="true">
            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AE44DCC836E1F06A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <Tunable type="int" name="tooltip_name" class="TunableLocalizedString" default="0x0" display="Tooltip Name" muid="24A328CE685A563" description="Localized name of this job that is displayed when the player hovers&#xA;on the sim while the situation is in progress. If this field is absent, &#xA;there will be no tooltip on the sim.&#xA;&#xA;This helps distinguish the cases where we want to display &quot;Bride or Groom&quot; &#xA;in the situation creation UI but only &quot;Bride&quot; or &quot;Groom&quot; on the &#xA;sim's tooltip when the player is playing with the situation." allow_none="True" Deprecated="False" filter="0" group="UI" />

        <TunableEnum type="Priority" name="tooltip_name_priority" class="TunableEnumEntry" default="Low" display="Tooltip Name Priority" muid="871652D639ADBDAB" static_entries="interactions-priority.Priority" description="Priority of the tooltip display name. Higher priority will always be displayed, &#xA;choosing the last one added from the highest available priority." Deprecated="False" filter="0" group="UI" />

        <TunableTuple name="tooltip_name_text_tokens" class="TunableLocalizationTokens" display="Tooltip Name Text Tokens" muid="A2C80FBAF6E96041" description="Localization tokens to be passed into 'tooltip_name'.&#xA;For example, you could use a participant or you could also pass&#xA;in statistic and commodity values" Deprecated="False" filter="0" group="UI">
            <TunableList name="tokens" class="TunableList" display="Tokens" muid="2709A7DD981C4943" description="A list of tokens that will be returned by this factory. Any string&#xA;that uses this token will have token '0' be set to the first&#xA;element, '1' to the second element, and so on. Do not let the list&#xA;inheritance values confuse you; regardless of what the list element&#xA;index is, the first element will always be 0, the second element 1,&#xA;and so on." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" class="TunableVariant" default="participant_type" muid="4E0BBA8AE3C93453" description="Define what the token at the specified index is." Deprecated="False" filter="0" group="General">
                    <Tunable name="active_holiday" class="TunableExistance" display="Active Holiday" muid="771E6822D75C59E8" />
                    <TunableTuple name="animal_home" class="TunableTuple" display="Animal Home" muid="775E52DBD96A31F0" description="Tokens for the animal home." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="animal_home_data" class="TunableVariant" default="max_capacity" display="Animal Home Data" muid="79766BC41E44291E" description="Data you'd like to fetch about the animal home." Deprecated="False" filter="0" group="General">
                            <Tunable name="current_occupancy" class="TunableExistance" display="Current Occupancy" muid="AFFABBB2CEAD595F" />
                            <Tunable name="max_capacity" class="TunableExistance" display="Max Capacity" muid="8F1A27EA05566FBD" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.Object" display="Participant" muid="B8AED1B4EC3E64CA" static_entries="interactions.ParticipantTypeSingle" description="The participant from whom we will fetch specified data.&#xA;This is expected to resolve to an Animal Home." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="associated_club" class="TunableTuple" display="Associated Club" muid="751B0BAFD6CF265C" description="The token is a stored &quot;associated_club&quot; on this&#xA;interaction. Only works with ClubMixerInteractions or&#xA;ClubSuperInteractions." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="buck_amount" class="TunableTuple" display="Buck Amount" muid="BFE0A3E472805A1F" description="The token is a number repesenting the amount of the &#xA;specified buck type the specified participant has." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="6C7125F9960DE0CD" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A6BB3F73D54C40F8" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="buff_duration_remaining" class="TunableTuple" display="Buff Duration Remaining" muid="7B358EBE7B13F47F" description="Tokens for the remaining duration of a buff" Deprecated="False" filter="0" group="General">
                        <Tunable type="buff" name="buff" class="TunableReference" display="Buff" muid="BD0862A0C72FB4E5" description="The buff whose duration we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="76BBC8768E3EEF70" static_entries="interactions.ParticipantTypeSingleSim" description="The participant from whom we will fetch the specified&#xA;buff duration." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="career_data" class="TunableTuple" display="Career Data" muid="2E8670AFFAD38EB" description="The token is a localized string, number, or Sim,&#xA;representing the specified career data for the specified&#xA;participant." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="career_data" class="TunableVariant" default="current_level_name" display="Career Data" muid="3C52D33953B04659" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                            <Tunable name="current_level_name" class="TunableExistance" display="Current Level Name" muid="605ADCB7378BB897" />
                            <Tunable name="current_level_salary" class="TunableExistance" display="Current Level Salary" muid="80904B9B435B9391" />
                            <Tunable name="next_level_name" class="TunableExistance" display="Next Level Name" muid="D53469FD47ED6793" />
                            <Tunable name="next_level_salary" class="TunableExistance" display="Next Level Salary" muid="1CF120143DE7E490" />
                            <Tunable name="previous_level_name" class="TunableExistance" display="Previous Level Name" muid="B3A5CF7341F7F588" />
                            <Tunable name="previous_level_salary" class="TunableExistance" display="Previous Level Salary" muid="35C39789BD4DFBC3" />
                        </TunableVariant>
                        <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="5E5A8DE1AE5B2AEE" description="The career we care about." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D14734A86864248B" static_entries="interactions.ParticipantType" description="The participant's whose career data we care about." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="civic_policy" class="TunableTuple" display="Civic Policy" muid="326AF98D3AECF774" description="Tokens for the Civic Policy system." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="civic_policy_data" class="TunableVariant" default="voting_start_time" display="Civic Policy Data" muid="5963D231A0F50601" description="The specific value to display." Deprecated="False" filter="0" group="General">
                            <Tunable name="voting_end_time" class="TunableExistance" display="Voting End Time" muid="BEA07579E9D9115A" />
                            <Tunable name="voting_start_time" class="TunableExistance" display="Voting Start Time" muid="7B8001B44B446EBE" />
                        </TunableVariant>
                    </TunableTuple>
                    <Tunable name="current_trends" class="TunableExistance" display="Current Trends" muid="1CBF8DDBE94D1353" />
                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="C44FEACC4988AAB0" description="A catalog definition to use as a token. This is useful if&#xA;you want to properly localize an object's name or&#xA;description." Deprecated="False" filter="0" group="General">
                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="5AEAB486D87CF7D1" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="game_component_data" class="TunableTuple" display="Game Component Data" muid="23502A93362889ED" description="The token is a localized number or Sim representing &#xA;the specified game component data from game component." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="game_component_data" class="TunableVariant" default="high_score" display="Game Component Data" muid="57A6C1129CA750E0" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                            <Tunable name="high_score" class="TunableExistance" display="High Score" muid="CCB1228B16379A90" />
                            <Tunable name="high_score_sim" class="TunableExistance" display="High Score Sim" muid="5EFF47CCDED641B2" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="C8D4F577227C0071" static_entries="interactions.ParticipantType" description="The participant's from whom the game component data &#xA;we want to fetch." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="gig_history" class="TunableTuple" display="Gig History" muid="1D18574597A656D3" description="The token used to display data from gig history." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="customer_participant" class="OptionalTunable" default="disabled" display="Customer Participant" muid="14CC7DAF5B8012A9" description="If enabled, this is the participant representing the customer in gig history.&#xA;If disabled, falls back to searching for any valid gig in history." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="606B2BA792B6157F" />
                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="3737088AF965656A" static_entries="interactions.ParticipantType" description="TargetSim searches for provided customer sim. Lot will search for the current lot." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="gig_history_data" class="TunableVariant" default="gig_customer_name" display="Gig History Data" muid="1B00E3CE457CFB29" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                            <Tunable name="gig_customer_name" class="TunableExistance" display="Gig Customer Name" muid="28D1CEE973C2D1A" />
                            <Tunable name="gig_project_title" class="TunableExistance" display="Gig Project Title" muid="480E04AAE85F5E30" />
                        </TunableVariant>
                        <TunableEnum type="GigResult" name="max_gig_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Gig Result" muid="6D06DA863554512F" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="GigResult" name="min_gig_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Gig Result" muid="6378A56FFC44C82" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A03D8FFEEC8F9B2F" static_entries="interactions.ParticipantType" description="The participant whose gig history we will search." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="global_policy" class="TunableTuple" display="Global Policy" muid="DBAE895BB30ADFA0" description="The token used to display data from the tuned global policy." Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="global_policy" class="TunableReference" display="Global Policy" muid="3EA47B64704571EA" description="The global policy from which data is displayed." allow_none="False" Deprecated="False" filter="0" group="General" restrict="GlobalPolicy" />
                        <TunableEnum type="GlobalPolicyTokenType" name="token_property" class="TunableEnumEntry" default="NAME" display="Token Property" muid="93A05C8C6B208F68" static_entries="global_policies-global_policy_enums.GlobalPolicyTokenType" description="Which property from the Global Policy Token to use. NAME&#xA;will use the policy's display name, PROGRESS will use&#xA;the progress made over the max progress value. " Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable name="interaction_cost" class="TunableExistance" display="Interaction Cost" muid="19913C0AA306369A" />
                    <Tunable name="interaction_payout" class="TunableExistance" display="Interaction Payout" muid="80D2789035DD599D" />
                    <TunableTuple name="lifestyle_brand" class="TunableTuple" display="Lifestyle Brand" muid="B1BAB66BF877AAAC" description="The token used to display the name of a Lifestyle Brand &#xA;owned by a Sim." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.TargetSim" display="Participant" muid="97EAD64C32E2E5DF" static_entries="interactions.ParticipantTypeSingle" description="The participant who owns the lifestyle brand." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="money_amount" class="TunableTuple" display="Money Amount" muid="5D0A6B0695A6A56B" description="The token is a number representing the amount of Simoleons&#xA;that were awarded in loot to the specified participant." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="4D780B7E5418BB41" static_entries="interactions.ParticipantType" description="The participant for whom we fetch the earned amount of&#xA;money." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="object_fashion_marketplace" class="TunableTuple" display="Object Fashion Marketplace" muid="8C413DD3001288CC" description="Tokens for the object fashion marketplace component and &#xA;fashion marketplace system." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_fashion_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Fashion Marketplace Data" muid="AC8121E3207D5CAF" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="ACBCF26D31DC1A0B" />
                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="3290323A0E419B7D" />
                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="B9E529CFB01ABB3F" />
                            <Tunable name="suggested_sale_price" class="TunableExistance" display="Suggested Sale Price" muid="79A0EA7810B58E0C" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="object_marketplace" class="TunableTuple" display="Object Marketplace" muid="4FF2B86397B4AB6D" description="Tokens for the object marketplace component and marketplace&#xA;system." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Marketplace Data" muid="1329A88360A8A4B5" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="7F6A9B27C80D8799" />
                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="D3E5984659D75547" />
                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="B60A98F5889D6187" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="object_property" class="TunableTuple" display="Object Property" muid="3D794E2504605C63" description="The token is a property of a game object.  This could be &#xA;catalog properties like its price or its rarity which is a &#xA;property given by a component." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="GameObjectProperty" name="obj_property" class="TunableEnumEntry" default="CATALOG_PRICE" display="Obj Property" muid="1CDF803CA89B1390" static_entries="objects-game_object_properties.GameObjectProperty" description="The property of the object that we will request." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="object_state_value" class="TunableTuple" display="Object State Value" muid="A9CF05256AEBE130" description="The token is a string representing the value of a specific&#xA;state from the selected participant." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E7498CE91C6F190B" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;state's value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="EE3FB1536D32B722" description="The state's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectState" />
                    </TunableTuple>
                    <TunableTuple name="participant_count" class="TunableTuple" display="Participant Count" muid="BBC58854884E438F" description="The number of participants of the specified type." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="32CA3C7FDDD9604D" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="84700A4E465BD28E" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="5EE07CCF882AE884" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="5C77447404A8BA02" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="78939DF954ABF887" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="EF764DAC50A85061" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="879442FECE935981" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="F82A17F6AEB980B6" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="C64160420AA531D5" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="2ECA0C4F71685A0" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="BDF12ECD298A0EF9" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="A6F37D3F1D86D298" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="slot_type" class="TunableReference" muid="7E360EB2476C9120" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="D9BF2D42C2884310" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="ObjectChildren" display="Participant" muid="648A44AAB96A3762" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="128C1D58B9072D89" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="1DB6C8718E87D719" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="CC1E466D687CD8CE" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="participant_type" class="TunableTuple" display="Participant Type" muid="3E43A33AA70A35AE" description="The token is a Sim or object participant from the&#xA;interaction." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="formatter" class="TunableObjectLocalizationTokenFormatterVariant" default="single" display="Formatter" muid="40B98FBDFFAB0D1B" description="Define the format for this token." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="bullet_list" class="Tunable_TunableObjectLocalizationTokenFormatterBulletList" display="Bullet List" muid="33E8A885B44DF934" description="The token is a string, which is a formatted bullet point list. Objects&#xA;are grouped by definition. The text for each item must be specified." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="bullet_text" class="TunableLocalizedString" default="0x0" display="Bullet Text" muid="5109EAA662AC69C7" description="The text for the bullet entry. The string is provided the&#xA;following tokens, in this order:&#xA; 0 An object representitive of the group&#xA; 1 The number of objects in the group" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="single" class="Tunable_TunableObjectLocalizationTokenFormatterSingle" display="Single" muid="74D230A65E7720C4" description="The token is a single object name. If multiple participants are&#xA;returned, an arbitrary one is used. That is, unless the mismatch key is&#xA;specified. In that case, the string is used unless all of the&#xA;participants' definitions match." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="mismatch_name" class="OptionalTunable" default="disabled" display="Mismatch Name" muid="4C407B4DEAE440D5" description="If enabled, this is the object name to use when using a multi-&#xA;object participant yielding definitions with different names." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7ECA0F5CC4E48A53" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="953E7E864F8DA531" description="A localized string that may NOT require tokens." allow_catalog_name="True" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="23224B32DD9ABBB5" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="A6E43DCAC7263332" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="E853E27B8ECBDB87" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="13987A03A3B7BB38" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="B5EFF2161F00138A" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="9A89CD03F9A48CD4" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="4F8F6F1E857F4CED" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="62B286ADEA551E3" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="F2B3252D42EEEB18" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="BDFDE58B0193ABA0" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="36E9CB9AC9C1C099" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="1471848D77DA178D" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="slot_type" class="TunableReference" muid="EE738EBA9AC241D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="4D4536E38AE825B7" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D46114EA5C21FC5E" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="6759DD57A3F40E8A" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="42555790A2FB8746" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="A3B09128467B59EC" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="participant_type_special" class="TunableTuple" display="Participant Type Special" muid="A141D720F36B7EF5" description="The token is a specified string grabbed from a supported participant type that &#xA;requires special handling. Currently supported are:&#xA;I. Participants that resolve into households&#xA;    1. Household Name&#xA;    2. Household Description&#xA;2. Participants that resolve into zone ids&#xA;    1. Lot Name&#xA;    2. Lot Description&#xA;    3. Name of household that lives there&#xA;    4. Description of household that lives there." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="participant_type" class="_SpecialParticipantTokenVariant" default="household" display="Participant Type" muid="DCB9148B35229CB4" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="household" class="Tunable_FromHouseholdParticipant" display="Household" muid="C609AF2AF0880F85" description="Helper class used to support participants that resolve into households." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="attribute" class="TunableVariant" default="name" display="Attribute" muid="EAFED2BAD34358CA" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                    <Tunable name="description" class="TunableExistance" display="Description" muid="2B0AAC2FE453EB9C" />
                                    <Tunable name="name" class="TunableExistance" display="Name" muid="39BF595BDE504B49" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeHousehold" name="participant" class="TunableEnumEntry" default="TargetHousehold" display="Participant" muid="73E2838BB0768717" static_entries="interactions.ParticipantTypeHousehold" description="Participant that resolves to a household." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="zone" class="Tunable_FromZone" display="Zone" muid="E1DC6FE15885B1B9" description="Helper class used to support participants that resolve into zone ids." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="attribute" class="TunableVariant" default="zone_name" display="Attribute" muid="62EAB59FFDFA61E3" description="Which string we are interested in." Deprecated="False" filter="0" group="General">
                                    <Tunable name="occupant_household_description" class="TunableExistance" display="Occupant Household Description" muid="64902D28A63C7E4" />
                                    <Tunable name="occupant_household_name" class="TunableExistance" display="Occupant Household Name" muid="7F11A608385C246D" />
                                    <Tunable name="zone_description" class="TunableExistance" display="Zone Description" muid="46E9F40B6A1B39F9" />
                                    <Tunable name="zone_name" class="TunableExistance" display="Zone Name" muid="74A97A1C494A9E82" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeZoneId" name="participant" class="TunableEnumEntry" default="PickedZoneId" display="Participant" muid="BE1404E9DC48710A" static_entries="interactions.ParticipantTypeZoneId" description="Participant that resolves to zone id of a multi unit business." Deprecated="False" filter="0" group="General" invalid_entries="AllUnitZoneIds" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="picked_part" class="TunableTuple" display="Picked Part" muid="A4612794D2993AE3" description="The token used to display the name of a picked part." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="scholarship_letter_component_data" class="TunableTuple" display="Scholarship Letter Component Data" muid="6391272519D0963E" description="The token can be used to get strings representing scholarship&#xA;information from the scholarship letter component of an object." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeObject" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E3347E3D91EC72F8" static_entries="interactions.ParticipantTypeObject" description="The participant from whom to get the scholarship letter&#xA;component data." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="scholarship_letter_component_data" class="TunableVariant" default="applicant_name" display="Scholarship Letter Component Data" muid="242C3B3ACB68BF06" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                            <Tunable name="applicant_name" class="TunableExistance" display="Applicant Name" muid="249E324938679B2A" />
                            <Tunable name="scholarship_amount" class="TunableExistance" display="Scholarship Amount" muid="EF921166CD2E303B" />
                            <Tunable name="scholarship_description" class="TunableExistance" display="Scholarship Description" muid="5B46B94B7B925BE9" />
                            <Tunable name="scholarship_name" class="TunableExistance" display="Scholarship Name" muid="3A3D31046208F852" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="sickness" class="TunableTuple" display="Sickness" muid="58AA43C414B1A6C1" description="The token is the name of the sickness on the specified Sim." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="810F9AAE7F4320F5" static_entries="interactions.ParticipantType" description="The participant who is sick." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="small_business" class="TunableTuple" display="Small Business" muid="43BB7B4075435C32" description="The token is the name of the small business owned by specified Sim." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="51D744616F817D42" static_entries="interactions.ParticipantType" description="The participant who has small business." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="statistic_value" class="TunableTuple" display="Statistic Value" muid="BCB1B6A7F0D2C943" description="The token is a number representing the value of a specific&#xA;statistic from the selected participant." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="clamp_value_to_floor" class="Tunable" default="False" display="Clamp Value To Floor" muid="2BB7330F037AF12A" description="If True, the value will be clamped to its floor." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D406FDE20A7077E9" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="A8739F7D14585793" description="The statistic's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="use_statistic_name" class="Tunable" default="False" display="Use Statistic Name" muid="79542D79B199CFA7" description="If True, the value will be the name of the statistic." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="street" class="TunableTuple" display="Street" muid="B26E7ED3C98F0265" description="                    " Deprecated="False" filter="0" group="General">
                        <TunableTuple name="street" class="TunableTunableLocalizationStreetSelector" display="Street" muid="5D761C77AD36149D" description="Using the Street Selector tuning, provide a token localization appropriate&#xA;street selection." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="6724F1DB845E807E" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="D60C719D20EF9AF3" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="DBCFB42696E30414" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="8D3B3F5EDBC3C2E7" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="267E4595F868DD86" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="1E99843EFA3DACE7" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7F1E79CC7BA5E94E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="40D5F5BA606D2884" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="277EFE47C7865DF2" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableVariant type="None" name="street_data" class="TunableVariant" default="policy_up_for_repeal" display="Street Data" muid="F99D1F7EC0E8019F" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                            <Tunable name="policy_up_for_repeal" class="TunableExistance" display="Policy Up For Repeal" muid="CA9808320316DC23" />
                            <Tunable name="random_losing_balloted_policy" class="TunableExistance" display="Random Losing Balloted Policy" muid="5F3EEA95BA19AA5C" />
                            <Tunable name="winning_balloted_policy" class="TunableExistance" display="Winning Balloted Policy" muid="99EFA873ADB2F1F6" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="venue" class="TunableTuple" display="Venue" muid="32127783FA7AC3B3" description="                    " Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="venue_data" class="TunableVariant" default="active_venue" display="Venue Data" muid="829B57FFA8A7CAB6" description="                        " Deprecated="False" filter="0" group="General">
                            <Tunable name="active_venue" class="TunableExistance" display="Active Venue" muid="F8E35BDEDBD7677D" />
                            <Tunable name="source_venue" class="TunableExistance" display="Source Venue" muid="913F0A2E8A8CD26E" />
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
            </TunableList>
        </TunableTuple>

        <Tunable type="bool" name="use_random_sim_spawner_tag" class="Tunable" default="True" display="Use Random Sim Spawner Tag" muid="5C00F17668075B" description="If checked, the spawned sim will randomly select a spawn location out of all valid spawn locations.&#xA;If unchecked, the sim will pick the first valid sim spawner tag in the order of tuning.&#xA;ie if Tag[0] has valid location use one of those otherwise -&gt; Tag[1] -&gt; etc" Deprecated="False" filter="0" group="General" />

        <Tunable type="bool" name="user_facing_sim_headline_display_override" class="Tunable" default="False" display="User Facing Sim Headline Display Override" muid="4EC9B3814FC28FE9" description="If checked then the sim headline will be displayed on sims with&#xA;this job even if that sim isn't part of a user facing&#xA;situation.&#xA;&#xA;Ex: Active Careers where we want to show the jobs of patients,&#xA;co-workers, and the like but they aren't actually part of the&#xA;user facing active career sitaution." Deprecated="False" filter="0" group="UI" />

        <TunableList name="zone_modifier_based_filter_terms" class="TunableList" display="Zone Modifier Based Filter Terms" muid="56ECF8AF2F64AF90" description="A set of filter terms, based on the active Zone Modifiers, that&#xA;augment the tuned filter. This allows for zone-modifier-based&#xA;variations." Deprecated="False" filter="0" group="Sim Filter">
            <TunableVariant type="None" class="TunableZoneModifierBasedFilterTermsSnippet" default="literal" muid="6C41509374AAD737" description="This may be tuned in place here using 'literal' or as a reference to a ZoneModifierBasedFilterTerms tuning snippet." Deprecated="False" filter="0" group="General">
                <TunableTuple name="literal" class="TunableZoneModifierBasedFilterTerms" display="Literal" muid="61480281F4610AA0" description="A set of filter terms that vary based on the current ZoneModifier.&#xA;Currently we only support variations based on current region." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="default_filter_terms" class="OptionalTunable" default="disabled" display="Default Filter Terms" muid="EB6DC4D47222DD95" description="Default filter terms to use if none of the specified ZoneModifiers is active." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9C1338EABF078B26" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="2849778A04B24D40" Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="CE708965BE375368" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="D9DF513D102002EA" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D31A16C8721BF71C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="FEAE595C8D1107BC" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B00D952FF271FAF1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="7C8E13DE853B412C" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="7496CE52EBC6FCDA" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A42BFFABAA7B2270" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="3B5B0D000E005FE6" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B972D63D227EA4FC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="B9A6B54B824D86D0" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="CED235AC3A36DAB0" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="BCE93154A6C62FD2" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="82AA6E3726E98E12" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="1849602D99532194" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A4DF19DADD3BF46C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="302C4E014ECFB7BD" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2BF668C30DA974A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="857F2F6548157C3E" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="B2C29BB88EFB16DA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="19C8025502B34767" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="C4AD36C7BE6FC15B" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="178D4482BB7EBBB8" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="BBC8DAAE0B16EFDE" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="56B79B73D0CE2370" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2B111F962354F5CD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="BC905DFB57A8C7F4" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C2284C0CB4854194" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7066EC21F91473D9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="89B156BBAB6E6890" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="840813F092F85E9F" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="E6627370D36ADA0F" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1BA578F828F87D14" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="951985FB26939F9F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5963FDBB6EF5745E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="DDF3B8E5AA94467D" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="75B3D63094663316" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="89A309B47B29141B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5BD8F6517035167C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="15D7D539F3746B04" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="BEBC4D48C95DB30" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="C594917F9183949A" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="F92438ACCB84DAB8" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="1B9BE0E761E6FD60" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                            <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="9B787A775F61A0DE" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="6B55F2FC6B23BD60" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8BE1F7D3BE270290" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="660AE12C6B3DCAC" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="5658EAFDD147A93" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="19335EBB1F5377B6" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" class="TunableReference" muid="F1F72D32374C66EE" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="5937948A35CA73F6" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="2F9AAE5FFE1AEBD6" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="2590C56CDDAA1DB3" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                        <Tunable name="none" class="TunableExistance" display="None" muid="7000AAA33534B144" />
                                        <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="852DEC90B9CAFA2C" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="A7126B83F13501BD" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="4BDDEDDFCEC2E0BE" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="A6BB68A99DD1FDB0" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="8DFAA34BE33B16A8" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="56D4084FF459807C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="110D4EFD2A13851F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2B0C8C04117B72DC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="F06D652DD90488A2" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="510B000347DAE91A" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="FDD7C50861CDBBEE" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DF14B38E8CD4E7EF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="5CEFCEE54BD50378" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="custom" class="TunableTags" display="Custom" muid="2A719DD46444C8F0" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3481D106FB5A6AE5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                        <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="C3E52DED23690566" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B5079FDAC9F67E1B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AA681D23FA641A38" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="67A3CCACFA7EFA50" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="67256568605D2169" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2B563B84356C0B66" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B3DD6448BDE56249" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="83975AB335A03D53" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3D91123342919436" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A2353C878946B6EF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E4D0A36C2C5E4F1C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="1748095453538DBE" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="777730399576B3ED" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="FB6F7C02E1320C90" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BFA2ADFE6AF3D63B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="AF457A0D84F62954" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="BDA912B7B73B8EC9" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="E86C0AB66334D463" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BD2A763582F3912" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8FC42628CDE0A44E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="21D0DD7C96049C6A" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="185F6FAB1068183C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="915CF5E13A8383F8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="A9AAE9E59EC5D0ED" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="E93872B238B43070" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="5B865BEE3FF20597" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="658B0938A4590CB2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B68BCC1C4017A0BB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2C6B457EC4B607CF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="7EC1645C2457DE28" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="1C79DF1EB414D7D6" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="87F8BA2E3BC30A7" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="16C1145AD0D8C496" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="A61A75AAD1CDB453" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="5C423BF3A6BE9A50" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="80078798B3E1823D" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5E880C8043A48E11" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="1F3B1BA4C6433DE6" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C3AAC7D22D511675" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="2F27B363A4CFF641" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C2C9A535D08E3FBB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DD3FC4167490B339" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="2605123977ADBFF4" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="F3D48AB07E84D13" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="625D852438EC538" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="34E0F0F85E065903" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6ED9D41D9BC2CC64" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2087D6F70363F34D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="281D91AC7CEDDEB3" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B9FE7AB61879CFB8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1B63285961D81A0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="42E1F9E4C02D2BCA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="6EED1B71CE121EA2" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="F07A0B14528309F8" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="BBD3794D2A6B6FDE" />
                                        <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="C79C2076F0CDE10D" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FE46701B55DE2A71" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="10C64371141CF46A" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E707383325C49BA2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="C304FDDB554C9AD0" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="38C8C930D27066C" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="70F8DC6138654DD1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8E9C756E34A8D5CC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="E71D39418CBA6517" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="52FC5889C20C8B45" />
                                        <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="262D02F47CC2F95" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="ED627F85CB51E303" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="163805882022B459" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E56A108D7E5D8729" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F0A72CBBC61D795F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="F9714814F757FA48" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="F93FE582D8C7F218" />
                                        <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="7FADCA05705B61F9" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F0A013F98B3BAF9" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="51C4445EA40D8363" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="27306279B84CE95B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="3BCE9FF095C140E3" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="F9E535063B3AA996" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B0FAAC7BF5387C87" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="DA9F0BD766A20853" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="7B07007675E6D3F" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="7C188A81C7DE1E84" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD3763CCCBE3CF2A" />
                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="95CDDD619CE3A982" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="88157ADD0D814791" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="6217E3228200E99E" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="A5560EF28CE92096" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="F54FDD89D19BB8AF" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="EEFA6BD737F41287" />
                                        <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="9C83D5DFD9FCCF2B" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="11402C75793B47B7" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="C782FC50620ACEBF" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C5E0C252B95EE879" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9D8B04C86A1B966F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DAA5B8FC400B07C4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="52144A4D92FFDD88" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="F911ABE3F20152F4" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="D2B43156359BFB01" />
                                        <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="443E00768451DDFF" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3EC849027366517F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="BE574B08D396B991" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AE1633B01643B5C6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="4E42841D0A93F739" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="F5D63DE4CB8BC1FD" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="62EC9B412AFD299B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="E1872B3A1D3BB9F7" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="D70C9C3421392071" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A183F385AFE98510" />
                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8282AD14B0129A3E" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="F2DC3981ECC8E0C5" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="AEFE74CE153D8E62" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="EFB041E1788AE59E" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5A0875C2B34DF715" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F55B9D348EE5749D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="867B65B64E01505D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="4D78385A31D6899A" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="C4DC15F9BB19221E" />
                                        <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="2032C851A7E5AFF4" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C22F54BA460723B4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="147B1C5794AE6B0F" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E06EFE8BEC1C1CD3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="744D3DDF3555D1FD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="D69B40C8A00A15AF" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="F5D5D275F5F930A4" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8F21C220805EDDD4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="7A95B6B8A953C130" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="B263516B19AE3680" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="932C9D82A05F78E0" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E5E09879A009E4F1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="93E84C47905CC855" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="822D7CFC0EB2981A" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A48D1FF2CCAEEC18" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="80CD6230348758DC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4564551BEE74F4C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="8724F94E4F4097D" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="26483F6371B773C2" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C24266FE454627DA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4DBBDF5E5485A153" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B6417E1A512F19CB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="A59472AE775FE2D8" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F0B2DD1D551E7BD7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="614A6AC8FC11CB60" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5D513D01116913D2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="ECA4E00D63E28160" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CA7ED17EC6F05D6C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BC622DA9B354ED0C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6D95757DD024EA44" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="2336A55EE00AD2F3" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="F342B3B4BCFF1CC9" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1F613BC04F6A7C13" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9E050443C7542FC9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="52E9C172C3341359" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="FE89BDEBDF95621E" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EEB3C0C9E2A543FE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="537B1ED5698C577C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7348828704B47725" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="42B4B5A31DF7FFB1" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                        <Tunable name="no_override" class="TunableExistance" display="No Override" muid="D1E414CD8D97D4D8" />
                                        <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="17A28101E83C6ECF" />
                                        <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="DC609C5A99B9011B" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="8566C59678643C65" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="38269771E89695F0" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CABA3C12E9FDB321" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7106A48E6A3B24EB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D4A52E696850A71E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="358E0970D5B1D7E8" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="DEA11F310E6C4483" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="579679CDFAD47806" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36CEF449FEF073D3" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="6E0B78FD32D7E2F6" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4607F3AD729345E3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="30BB6779FE565E4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A4BCF53103D24B7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="7BBDBF7DC7A462F1" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E351C463677AE965" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="63E9299C3B45EC9A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9EDB9FBB07C5C05A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="3B988532F92F5217" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CFF2B4D7893458BA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="95847D5D296D2E52" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DF3A76F5C8E2EC4C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="78727F5BD34746D9" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8629A2A933834A12" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C8F3B5FAB0927A85" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FE4E7F0527947B33" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="CD0FB0A3A2F9BBFD" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2A2B48E028381566" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="74175E3EA8BBFBF7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BDEC4A60A87DCB73" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="4F6040D83FBD252B" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BC09C3C10012ED9F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4068E9CEA8CB19FC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="238EFA0953D82D27" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="1C0B924DEACCE12F" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="22B47227D86BFE95" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E3C432E95FC8C062" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="6A71A488233CF932" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A5BE72677AC3427D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D4E49868C5104197" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5D660F3F1FA0441F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="5FACE9C92FB97CD7" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                        <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="9F4D283F0A6AF454" />
                                        <Tunable name="any" class="TunableExistance" display="Any" muid="C83218C3F7A16944" />
                                        <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="4334B99D2F6B7D79" />
                                        <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="AC6AE5B3E24EEA8B" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="8B001756B3DAB7CF" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="39A63FCFB3256248" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A414D2D520F2322" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3AFEC082547672A8" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="2A9774EB81600AC6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="3A093C959BFF1277" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="11D0CED2ACDE7D26" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="669ECB80A3777B91" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3146824679E61F26" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="9773A9904385D9A4" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F9122FAB93E45A21" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CBB84047AF6773F7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E86E168607887904" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="3F30351B04BE5057" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A20AB359E085D4B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="ECF9191C151F6F7C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2CED3C2980A16A08" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="93B4004778C4C5B9" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                        <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="141AA7191B4C504E" />
                                        <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="7E921978D547C9C5" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="region" class="TunableReference" muid="6A373CB4A2299044" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                        </TunableList>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="5ED76A94608AF73E" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8641F6349E20C57" />
                                        <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="9CD19CE1731FD1C0" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="A476A898D206662B" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3D032062FAFFD432" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B2A1AB58AE3D0826" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4713135D98FF1C91" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="6D7E344C1BF77654" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4A71E4968B1DE87D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="26046011FE698891" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="5D0D238202BC2148" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="D53F4DF8ADEB6EA0" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="566EEF57034ED1CB" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8E6646849F067283" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="1642F3C6757E0329" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                        <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="B3829991DDEBEB0E" />
                                        <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="EA9CE4290ABC074" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="24938AA4A818D9CC" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="8DFA6CC3F961619C" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="B0EEF948E98371D1" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="EA75682851430DF7" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="9B3BABC3A9BD68C7" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="88810AEC96E359F8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="5EBC03DC80481DC2" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1D80BCFEF99E27A4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EDEBA2C93BB9809F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="DB5A1EF9BAD617F4" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="A91FC21974A5E443" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CFB3E046C41194D3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="3723CB0DFB73837C" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="F77C069C4061C2FF" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A96454FC3B967782" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E21A6C05CB6951E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="F162C53B21314CE5" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="DC67E22903E8226F" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C40EC3BA40453F30" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="DE429ABE66A1C038" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="4D06CA40494E876C" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F59B647BDCD92383" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E7D97FD6FC6CD825" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B931AA466A01E51F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="perks" class="TunableSet" display="Perks" muid="2753FE2C812ED1B9" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="bucks_perk" class="TunableReference" muid="CC74D7AEF297D7D9" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="6400A54CD38A3F7F" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DD5847B308A5962E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B0D3FE358F1BBD52" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="B1E75E24456B4829" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="B9E34B23B115B54A" />
                                        <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="9A22A70BFA51BE52" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="8FAFB3B39CF1CA5A" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="208230B705E6F00B" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FD46B5222E447D00" description="                " Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="DAFA4A6639FA67C0" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="15DF43B2BB770025" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="40A12C28B61697EA" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="D54179CD47D0DE98" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="FCAAA28CF34C7D05" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F06B5D2146CBDD96" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F0C15B310548DC77" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BE6643F6A535B8D5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="9AC382E1D6070483" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DC945447E8B2A8FA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="6253D6C98C00D51C" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BC0058200DE3346D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="8641CC665B766559" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="DD560C20F59A6009" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4166816B24463A2F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="C56B01370AF81B3" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="7193ED3336E08030" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="BF77BFA0F0415443" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69C29952F91BBC2" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="AD2D99270AFFFB94" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="50A356F309DF2BF8" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="1519E606E3BF9A1C" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="745E66ADF7E6D57D" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="718CDEA052FBE616" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="65B3F7ABAA68E58B" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="CDCE207D3BC76A22" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="159479DD7BE93B17" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="C3E38E84B6AA8551" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="69FCBA5BD8F6951C" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="B2A4DD5A248FFE87" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DFA12849C2D48685" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1621CFC3FFA67D91" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9B239F589C2F688" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="7F542AB8F0BC224A" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="1D961CFA47A3C342" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="2F1D066FC6D56592" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="8C00CE72E8F6E412" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="E04744390F32E744" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="E807604B19C5D4B7" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="240F5C6F7C89B9C3" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="CDD3C53B7FE22C4A" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="white_list" class="TunableSet" display="White List" muid="A6468C6C6602DBD8" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="6726E5B0925DAB90" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="26C3F66945643B04" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="716B3907FE4267DA" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="632799BAB43D2BCF" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="574CAB9DBA4C1A16" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="F1011FC5D9BBD158" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="D67ED75707AFE9DE" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="1A7C2C19649DB210" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F657C18A26609B6F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C263B5C52AFCF184" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="375B16F4CC2D4369" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="F2C29F02A4D2BCB9" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="DD33A4D6D9847125" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="7AE3CBE6032973C1" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="CF96F51FF556B623" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="B8025AE17F1A4D5A" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="9532AD0D55AA9372" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="F7D3615F5A925A96" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="2D9B1C3A31C526C" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="white_list" class="TunableSet" display="White List" muid="14F3E2297C34E469" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="BDCB880E27DD6D22" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="685F4D29E5414CA2" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="1D2E46AE360151A8" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="E70FB0F739320FC8" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="1A88FFB0445E0D51" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="2C50E1CC97E1F89D" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="361691ED763E9722" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="C31DEC78575563AE" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DBC6070A36A642B8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="FA0EE4E686F7D4E6" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="F0369C8B8C9E8AA6" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EEC3B3B421FFD84" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="36951E22DCE5071D" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="653F4AE3BDE9B1C1" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="37E4A82B5113E2B7" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="36B95A5691C5D329" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="7DD9456F92ABAE59" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="F26C14CC980066B2" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="1FE51ADF5C952309" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="9031416674BB03C1" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="DB3347164DBC9D4F" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="10D0E4A5CB6ABD48" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5B9A11E980CFEF38" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB8C4848FD7354F9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="6B83CCE20A92E6B1" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                                    <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="35D826079189AE73" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FEEFA8659D639885" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E1B8A753EF1B9176" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E8C4F19DEAC2A5C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="50DEB9676953EE2A" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9087E27124BDD1AE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7D678017A2164E47" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="93CD58C1252FDAA4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="7CB450FBF0DD9CF" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="8E7317F2F6E58548" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AFDF876615F6DA4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="A7ECBA3962BE579D" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6554C304090AECBB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="49785D0ABE85239C" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="854F9778506F2991" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B68C2EF688ED0968" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="54DE2A147F7517BE" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="1E22443ED71BF5D6" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="605854B05142BEFB" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BB0575C2E8B9563A" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="CDFDD6A316E9F16D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="5E52D5612CC9D676" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="3A75F4010E62798E" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                                </TunableTuple>
                                <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="D7CF19920DED7121" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6037E32A59ADD29" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="C03FE1A11810DF89" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="749D398362A18DB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="63E11F1FDD11B960" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="E245FDE069C8CBD2" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F08F32C314DA01F7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="AB0776023AD19A68" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="21FF726B70D9ACD8" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="A28BE9BC21F809A1" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8AABBDE31A412592" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3BA9D97D70177690" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="432F5F66E3A1CD48" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="3207E545238B4D9A" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableList name="skill_list" class="TunableList" display="Skill List" muid="90EC1E16ADF56E73" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                                        <Tunable type="statistic" class="TunableReference" muid="21FA92AB9384D9DC" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="3510B18430E7389C" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="7AF754A6920D8CE3" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="F8F7240436E01B17" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7EFAEF9DEA8C160D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="60D19AFD4CA04D9F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5510CAF5330FCE77" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="F1190C974AA30028" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableTuple>
                                <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="7005BE8EF69D980" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B38722444AD8B1AA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="B9B234243214911C" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EE450F56E738F22E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="E60176D264D90CF4" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="2B102A0FA0029C1A" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B08EBABEA30A99A5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="E2AEF73C8B93C9BF" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="93612CDF8B1421E4" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A2F113DA3F66910" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3725F0B0D0679A0D" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="D15F3299218A5832" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="A2DFEC33E56B2E8" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="5593D1EEE807D5C2" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                </TunableTuple>
                                <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="8608073FF4973B8A" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="44F1F8750E8F5D3A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="4992EC299309E6E7" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="93A20F9FEE81688B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5AB62955A33807BF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="8EC9A7FAC49524E1" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableTuple>
                                <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="25B61AD959FE3F5" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B792B6E21818D296" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8D770D7E0FA15483" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableList name="traits" class="TunableSet" display="Traits" muid="78135336F4823F63" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="trait" class="TunableReference" muid="5A5C5950D3C09933" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="E8C216B64E3EC17D" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="90F772EF6DACEA39" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6FDB464AC53646E2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="9B3DA05B0DF9AFAE" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="6CA188F85116B239" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="D601B2C45A1DAD30" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="3843EC11F0C749EE" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                            <TunableList name="_majors" class="TunableList" display="Majors" muid="FC990B9F97C4273E" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                                <Tunable type="university_major" class="TunableReference" muid="CB72E2F971528439" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4AAE0F0BA1D2D685" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="79DA4B10961FE7D" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6FEED1AFAB2F6CBA" />
                                        <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="E51C059D27545ECF" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableVariant>
                    <TunableList name="zone_modifier_to_filter_terms" class="TunableMapping" display="Zone Modifier To Filter Terms" muid="FB593DB0563EE0CF" mapping_key="key" mapping_value="value" description="A mapping of zone modifier to filter terms.&#xA;If more than one of these zone modifiers is active, the filters are applied additively. " Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="23E3F9ED6621F2F9" Deprecated="False" filter="0" group="General">
                            <Tunable type="zone_modifier" name="key" class="TunableReference" display="Key" muid="75D27069DA22E4D7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableList name="value" class="TunableList" display="Value" muid="298D6E4FDC7166A6" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="6448215BCBF7160F" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="41DF50F1A129E3FE" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9173F210B2EEF9D7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="380FE9128E808F94" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DAF8100E4D53AA7C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="DDBC4506BF79D3A4" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="64EF51BAB7FC2F7B" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3C14AA58B1F2BE4F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="EEEF166DECC513F2" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="157A3F81221DFE2C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="F1B360BD1363AC46" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="48CD5CBB692C9A7F" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="74F523810A710A3" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="70F238629BB51033" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="AF960E0DF9D3EFE2" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F43E2E7FB36C88" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="FC9131242994056C" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BAE02E6B65ABC396" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="2E33BE068AABA944" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="73BE5745C7C43E5E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="1C6020128604ED15" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="F85A7A720DF369FB" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="72A6AB7132E35CD1" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="2CB2D682FBDA74A1" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9EDB2C77F3BC9A9C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="64B6758D943BA02D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="5ABA2DDC5EC62E9F" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4AE207BCD0FB98D0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C19B862D85D1FB03" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7B4BD1478947972D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="BE46A7CE94AA10C9" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="613810FCCADE13D2" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CDEB1DEED269E39D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="51CFCEEDC0D10CF8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A2F6D697F043B0FA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="6941D0A4CE4C9610" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="11352D4F34B89D13" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="86291E2B5118BCE3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="904CE09CEA3514A9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="C4B79FF388AA9C24" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="B77DFF9092DE836" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="77664958B6CB76FE" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="5C7D1CD9D9DB2177" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="C49A5627F8693D70" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="DE98F7772BB488F3" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="78A69292D9C469E2" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36B840F436F8FCE3" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="D73FE795D44FC309" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="1B64EEAF88E94135" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="E602C8B4D3B9EF83" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" class="TunableReference" muid="D967807EDFDDE4F1" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="EEAAA21124DA6FE8" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="AB655C9010B2BF82" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="BD20827F1488234F" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="1F3DCBB4AB1C7AAE" />
                                            <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="BB11AD080B28C281" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="41EA7F5B79FBFA1D" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="DD017E4F3F3E5804" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="3C368BBE39EECBCD" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="1A9FC6A0CF9CF8E9" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7CBD4143754FAAA2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="75C9A7EF3D53330B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4EB3DBC777E8CBCB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="5A727BD368FB820E" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="CB271718B3F5E0FC" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="ABF853FA0B229B4" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="223E339550414A0F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="BE434739CC00EBCB" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="custom" class="TunableTags" display="Custom" muid="182A7082478AC82A" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FCC411F45A93B335" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableList>
                                            <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="DC3D0DFC27192FC2" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B6DFF8344C7866C6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9569C22F16888E77" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="CEDF2F898FEE01C9" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EA8F5A6D09D7243B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E575F1296124C3ED" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="70B6F9A516248E7A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="C6B7A7AAD6B71BE8" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="164F236063AFE7F5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="92E8C49AD4125E53" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A7735675BBB6BFF8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="23A53B96A27D2602" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D4236FA841BCBE6B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="1F3EDF5A9B71BF3" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="857F3306C2970E3A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="14653F30C97960EB" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="EED28A83CD35D40A" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="639F918E8B4BA4EA" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CF542BB6FAB0A78E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AF419C297A68F4FB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="1CFEF091229113" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D0BAA176BD09BEA4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="87DC25B3B7EE6F83" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="D26957FF4262E30E" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="F9EC6326A8D69011" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="206E0638F456AAE7" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6E157831E7E23475" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E4AA4ECFBB23EAA1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B4097B2349F0F612" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="47BD7ABAD4E5B95" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="848005E519E7544E" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="72CDF05D56B6D39E" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="52D5B7BFAF3F2CCC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="AB5AE53537237828" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="2D17B4B497821C57" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="E6130213C9A2794" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B91157E8FBDE2CCF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="7A59E0FBD824B946" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5B77E5EEFE8E52C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="27A5A601C4C9D742" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9E2270B1B7063F75" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EDD76A356575455D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="C7270974EFAF047B" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="43C62352FD2839C0" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="276E633709C1FFCF" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AFAB972538089B50" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FA1437A2D959CEFC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="35B06B8C5DFF49D2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="29F18BB3AE11F78B" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B8C120B0E22216D2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="473D40C150AE5F72" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B9162F4A76BB18C1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="C11491E3902E834B" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="25A937318F50EC3B" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="2B7D7FD1A71DCA30" />
                                            <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="F14E05560605613" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6C3887B34020C973" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="83701579BBEF9938" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2048FC736D0C40D5" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="497C5D467BC6DCF7" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="5E433DFD2F44F635" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3D9FBE84B9FAD7B7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5EE292496A6A42F7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="2175E343EA9D68EF" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="333B09318292FA80" />
                                            <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="8E88D7DFC76EBD0F" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="15FFA06AF32D1D5B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="7C9DF6C02019DD86" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F452DE439CA36441" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D62BA38E0107259F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="2DD6561F11709E07" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="E3F13C8D001564E6" />
                                            <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="C2684FE28D61354B" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="479971D20AFC4358" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="9739F23296AF881E" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FD0E2C4EEAC73517" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="6AC33AE4B774080E" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="F501283F5B3E005B" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5730D88B1D9540F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="890C49FFF91FD0BD" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="4EC0447B25BB495C" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="929AD47E0792D38" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="716842E2AD0663C0" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="ACC600EA8541B07D" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="3A7AF7245E0595F1" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="45941A3E1A4310CC" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="C4451CC2E439E1F7" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="D172FD6037023B64" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="5E306DEC11706F82" />
                                            <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="51DBFDE3417D3035" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                                <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="85205C6512DF204A" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="A4D3547EB79DFAB3" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1E18717E8EBB951" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6A98F009B853827E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8BC2F6D5F7C5B9D7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="19D7DBA1EF7EDC21" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="7F932A5557E2F012" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="3CFBDE4D34D5922E" />
                                            <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="9DD35DABF70E6F36" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7650B7BD928AF213" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="6B934D7F52E8E346" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F6573FFEF9C03806" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="828938D14557F3B3" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="210D86A65378B458" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="96206B8C6325A27A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="8CE9E7B1071D6391" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="5898211FAD36E3E5" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="87CEA0152E7DA336" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="538DF76924030BCB" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="2E024320D72D056F" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="756EFC88095AFD3F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="3CDAEFA529CE6ACB" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3AA36E7F368DC350" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83DE72277E3B60CE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3835D0353FCF9028" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="76147A045DC5E162" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="16FB50F6590B004F" />
                                            <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="60541617C0EB5B27" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C4EF66A0A7C0D618" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="86EF6E20E0AD5340" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="174716FDCFCB8927" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F265FDDA66366024" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="4F9235B0C3A55526" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="32BB95CC47F659E" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A35F997060CAACA6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="DDF325D8E8EE735D" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="C576B72FAEF61818" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="8C569B77B89AF611" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A185E7AD0EF2C2C3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="9269E905BCBE15E7" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="4281EC52FF3DB341" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="34EFD1FD38AD699F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8DE5A401941FF036" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A6315355FA380B04" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="BE70164685D9E03E" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="9B12F9A9F9251F56" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9A44C743C3CE7F9A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C43772FD0BBAD048" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6A41DDF284275320" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="2A437A535EF157B4" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4AE61B4BDA140FD0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="57F00611E9B1894" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="36BDED7AC6D86A40" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="498952F81E6E299D" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F1F3B0B11CD53CDD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="255CB9058C59E087" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="39BCF8993175897C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="C5E1BDF1C4AF6DA1" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="582622B16496041F" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="502D8B19404A52D2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="58693F10B6CDB973" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B684F9A39D22E554" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="D24A8B981737C34C" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A73F45E38AB06D50" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="492C61D33DC1AD05" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E58CF47A7749B24A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="3DCAD0CFCA573533" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_override" class="TunableExistance" display="No Override" muid="B49B12FCCD839FD3" />
                                            <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="A8946CD3286EB44D" />
                                            <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="972CCF974BC7B7BE" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="45FE07AD12DD0519" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="767B3A4D96C49115" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="46D8EB4C3F89C9E4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3BEC3690B21B6492" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A58E84FE13D70311" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="F04F64C9CA94B08F" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="6DB25C229E7766E0" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="F268C178A8A12D8" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3E72C14657B06FB" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5B70AA061E9C8F80" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="818A8FEDEE87AF03" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="78CCE2A3725E4A2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="70C0A40C02DACA8F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="C69E89C0373BDBE2" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="163E7349E8FDA039" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="39DFAAA3D0C7F71" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CDB12CC91F5582F5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="C1684965E6166432" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="578E45FBAA213724" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2456D61BF947BC85" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F68C1F722D0F1002" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="338BD8F7CF99E202" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FAC6D9F632AC19DD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6FCEB76227B7497D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="51CE93EE31AD4C87" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="F754E1BB1B6B8779" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A65D7F9B354EA9CC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9D845265F8D1871F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="37339F52F89A9F9C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="2D05E0951F0B1EBB" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="75572C93F6CF063C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2DE0C044FF337BA7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1668D69132018100" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="EF02C80C27036E90" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5F88279B922FDB76" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1D31B87D0016F1D1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="2D705A0166DB69A3" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F29896EDA7C650D9" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="56293F47FA66A1E0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="795537EE7824DE28" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="5443DFA8D2B2C38F" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                            <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="56D032DE1D5F47DE" />
                                            <Tunable name="any" class="TunableExistance" display="Any" muid="9CD58BB24109811C" />
                                            <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="4231D14F56FB46CB" />
                                            <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="80F75FA82CC5F414" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="7503E8AFA69A7489" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="DB0EA56066DE8C57" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E65E9071BA68FEBC" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="22268B9DB91BA583" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="DCA12E5F059B0F31" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="69DF3ED393AB639E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="583D694FDCA6FC0B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FB4631B5DC9611B7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2F59E8FB34FADCBB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="B662F9CE50A8C2" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8185313B0D8F17A8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="281A7231121E2F68" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B61EF4B6AF077DE9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="22090E2FC3479BB6" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B7B46A2A099AB234" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E39D01949E8563C4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AE668D74164A63CB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="3740B3DA3ADE5803" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="80F41B7518D81AB7" />
                                            <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="3BCC9EF9732A2FE5" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="region" class="TunableReference" muid="8B26EDB97B7F1040" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="614305595EBF635B" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7015013AA38B36A6" />
                                            <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="F68394DA3E27ED31" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="DBFD0DC9BBC5574F" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F088E7A9F0E9FCC7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6D31C67B072D48D8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B61D63908E4CFAA6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="21C7B46800517C16" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AAB8CEA9D74ADE5C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5367D0D117B3C128" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="D9B7B62EEBF4349B" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="F167BC02325F5FC1" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="EA581EC386272F95" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="61D0328EC7E4249D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="13F9E653D2B6E3DA" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="C113D889F2B55D4F" />
                                            <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="A127355DC47C948F" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="1532C1EDD63A24B0" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="CCA1369C6382FEE4" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="90E88E6A022254F9" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="A3F6CBD9D66EAB2F" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="980F48CFBC5504F4" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="13D3719C53F6E215" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="50FA44F42DA80B67" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B8B17F2B9F23D2EC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="75CD9B355D5F797A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="69E15C6B1C490116" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="B0B1898989EC0E98" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2C3D2F5838E2F17F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="2D28C696784626E3" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="6A1F9299F033AF2E" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D0705809B8097521" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3DFEB8BA3241A0E0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="C9B54D0DBC4348B5" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="BAE81C8C85E6ED3D" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9A43FEBB1B0BCAAC" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="2811851A2870901D" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="74384AA78BC31D3" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="82517FF4873B9101" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="670FAA78160D73FC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="59141C78D8DF65E7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="perks" class="TunableSet" display="Perks" muid="FE08E5207E3CB204" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="bucks_perk" class="TunableReference" muid="C51C4CF3F091A529" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="900921634A4D944D" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CD95EA9EB0201378" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F768C1BFF359792B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="F731FA1EE32BD9BC" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="96DE0780A50A9C83" />
                                            <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="E7F99787B6D8D6E6" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="47CD06DE5A505ECE" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F935DFD7FB4746B" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="12CDBCFB38B1F0FD" description="                " Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="7C15C6F46BFC46E" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="19280589A0469409" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="5605BC3975B107A3" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="54C028C6F2D0A7FF" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="8F321E09A0906F1A" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="478933577916E616" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6BAE47CD513A359" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4E755DC5491EA820" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="698EC20599E3D17" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1B73C0AB360B906F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="D71A7EED092FD335" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="760C26FDF3C3DA1B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="5F88ECD15DD630F3" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="BD33F0FAFDA4629C" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E17EBBEB299CB1A6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="5FE478F09EA096E2" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="7D1E94FE2ABF0CAD" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="EAC38C5DBC206F47" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35D0102601CC8352" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BE69393F0FD14DC2" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="ADF3A60FA746AB53" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="42408A99FFD5FAA1" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="302ECC95C44AF729" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="CDDFFE4E6202DE2D" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="F812FB0D71C7F6C1" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="5F9C272C6418BF0A" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="67DFBF2496125091" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="A2518356067F08EE" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="745382A465244BF6" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="37874EDC46667494" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F4704D380612A209" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1EF20D6A9FDD0F9D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3614FCABA6AA6A62" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="96FEBA9D2E1C12CF" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="C0BEF547300A65F4" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="40D72354BB287615" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="108E317484AE5031" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="9C434220E51C87B6" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="89C2A4EE939F4393" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="32A9D38725E5962" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="945BC913A8F98F40" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="white_list" class="TunableSet" display="White List" muid="382074CADC9FA3D7" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="13344FCBF090AB8A" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="1759E1A2EF88FC92" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="411513190616FBF8" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="C1B99442480C77D7" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="E472E58F6189E5B4" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="B07CEAC182EB6A5F" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="D26629B7C14CC5FB" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="B2C51BA058741334" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1C12E35F1A724D72" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="ADDEAF02BE371476" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AD2C1A4132B07E1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="55CD8FAF21DE96BA" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="87447BBF9AA72F08" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="FB8F2AE14782980" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="FBE691160C21891D" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="E39525B70F6A2542" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="877C1A490B9CAA9D" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="3EA39FBD5BA113DC" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="C0814E4C1E9EF06C" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="white_list" class="TunableSet" display="White List" muid="915F27D99B12217" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="E5313A7AEFB01AA5" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="E1C9E164D52B9D2F" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="16C5A6C0E726F85D" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="C60BE7584EC57D88" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="63AD407D72A57564" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="8A6F1CCDC4055593" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AEFD1162A8D87DC8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="8959FAC424E90C1" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9D17E0FDAB0E0BC0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="3014F43329EA9A2D" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="B9B505B31B1442AA" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6A9BF8DC20D184D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="F30AB8649E706403" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="BED5AD307A43E3EF" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="6C8141A676DFBE83" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="62001AA2A6F91E60" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="C9F39EE47E50447C" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="40684CB541F0B00E" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="5A58E9C3A2C37614" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="D23F761F6FEF40" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="74E751E780B6A10F" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AB4DA154B6534B13" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="82A19413C4292CDE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E901BAA666E81663" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="197CA9F6E31924BC" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                                        <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="168D94231E18C509" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FD4EFE1F18EBF5A3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D23C9ED559C5FD00" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2A8C525C143BDBC9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="FF343B0CE0E23597" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B6109FCE9F3F8941" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6BA699BE45A6FD4A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6AEA8DBBB2A0E613" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="5BD4115A4CCD20DF" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="597DA285B43F01B7" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="44A5A5F06A3B6CE5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="821C5F47044A4C18" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="699CE371D7A6747C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="4C0CE64ED83FF98" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="30175DE03B2B1C3B" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8F1419D58FA5E72D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="C422D8E3EC3386C2" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="64F721DC7EC9AC44" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD3BAF5B077F9B20" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="E12451C4B9BE9753" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="64F087A398C98726" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="BDFCE97602642D1F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="66D6A3CD32CB360D" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="153EDA90D72657DB" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4FEB2CC62F2B563C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="F14175BDD1A793D1" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="69A3D687600B50AA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="A6F88A372D01E499" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="76EA28C12A7DF4D5" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6FD9686EB650E84F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="C5B817BA24F96AA" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="442EDBD5FBE53C19" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="62981477F1345642" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B191D615F53A689" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="79B26939B83DF6DA" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="8C306809E57BC9C4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="65C7D1CAD457D6FE" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="skill_list" class="TunableList" display="Skill List" muid="907D65A2C015E909" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="A17260E724ECE28B" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="CED1FEEF691600C6" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="F1B37F8682871E14" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="1714EEA127D33BC5" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="149345E76C5F6FE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="75E89AC130C1C6A4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1CDF63FCC6C3A91A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="A2FDD985B8559CBE" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="2F5ACAA809630083" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2DBCACE3C50EBA5E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="9F29F9461B834F11" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DCCE3B803C4B9D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="AF71F0E0FEDB822B" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="7D9AB1BA1D410005" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7418C85F70F6C70" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="40C48802DB9B32C3" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="9B7DF85186C3A985" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FBCED194350108A2" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="53A3D24FEE8983BB" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="2EC32FC91AF18954" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="4A36B4892EF14C6F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="D6FD75B6FC14C202" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="3BEF80584E118471" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="939230EDCDEBC058" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="A7CB085A85DFF3F4" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3300DF468E555A16" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C88110D6223585C4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="212CE50AE56DCBB4" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="712679C03BD75F09" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8D19ACD1BA444B60" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E5E9C896069B154B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="traits" class="TunableSet" display="Traits" muid="8F2246347172C5DE" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="trait" class="TunableReference" muid="8F64B8E3B7AFD454" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="89A4FED17A78F4F7" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="59D46172075872E4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B976D16D9375B7B4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="A4DC5F08556ABBCF" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="74952D5B88BFE390" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="8F79330B11CAACF1" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="5C806DC45EC62E5D" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                                <TunableList name="_majors" class="TunableList" display="Majors" muid="D1C5D16FDB1ACF6D" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="university_major" class="TunableReference" muid="538DB4D6618BB6C2" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3652D97688DF9047" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="886D5E2A4FC2C813" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1AF8AEEB94BDB93" />
                                            <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="ED6FDD7FDBB83FBC" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="E4BEDBF56598A74B" description="A reference to a ZoneModifierBasedFilterTerms tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ZoneModifierBasedFilterTerms" />
            </TunableVariant>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="29FEED3342DD0BC" />
            <Action type="kRemove" old_muid="9D87B829CE016764" />
            <Action type="kRemove" old_muid="1D6BF948420B6D20" />
            <Action type="kRemove" old_muid="AF1AB14B217972E8" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="935E0A2AFB70ED6E" />
            <Action type="kRemove" old_muid="E23867ABDC425D83" />
            <Action type="kRemove" old_muid="14434F4FE948F541" />
            <Action type="kRemove" old_muid="291A52746FD9C7E" />
        </ActionList>
    </VersionHistory>
</TuningRoot>