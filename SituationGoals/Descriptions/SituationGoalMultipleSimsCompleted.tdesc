<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalMultipleSimsCompleted" module="situations.situation_goal_multiple_sim_completed" muid="11B21C9EA0646BCD" description="A SituationGoal representing multiple sims completing a goal test some number of times." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableVariant type="None" name="_goal_test" class="TunableVariant" default="interaction" display="Goal Test" muid="4342E67123D8E286" description="Primary test which triggers evaluation of goal completion." Deprecated="False" filter="0" group="Tests">
            <TunableTuple name="aspiration_changed" class="TunableAspirationChangedTest" display="Aspiration Changed" muid="F0C6C0183463AD1" description="Test the aspiration after it has been changed." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="aspiration_category" class="OptionalTunable" default="disabled" display="Aspiration Category" muid="E97C8043A2D31233" description="If enabled, the test will fail if the aspiration's category does not match the one specified." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E8ADE29C7C30FFD" />
                    <Tunable type="aspiration_category" name="enabled" class="TunableReference" display="Enabled" muid="5D233A6045F7F923" description="The test will fail if the aspiration's category does not match this one." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableVariant>
                <Tunable type="bool" name="fail_if_no_aspiration" class="Tunable" default="True" display="Fail If No Aspiration" muid="2F43FB81E7591EE" description="If checked, the test will fail if the tuned aspiration is empty.&#xA;The tuned aspiration will be empty if that aspiration comes from&#xA;a pack that is not installed. However, unchecking this means&#xA;the test can be used in the case of switching to any aspiration." Deprecated="False" filter="0" group="General" />
                <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="A4D0AD7F6653B04B" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="6BF87BDB9EB9706E" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="245F29007E43C558" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                    <Tunable type="aspiration_track" class="TunableReference" muid="A55ED09CD9CDF74B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="2D57D09F224DC6C8" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52E9A7F8B1231D61" />
                    <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="2893B40E0DBE117D" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="A158186A00E2634" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C24FA1B283114CB1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A738F330BF03FB23" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="66F679AED00F9A32" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="CA2FA3C62DB3588" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="A005BD5E58D28781" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted buff." Deprecated="False" filter="0" group="General" />
                <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="BE91BA6ED815C9C2" Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5D06FAD167FBD5CC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                </TunableList>
                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="8915CF8FB6593098" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15B0BBFBB40B9B5F" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="BB25F923BF87E663" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="7EF779A64EC22B5C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="73692A8F8AD0B934" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F0A12C3DE508019" />
                    <TunableList name="enabled" class="TunableTags" display="Enabled" muid="196F5B070B2A26F5" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4450AEE962A866F1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="3B9515AEDFEE5ED5" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="513A7B1CE5543066" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <Tunable type="buff" class="TunableReference" muid="35F7F48FDC5DD07D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="F14D7437E40544EB" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="542893F09636440D" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2703EB6B158BC292" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="45AD1FAA6107CC9E" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="61E8E5DCFA3E477C" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="39F34B92245B02B6" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8DB43379B036E02B" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="AEDC0453182CDFCF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3A0672F4A33229B" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E5845EB24FB6F4C0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="C4DA851551B0BE2B" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="D9626ADF64269BD6" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3F3CF04C0278CE4A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="10447DAF49946052" />
                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="795ACB299BBA85A4" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CC0887B0E00D2CF7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="578D084DF422D107" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E6DD6FEB20144E97" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="42B447811641C034" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="555FFE4A294AAC6B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E88EBDFC9DA3D9A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6018071442678471" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BF9348D560EA4CE9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="F3626DC472553939" />
                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5F394447B31B8A4B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6A5D9504E0190A1B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A037035B7077ED37" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6331EE86A1E0D34C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="75248E260B3E070D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A99E7B5BB7B9BB19" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5747D632A7DAD5FC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="5E5011B097D625A6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="99CBB8D8154CDB0D" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="344A89D412FBE87F" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="90936804B34D7579" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="15989E4D76263D5C" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E5CE2A2FFB82A66A" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="career" class="TunableReference" muid="6E9DBAE49EA15D34" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B43B13B8736275B4" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="185C96DD56021005" />
                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="8F8270B18D1297D2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableVariant>
                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="E3BE4F4864242068" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="career" class="TunableReference" muid="D922CFA404E0841C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D6B931EE3F0907A2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4FEAABA2D5A44B8" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BCFAB72AFEE7D429" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F10078259A6C81CF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="45697242651CA01B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="4434697E2194B88A" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="89116BA827C43D0E" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8C036BC6E176DC67" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15E237D36C77F554" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F32DB46814B5242C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="473A8BB95DAD5E5D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="4E4E112ED9DD1AF0" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="DC57BE09F13AC614" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                        <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="221E219C78C7C414" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="F04BCC1BB7133FBB" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="B0DD0E2FD028D253" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="92D62D6B9F35C082" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="C41ADE4C79973FAE" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="59F19C8F66E5FC71" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="9AFA5A8BA471F07D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4DADF4111AC4D3C4" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="EB46C020243D7774" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F57EB5188230658A" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="4A0E483CBE7509CC" />
                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="BBC78A47A58057F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableVariant>
                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="9FE96DE833BB645B" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="3F5C3585C381C71D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A9A6B506D1C9603B" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C93A6DD7CB37FDDB" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4D868C969C103EC6" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="EAAD06062CD81B15" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="DBCABF483FCB0BCB" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="1A2CBB1E8278FEE2" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="6253521A2D53B2E4" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="BBCEFE033CA7BFE6" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A54A776E6B3F19F0" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="62210C2BFCA26F14" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="298F74C16E5BC8ED" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="9BE499D8FD3999B1" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="F5B6E5FD6B27E12A" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="E66B06ED7135F069" description="User level to test for." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA6A3D774679D901" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="15E2D2063A51A5D9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="566D8C5DFD2BEF3F" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="436B331B9CEF7CF5" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="3C528F5BB924E9F2" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="2B9615533F1C22D" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="C38BD2A49D87A962" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="BA1C392B65F77BBF" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="ED41024A6CBB3D94" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="60CA3555B604800A" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableTuple>
                                <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="D7A1E650772B3ED" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="FCFC9A4BF3595DFD" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="careers" class="TunableSet" display="Careers" muid="F6231D631049F2AA" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="C1BD31382A82EBDB" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FCAD053EEFEC9979" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E80888CF0CC0631" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="226D70139AD55F35" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B9168396692CD375" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C18001C6BC72DE0" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6E40096C7DAA64CD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="D68C49A5D55236D4" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="22A8DA943AC2982B" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3B8412999BAB0D1F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="861AD399CB987C3F" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="55E17BBEE2553B68" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="69D65157D78BDCAD" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3806CE7D67D931BA" />
                            <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="61B3F9C2CA4C49EA" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1704A80328248487" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DEAE9AB9FE3DE0C7" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B13376B39013AB58" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="337F9E81D7885B33" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="42E67D49CC4F10A2" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="448C826282CF8873" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="5CE7A97886ECC5FC" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="C7671916862FADBC" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="A2399719BEA03F9A" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="B3FDF04090287504" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                        <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="260A826F74917E9B" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="career" class="TunableReference" muid="B5AF64CE8A0575B8" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="84B81AC98153FF5D" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="40D2BE2E1CE0B654" />
                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="175CB0357E4BA91" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="C69EFF7906A8158E" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableVariant>
                        <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="A819B32A4DDF1CCD" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="7B06F9CC97F62162" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE7D7C7EECFEEF91" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D61857EBDAFDD0F4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="30223A5DE9B0F081" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5583F3013A3C989D" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="468253B42741B569" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="2B5E532514C77B66" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="26A384EC6ED695B8" description="The career event to test for." Deprecated="False" filter="0" group="General">
                            <Tunable name="any" class="TunableExistance" display="Any" muid="5345826E170C7483" />
                            <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="9284DA30E710D8C8" allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="31DCBB28B28C4EBE" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="60EBF03A45CFFE4F" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A1C199310863381C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="6EC82976DEB6B5EB" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="90E7169FCAF43850" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="11593676EC3794E9" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C4DEA8011602DA03" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="635A867A1F960770" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="BF928254AD74FF79" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DF910319DF43CCAC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5CED8C4EB8F20B2A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="C6ADD862748F3C1" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DC476051EBDC94B9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A912E8C79DAB4BD1" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="44C44C101295F8DE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="B76A473146E50767" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="545FED96204423FF" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="BE25BC2175F74C71" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="8218CCA9E1FC18E0" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="3B26C0FBEC0EB2E0" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="B274BB3204C4A2C4" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="A4BFC2C5F7BFD9A5" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="career_daily_task_completed_test" class="TunableCareerDailyTaskCompletedTest" display="Career Daily Task Completed Test" muid="14BC1885B3E90BB8" description="Tests if the subject completed their daily tasks in their career." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="career" class="OptionalTunable" default="disabled" display="Career" muid="8FBC31841B0FD129" description="If tuned, this test will run against a specific career instead of &#xA;against any career." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E5AD5C23DB6DD9C8" />
                    <Tunable type="career" name="enabled" class="TunableReference" display="Enabled" muid="C565FD036F5260F9" description="The specific career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="club" class="TunableClubTest" display="Club" muid="2AB66AC70595CB3E" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="98A0B94974690772" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1EAB10E9B6FD1717" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="43DCA70331EEDD5E" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                        <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="30D3EDABA8AF8524" />
                        <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="C7BA585DC423CF3F" />
                        <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="55AD1D48FC7DAD94" />
                        <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="3EDD0D1D6461B0F1" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="F65B70E54C1CFC4D" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E5472BDB1A10F3B" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="18B60FE4680A8089" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                        <Tunable name="Leader" class="TunableExistance" display="Leader" muid="A56C9FD130DAB4D7" />
                        <Tunable name="Member" class="TunableExistance" display="Member" muid="D16022326A1852F7" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="70562C89025613B4" />
                        <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="D246C2405D21ED52" />
                        <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="C860A8238EB1B253" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="272B4424D574F905" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8CBDABD75D03D260" />
                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C53B72BE6507E3DE" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="10BA3874402FB162" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="3BDCA2D481041479" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D40939F0C02AA270" />
                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BD6E498BFB999388" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="A3D5857D9190A0C9" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F709F5785853ACD" />
                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="729C820A6E4CD224" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="572C6131C3F6B25E" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF4128341283C924" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="86928463050F0A88" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="78D0609C03A8061C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3B0FE62FE8BD7FA3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="ED7E1BE39AAD1BAE" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="219AB247C57047CC" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="149AB921CFDFE2D5" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                        <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="9EECEB8B68B743DA" />
                        <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="57DA38369347C727" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="DACC953E2338089" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="1EA0A56CAC8A5E2C" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B13D1BC297B1D06" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="45AD8985A3A76DF3" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                        <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="BAA5684A64F54B26" />
                        <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="D564BBF43343F9BB" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="10C66424122F0AD6" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="87249FAEB8DA7381" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92DAE57672D2376C" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="10F10FF1B4937087" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                        <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="4F3E9BAC311B6F66" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="6A50BF0900140872" />
                        <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="E704F29E87B7B38F" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="B9F02D8D69F749F9" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E982AEAFEF9144EB" />
                    <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="6BB74077FC0A4489" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="B14E5DB4EB2AB544" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="AA81E469AB8FDFE3" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="7B445112A4325B90" Deprecated="False" filter="0" group="General">
                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="ABB9FAD2D91F1631" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="A4E4B5E5B4930C62" allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="BA62BC9968F1360E" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="E662698D98E4B03A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="25DFD905A65144F5" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="A7E267A47CE883F8" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="865F6B3290B0B09" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="ACC4197A7ED745BA" Deprecated="False" filter="0" group="General">
                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="102EDEA1D7503117" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="77EFAA842E4A4C36" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="525E9F030C65FAA2" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="2B5334338256857D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="700F5C8C00122F8F" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="B1B2E0DE443876CE" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4D11FE0194E1568A" />
                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="728276171332F2B8" />
                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="8255D2B1E3F57510" />
                        </TunableVariant>
                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="76BFA862BAD67D19" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="11F2220D9A0EF9D" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="D20AD5DBF9987AC9" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="C91C2B96679FE2FE" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                        <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="5654BC678E0FEACF" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="EF4C0124C702A992" dynamic_entries="objects-collection_manager_enums.CollectionIdentifier._elements" static_entries="objects-collection_manager_enums.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                        </TunableList>
                    </TunableTuple>
                    <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="A526DDF25D947BE0" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                        <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="2A95877144C8D208" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                            <Tunable type="object" class="TunableReference" muid="F0979B671B38BBA4" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="5422F5B8E88D2BDB" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="21E950F77D1D6D38" dynamic_entries="objects-collection_manager_enums.CollectionIdentifier._elements" static_entries="objects-collection_manager_enums.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8F5A7AE7F484710" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="980F3C01743AB013" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6BCDDB287A11BF55" />
                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="3F89AED62F871D3F" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                        <Tunable type="object" class="TunableReference" muid="B7D64FDFAFDF7074" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableVariant>
                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="99F55A2EB3BE311E" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="599D7169A7FD50CE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="256FC165096B4DE7" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
            <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="2E966DED5DBE4C37" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="B1A473F471BE448B" description="The type of test to " Deprecated="False" filter="0" group="General">
                    <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="7B32E2F08F609B6B" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C92041B7D183BEEB" description="The number of household members." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BC9325CB64FB259" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A716AF123EA76DC9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="count" class="TunableTuple" display="Count" muid="6313F7625A062EE7" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="5B662F0052E0212D" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2AD5F08729F585C8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="456264C4A0CFFA05" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="2375DBC7A63445E1" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="27D829A4DA7B845D" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="93659B7800484952" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="383BA18A0A7CC8E9" description="The number of household members." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BA14618D65DDACF2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="11F7BB52FB0F584B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="4205755321B3ED53" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="scenario_sim_status" class="TunableScenarioSimStatusTest" display="Scenario Sim Status" muid="B2A9A19BB7B8D4B0" description="Test if a target sim is part of a scenario and/or has a certain scenario role." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="9F57817C038AE252" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="472CD9A4D8D7D0CF" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="CD85CF3301345ADA" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                            </TunableTuple>
                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="8F3519112BDCCDD5" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="FC49EF889DEF2BA5" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="E1EEAC9F7CF003E1" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="4403828D081D765D" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D6499619CEEABBB6" />
                                </TunableVariant>
                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="7DBC52D8C9CD6710" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="247EDC3D2C1262AB" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="B27F3E753F05106C" />
                                </TunableVariant>
                                <TunableVariant type="None" name="death_object_assigned" class="OptionalTunable" default="disabled" display="Death Object Assigned" muid="264DB8EADEB051D9" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F8E4D0DDC7785A75" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="14CEBDAA3D173319" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="2E9FFE22F889C4A3" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="19DC269EC384D845" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="650E494BDD04098" />
                                </TunableVariant>
                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="E310E70A2AF81EF8" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F1C44678901A88D" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="A51CEC1FFF137CE5" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="F25C916ACA643C4A" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C2525BCF41365B9" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AC866B3030EF066B" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="6E0AEEDE087D9336" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="DBEC43ECE0ECE052" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18C99AE6E4C05AD2" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="2E8E137CA4D9EA72" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="DEEBE1E4A28E7671" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="CBFACED628033A53" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="B7049EDF3A5FB457" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="C792519687ECA2F2" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="8D35CCEB229E8478" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="2176A46E1CBB4719" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="FB697BA4FA038294" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C39EB4EDCF479376" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="household_size_change" class="TunableHouseholdSizeChangeTest" display="Household Size Change" muid="91A29604BFF88303" description="A test to check the Sims related to a household's size-change event." Deprecated="False" filter="0" group="General">
                <TunableEnum type="HouseholdSizeChangeType" name="change_type" class="TunableEnumEntry" default="ADD" display="Change Type" muid="5F4E83CC5D9A895" static_entries="sims-households-household_tests_enums.HouseholdSizeChangeType" description="Which household size-change event type to test.&#xA;&#xA;ADD: Test Sims that have been added to the household.&#xA;&#xA;REMOVE: Test Sims that have been removed from the household.&#xA;&#xA;ALL: Test all Sims that use the household change event." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="siminfo_test" class="OptionalTunable" default="disabled" display="Siminfo Test" muid="8D99B5C0FC15B213" description="If enabled, run this test on each Sim that is added to&#xA;or removed from the household." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D641E4D33229732" />
                    <TunableTuple name="enabled" class="TunableSimInfoTest" display="Enabled" muid="1A26AD7DB6BF1F9D" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="2B86E6896C2C4FB" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="BA1D0EDCFD68DFCC" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="522AA810782F5D10" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="A49847B503E2EAD1" />
                        </TunableVariant>
                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="5577FFE2B94ADDF0" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="99552B819D00C122" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="5935E0B9370581D1" />
                        </TunableVariant>
                        <TunableVariant type="None" name="death_object_assigned" class="OptionalTunable" default="disabled" display="Death Object Assigned" muid="EDCE818C0BE39C46" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D0B63AE1BA9492A1" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="A31403F4F4731957" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="F21DEF41A359A790" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="131E91F564D34336" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="40AD7EA0F6FF9F92" />
                        </TunableVariant>
                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="82208C88C9186647" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6A353AA245FCB292" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="BFB528249C3FFC96" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="36F0699AA9A9DABA" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4AFDF42A2B20C22" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3E2B39EAEBFA5117" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="16321AFB267D96CA" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="9AAE3757CA78B45D" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="706815BA78759A37" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="718210EEFCE61E44" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="5D0692079B1276EA" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="2CEA05192AD149C4" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="1F95DD92411DB19" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="4817824F1E7A0AD2" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="7672EB76EA5DB365" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="6EBB98FFAFB53118" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="48AC2E82F2F67754" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableList>
                            </TunableTuple>
                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="76BE9BB54D53C48A" />
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="interaction" class="TunableParticipantRanInteractionTest" display="Interaction" muid="D07FA37B32197145" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="1927AD2A641FFFB1" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <Tunable type="snippet" class="TunableReference" muid="5D2EDB572CBD92C9" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                </TunableList>
                <TunableList name="affordances" class="TunableSet" display="Affordances" muid="297A247D94BC724E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <Tunable type="interaction" class="TunableReference" muid="3AA9B581A827E813" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="83BA766A4A7EEADB" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="47890703114B8639" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="9EA9ECD5F90B19B9" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4E5247994DB8E82" />
                    <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="18423EBDEEF7C283" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="EC717CE337A03BD0" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F502EAA7B2D358BD" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="2C85ED6B6605D8EC" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="E637F380ADA55B5C" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5BDA00802620E34E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                </TunableList>
                <TunableList name="tags" class="TunableSet" display="Tags" muid="D9D8B4E2A7C6D36E" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5FCB1A11F48A04E5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                </TunableList>
                <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="8BC6ECF18A026FBA" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="8922F5EAE0D26E03" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3020F53E54EC5C0B" />
                        <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="34063C163910D331" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="751A2798762C279E" Deprecated="False" filter="0" group="General">
                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="87E94ACECC087432" />
                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="9CCAF8308F7B6C84" Deprecated="False" filter="0" group="General">
                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="FC65071329FFE3A7" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="990733157D2FDA1E" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="3E81B933DF728EDB" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="59A1AE95B0B34850" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E4D06943D3FC6319" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9E35E2C73B1E4D84" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="13D387B3DE308D74" Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="object_state" class="TunableReference" muid="54863E9B6FDAA5E" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="9758444F2DFE0610" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="C917094EF826CA9C" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B23B0C9D378FCF50" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EC7D7D3BC22C88A9" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="238BA62E9FFC625D" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DA932434D132B508" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="28B1D00296C006EE" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="6A69F3A997AB37B3" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="ADD3B58F7249F127" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="115D1EB8198EFEB0" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="E34F7A99ED0AF7F0" />
                    <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="96253D784E6658D7" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                        <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="23CF235167FE2A4C" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="7E2B3C1AB457362D" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="4E844FE2575DB8B" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6EEB273575B79796" />
                                <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="E3544DDB4FDEFDEF" Deprecated="False" filter="0" group="General">
                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A986B49B201E2574" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C450E0F59CC5980B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DF88C65349289FF0" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="11AC4751FB4CC10E" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1D796A3C6F141A48" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC9970EAC5026703" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8AFE6C550039033C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="1E0ECE276BAC762C" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="C0471AD44C438A8B" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="F2CA65FF17D3A9B5" Deprecated="False" filter="0" group="General">
                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="299E6FD29F46F526" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="2C6ACEFB94D69BA0" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="643FD3B7BA1771F8" Deprecated="False" filter="0" group="General">
                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="3927198112336E01" />
                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="638E1903DA6F15E3" Deprecated="False" filter="0" group="General">
                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6C0CD3745BAD6833" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8638F3FCCE8EE7D1" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="D4CF5B9239585657" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D82381AEF9FC85E8" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A38C1AAD955D9820" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7D280BA526D8C12B" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="4B29A61B1CD141EF" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="object_state" class="TunableReference" muid="A1442ADB39AA3336" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="FEE7C7209C3CF341" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="AB7BD214BDB10398" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4A41C0EB064CA766" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="24D37F7A6D34F1B9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="46F13D39C2B30969" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="A535EEE68EA95CDA" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="D1642834E496BA90" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="87A16918A44A236C" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="87224A86DFB866C3" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="AED327030E00D267" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="B76F19BE7695C4EB" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="7EA01D6367F0B206" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="DC79A674772BD49A" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5F4096139F339B7F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2C830DB7D9C4543F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="355A953B353C7BE7" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="F7D2BF19D12CD150" description="A test to run to determine if the player has attained a specific mood." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="D276909917FAD137" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="B8B07E3D101A57F7" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2D37A786ECCA0545" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BB83934B13B1AB67" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1831FA0E20A65408" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="5F71B66A79D62760" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="3DA6ED86BEDC4051" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="9D104CEDAF227D8A" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                    <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="8EBD04EE2D357AD8" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="EDED78663AA1EED7" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="96B32D85CB3C52B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="86FFB94BB93222FD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="F4D64DE642F621C6" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="1A57427F7DBBCE20" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="DE92C4BA11CFD179" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="5EE5B70D6FD779DF" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B00268A7C33846B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C50D9E9FD2F021F4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                    </TunableTuple>
                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A5184D4B4C127E78" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DBF5CE01DC09B8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="327E91106F43EED4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="relationships" class="TunableRelationshipTest" display="Relationships" muid="C3340C4C90741F88" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="89A000449F2AE2C0" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="C4532088F7D2BE51" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="3330A50F242DEB86" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="CD145891B21FBC67" Deprecated="False" filter="0" group="General">
                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="B9064DE5FA10B238" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="7AD7E97C937AB1E8" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B07FB9B0073ABEAD" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="792C6B9DA9152853" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="68468C9E71CC209D" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="A7D5BE19ECF2EAB5" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A690FE8E3F564C37" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="6F9C6D3A9C3D90CE" Deprecated="False" filter="0" group="General">
                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="45D66B13CEA1C22" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="F79C49596D427B9C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="6F73AE4D5C4614DD" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="B720EB21D94F7E69" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="4336FB478455584C" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="180EC9E9479279A0" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                </TunableList>
                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="E74D3E31B725424C" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="7D017C1A1CD73FD8" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E424A54095D2CFAA" />
                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C05E2FD356524D25" />
                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="8E9DE07A67D267F3" />
                </TunableVariant>
                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="434FDB5A2A544BE9" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
            </TunableTuple>
            <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="B9CAE02CDE153C87" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="4DC05DF8B1DBC53D" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F54D2658F201A721" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5BE1D13B45EC4460" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4E9B9BB97994AA15" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
            <TunableTuple name="scenario_relationships" class="TunableScenarioRelationshipTest" display="Scenario Relationships" muid="E5676D56031C8771" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="2A2D5F1B86DF8D61" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="9E1AD35A67FAAF2" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="5DC3DECB1F513C97" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="FEDA907E413E416" Deprecated="False" filter="0" group="General">
                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="63B363AB23525C59" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="84445136CF8A7C54" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="67CEE706320C4552" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="EA2ECB2970A26BED" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="7CF0B012AF63D779" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="25F47E7A041C7AC1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="204E394595871602" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="1C11270E7C4F3623" Deprecated="False" filter="0" group="General">
                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="47D1BC764AF69302" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="AC7DE8DCB0262CF7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="EBA98434CCBFBEF" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="F4688A968F996174" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="target_scenario_roles" class="TunableList" display="Target Scenario Roles" muid="A70A7DA45D60B4F7" min="1" description="A list of scenario roles. The relationship test will target all other&#xA;sims in the household of the subject sim that have a tuned scenario &#xA;role." Deprecated="False" filter="0" group="General">
                    <Tunable type="snippet" class="TunableReference" muid="15EB7AC4F7E7724C" description="The scenario role." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                </TunableList>
                <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="B7EAFE5F54164AD7" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="613EFD7C930E7877" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                </TunableList>
                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="4B40C21341AEDFFC" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="BABEB35339239352" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="57FCEEA82C8D9545" />
                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="1AA891E810651791" />
                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="1CD065E3CB6A40F4" />
                </TunableVariant>
                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="780E15A6725E87DA" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
            </TunableTuple>
            <TunableTuple name="simoleons" class="TunableSimoleonsTest" display="Simoleons" muid="DE932597C41E47FD" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="F08B449AE31A8221" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2230CF8285DE4772" />
                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="AF58450CF2CCF70E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="E7772C01FA911773" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="41F600BFA695AC46" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="7BA65184F4935044" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="D489F9E71EBBF40" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="E04FD2E1466B36F9" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="6D2FF2C0C463D271" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="2A880BEF19F0F54A" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8A55A11C4D00624A" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableTuple>
                    <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="94736C188D330704" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="allow_inactive_lot_value" class="Tunable" default="False" display="Allow Inactive Lot Value" muid="86B79070BF322139" description="Whether or not to allow the value of the household to be determined when it doesn't belong to the active&#xA;lot's owner. For example, if this is enabled, the household value for the player's Sim will be evaluated&#xA;while at the park instead of being 0." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="DA60D42F966635D2" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableTuple>
                    <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="8A634CC1A0971BA6" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="7B0484CA4C51E92B" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableTuple>
                    <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="9A8EE08AF59122EB" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="AA1F5DC8BABB74B8" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                    </TunableTuple>
                </TunableVariant>
                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="9086BB2440783887" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18E925F79EBEAC63" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F86BA74E14517F92" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
            <TunableTuple name="situation_running" class="TunableSituationRunningTest" display="Situation Running" muid="B263B552613C6776" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="708B1F9212A9A8D6" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="E89474208D14AF12" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E3644AD54653029" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="2005B9BF0901C238" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9F3861AFA3F8F47B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A20F30BFB9DF8449" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="E30CF70DDD49D350" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E194C2480E7A5E18" />
                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="A9EFAB673211207A" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="9AE10F8C61F8817A" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4ACA46AF5701A4FD" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="267CB7A9CCCDA12" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation" class="TunableReference" muid="120C11AA83615103" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="CFAA8923A4B38DC" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F7928EE971FBE1DC" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="D2941F9ABFC2C738" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation" class="TunableReference" muid="25457C755D73DE2B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="47567C4C4E84DA88" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="6AA2B4C48B0CEF3F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="ECBC360F665770AF" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="915615AA4E4C340B" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="DEC5C39327D574C9" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="AD6DD2C966678F5B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="F8DAC262B5002ACE" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C522D1F283CC42D3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B92666C83EC6B467" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5B688C4D0F6E7CA1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="758492849C1CA15D" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="363693614517A30C" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="CFA221F487D5EA58" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="7F6EA51B250F5C1A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="4C759970360A9BCF" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E41C3EFA5C17BC19" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8A8C07C3248EEDAF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="343FB884DC78EB6C" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="7A5834C5E7BD2B98" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B4B7F5D402F27808" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="B7846D5AE21FFB8F" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="5B1925CD1359A5FF" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="2ABF8162451853E1" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="5E0058455171751E" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="F417F34F277482C5" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="A6876DCB1FF4C13D" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Statistic,Skill,Commodity" />
                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="D5860DD3451928E9" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="637034D999CF7E97" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6B5E43C07603DF29" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DB236C5B164C55D5" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                    </TunableTuple>
                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D4CBF1855A0AA43" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="42368369737403C1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="853FA8A62C5ACF17" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="took_photo" class="TunableTookPhotoTest" display="Took Photo" muid="6956C8A1B923F959" description="Objective completion test that fires when the player takes a photo and&#xA;allows photo specific tests." Deprecated="False" filter="0" group="General">
                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="FBC6906A0B16EE3C" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="314555AFCE52563C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EDE3CF28B3C9AB31" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F78C84411A09F641" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
        </TunableVariant>

        <Deleted name="_iterations" muid="30BB1E44C7BB8003" />

        <Tunable type="int" name="_iterations_per_sim" class="TunableRange" default="1" display="Iterations Per Sim" muid="20DAF30B08A1C386" min="1" max="None" description="The number of times the goal test must pass on each sim." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

        <TunableVariant type="None" name="_number_of_sims_that_must_complete_test" class="OptionalTunable" default="disabled" display="Number Of Sims That Must Complete Test" muid="35E0F0BAB63D68C2" description="This will define how many sims must complete the goal test&#xA;in order for the goal as a whole to be considered complete. Each sim&#xA;must complete the test the number of times specified by the &#xA;Iterations Per Sim tunable.&#xA;&#xA;If this is disabled and the list of Scenario Roles is empty, then all&#xA;sims of interest must complete the goal.&#xA;&#xA;If this is disabled and the list of roles is not empty, then all sims&#xA;with the tuned Scenario Role must complete the goal." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="13D598225918CFF9" />
            <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="A392C568C56246ED" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <TunableList name="_scenario_roles" class="TunableList" display="Scenario Roles" muid="72BD7675630E5AB8" description="If non-empty, then this SituationGoal will only consider sims with&#xA;one of the tuned scenario roles." Deprecated="False" filter="0" group="General">
            <Tunable type="snippet" class="TunableReference" muid="CF79D5546FA33DE7" description="The other role in the relationship." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
        </TunableList>

        <Tunable type="bool" name="_select_all_instantiated_sims" class="Tunable" default="False" display="Select All Instantiated Sims" muid="DBA1E06CC1680814" description="If checked, the goal system selects all instantiated sims in the zone." Deprecated="False" filter="0" group="General" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="FD3B0C1DFB8C457D" />
        </ActionList>
    </VersionHistory>
</TuningRoot>