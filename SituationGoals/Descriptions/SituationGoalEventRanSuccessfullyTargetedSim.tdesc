<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalEventRanSuccessfullyTargetedSim" module="situations.situation_goal_targeted_sim" muid="B5B27883F2588269" description="A situation goal that allows you to specify test events that you can&#xA;listen to and an associated score to award when a specific event is &#xA;successfully run." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoalTargetedSim, SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableList name="test_events_to_score" class="TunableMapping" display="Test Events To Score" muid="1889B0F2E13C3B21" mapping_key="key" mapping_value="value" description="A mapping of test event -&gt; score achieved when successfully ran." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="2A20B36C1DCBA44A" Deprecated="False" filter="0" group="General">
                <TunableEnum type="TestEvent" name="key" class="TunableEnumEntry" default="Invalid" display="Key" muid="D232FE3B837ACF88" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="The event to listen to for goal completion." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="value" class="TunableTuple" display="Value" muid="C5FE196F5AD03152" description="A tuple of the score to award and other checks to make on the &#xA;event before it satisfies the goal." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="interaction" class="OptionalTunable" default="disabled" display="Interaction" muid="5FC3B1327CD0AA0B" description="When turned on there will be a test to verify that the &#xA;interaction sending the associated test event is the same&#xA;as the tuned interaction." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69D3A1698A6AC166" />
                        <Tunable type="interaction" name="enabled" class="TunableReference" display="Enabled" muid="B01D1814F2483720" description="The interaction to require the event to come from in&#xA;order for it to satisfy the goal." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="int" name="score" class="Tunable" default="100" display="Score" muid="C127B72451E98D6A" description="The score the goal results in when completed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="UiSituationGoalStatus" name="status" class="TunableEnumEntry" default="COMPLETED" display="Status" muid="395C7ABC04C17E41" static_entries="situations-situation_goal.UiSituationGoalStatus" description="The status of the goal result. This will only change the &#xA;visual when removing this goal from the list of goals." Deprecated="False" filter="0" group="General" />
                    <TunableList name="tested_score_overrides" class="TunableList" display="Tested Score Overrides" muid="BE9C6A63A934AB6C" description="A list of test, score pairs. We will go through the entries in order and the first&#xA;set of tests that pass will return the associated score as the score override. If none&#xA;of the entries tests pass then we will default to the normal score." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="B2AEF36D2D5E37C4" description="A set of tests that when they pass results in a score override of the associated&#xA;score." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="score" class="Tunable" default="10" display="Score" muid="9177E64F16FC432E" description="The score override to use when the associated tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="tests" class="TunableSituationGoalPostTestSet" display="Tests" muid="698FD04A86E5CA71" description="A list of tests.  All tests must succeed to pass the TestSet." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableSituationGoalPostTestVariant" default="none" muid="11A84EBABED8C26D" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="480C66E87212F975" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="FA03575ADA441C57" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted buff." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B9E5437AACA20CBB" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="BBEFAA602775B17B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="40C9F57E5EEEE17F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D0AE41BBDC9B9C16" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="531AF9F2752ED384" static_entries="interactions.ParticipantTypeActorTargetSim" description="To whom or what this test should be applied." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="34A2ED46FCC9E915" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="44D4E48C4E11FD7B" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="D870687DF5AB0321" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="10708A1F5535D6CF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="89D4A9C7441C02C9" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADB79344686B8DF9" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="5D034533676E1BC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D05969400FEACD42" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="6EA272061B566279" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3D08C52FE3DF3EB0" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="D4ECB6B4118F8EA6" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="DFBFD10C58295453" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="BE6DFD9CC8DA1560" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2312C092946130BF" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BB2B60DC7008A983" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16D42F348CA716EC" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="755B2B0563751697" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="28A02C840F7179FF" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="D653AA30C3B61E35" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EA30F1EFD98ED90C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7CBA40E041F2C9B0" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4CEE29586822134F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9F38B45F2AE91CCD" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="A09E1207391BF941" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5754E14B5E77ED96" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2D52E610242F1A9D" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="334E279138DC6139" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6BB5B13109B3CBFB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3A24F52FE505615F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4A132E47D59E59D5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="B5690E2B942D7349" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2CAE9515B0EAD67E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="62639096E4415CD7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6C6D2725A1D137E2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8DF8990538BADE7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF280F3C61FF99BF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A101D92C66CD94DC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6D6067A3F8EDAB52" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E911DE6DF2B5B5FE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5E4B49E4D5B9B4BC" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="4BDA3E9AD987EB2D" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="511D488C2E0403E0" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="759F779C91DBD0CD" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B028CAE632117D4E" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="1014EFDB07F25262" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="40507913AB60E181" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="DECB58128C7F2629" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F6DAC4747B1A3CD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="63927C63F360226D" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="A0F31E1E35EE1D38" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6C0D4B3DAE3C0029" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADBE38F22DF418EA" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4EB2AD4F8B4D8385" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="7164DAAE6422B2D6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A42EEB5612F9D5B1" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="BFFB96780FD27EB5" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="AE5900F99F12C5F6" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C38717F074AD8980" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="246CCF5CE143E5CC" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2D80D642EC9182C7" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="12665E85600F4011" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="5A6EE315B57D55CE" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="E98747FE2AE21AE6" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="25C681F97566636F" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="377E064934EFEA62" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="9BCEB550221FAC49" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="9FC29E7F3787E612" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="89CAC223A1131BE8" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="62D9F326D8535047" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="1408E1DA76E66343" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="60079F65BD16EF2F" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="1A74AC67A2A2E4A3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="3E88895E670F145C" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="2FA4E711F7CD2B36" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="7E095AED7334D1D0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="7671C1F7F2A84298" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="8F93AA055E288036" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="35F1FA59B37CAB27" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FB3CEB32509EA5C" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="821998E309DF376E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="38CA11AC5E8A36EA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="49819ED22FFB5ED7" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="57D45CA2928D2D4" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="59E24C08F3AF5C58" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="3E6E7C7570B5B8E0" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="85848A8A379E0C2E" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="CDBB21B023B6477B" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="328F81D5791BA11D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C9917643FECE7334" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="B2A7C667100C0615" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="DC06EA3A791B0872" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EEB4FFB0553C3E3D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B097601EC1E11F60" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="A5370F93063156D8" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="A5AB584EBD607B3F" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="6E71CB0B99B3CDF3" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="1B75558304D2C8B1" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="AFA2FC8E1ACA28BB" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="F13646DF990D49F9" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="931AB505A2B46571" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="53AF432941EE4F5" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="DF8FAFEF95A2E441" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="98E133DE26062317" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="8B54C0197A69FAB7" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6DCEAEBB2DD61AAE" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F5D950409D08C56D" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D4A4808FFF14EDA3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A11ED303766CCDCC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="39A93C38B4CBE2DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="137EECDC23AA3EDC" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="39D9E5B61194B560" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="EEC3925889C56E12" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DBEE0B5FB6F5EB02" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="DFF0C852EB35156" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="F97FF41B811EF7FB" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="BE13578016051D3F" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="334FA0A6BB932D4D" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C725A5A9F67203E4" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="1463F4D17AF9FCBF" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2EE126226F569E16" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4AE5638D11B4D1" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B55BCF4BF8A1A279" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="68F509A34CFEA2FB" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B9A267F53D4E82EC" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A997613AEA302211" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="AE9230BF8FB51F1D" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="2F0C97C9E9902E9B" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="961ACDEBB7198D77" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="B19DF522C96AE699" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="876EB8EC28B6AB7E" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="1507FCA73C4063F3" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="736C6BC688CA33F2" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DF6A1053107EE105" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="E302271CF66A0C8B" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="FDA0E3D269E31163" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="2FC515CA3978634" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="79B34D7820E09919" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7B3EF045069CFB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B08BD4C6286F177" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5687B0F10099A20D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5F09E74002CB9E" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A23FFAE468804D4B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="C5C89F9B85D555FC" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="4AF3ABB44B0C81E0" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="4F8322D17024CFAF" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="CCE5AFF676EC9BE1" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="15500954BAE05930" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A113487D96718B8C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4603D526E7C170B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="858ACD4ECFE92348" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A6BD9FDD258F3C6C" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="EF5E43ACE6C8BFC6" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4F47EE50FAAE67A7" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="451D65F4C7521262" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="D8F99BDDB42222F7" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3600D742C5973ABD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="45A3619B3B6B65C4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="634F7251724C48B3" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EC59CA39369243A5" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D57364057C770B9B" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="40085ED80E2A72BA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="6466ECF612C26978" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5E464C98E2749ED" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="18AFC50F7C6FDCCE" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3131A953CA7448AC" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="349DB28536CF2603" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="6828A07C41A76B31" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="2A1C276208C41DF5" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club" class="TunableClubTest" display="Club" muid="907D48E3D2A84199" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="B78C90D53520E6CC" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DAE91527DB1478BD" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="95A0870CB6235984" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="C2EA09E219E9ACE9" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="1D7136348F8838DA" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="1D042631505EE290" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="D59BE33D0EB411C7" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="29608A8CF5943E65" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="605801FC2D26EEE1" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="ADD158E18ED0B701" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="C0DBE33BFC1884CB" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="242F1C28126F239F" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="2BF6904A46491A2F" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="13E629CECAB56F72" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="58AEEB0C9DDE5C93" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="88379918ADE51F5A" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7DEBE98DA5B4A188" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="808C45BDD99024FF" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="80F5FBF26480133F" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="A1EEBA8D7032004C" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6727E3945DF8F7BE" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9A577AF313E9F9C0" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="280B7FED2530BE4" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BCC91CF2D62D073A" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="CBFD0C1BE2E44588" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="9B6FC6A1650CA757" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1177E70A5391AB5A" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8223D6841EACC645" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="30BE3C6E74C2E962" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1651DF8FD916E78C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="8D89A436F4FF74F2" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4995E7724BC85AD0" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="F56DBC171DA784FF" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="383957D6B501FE43" />
                                                <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="22E33C8316247BBB" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="E6DC849F500DD7CD" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="B7FF29ECF6D99CE4" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D6492239E6464E1" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="6AF6E7B3DAD3DB77" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="1D53E71A99AD4842" />
                                                <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="F842C25D658ADB4C" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="C908BAD37511E93" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="DA6B8BFAFFCF1457" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5F69A6A7999CAAB3" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="798FE14603C9978E" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="46E83D69EF4713CC" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="226AE5E476B72DE8" />
                                                <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="1F019E59E77E659E" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="9CDD22C3ACE005E7" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="670336CBD2B6701D" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="7CB934C6F544BF68" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="3F48D32F327262E3" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="7A8B389111DC8E85" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="828E480EBD73E0E6" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="D5D5107BCB6141F2" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="5E720D628B0E1122" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="15AA9210AE0D07F6" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="503B1A81D11E4A97" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="326F421F81070BF1" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="81985291B078951E" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="49FAD3D196E9AA0D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="FA926CFBBE90CAAD" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="2A07EC2A755B28BC" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="8A5F5EC751F0372A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="C3D2E4500724A238" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="80914C67AA8AD023" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="6FDBF2F211F4162" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="93D73F63E96AF542" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B0283F9A5907E675" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="551A3D123FE4E84" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="B32A8262F89B1802" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1B24DFB4A130FAC7" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="1F9FC39A437AD22D" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="952C968BD83225D9" dynamic_entries="objects-collection_manager_enums.CollectionIdentifier._elements" static_entries="objects-collection_manager_enums.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="2070AE9BD612CBC5" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="85B2A3E07CCFF6E2" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FAC8190B20BB350F" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="5AA30E06CA7A4D81" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="7A4D31822FB6068F" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EE6FF11DFF546CD9" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5B8FEC5337037449" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E1BF274C8B0FB846" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="9873F933E862170F" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="FCE08F10C4A98582" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="316008BF20AEF90B" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="28B742DA14895309" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="15E3E79BD7B1777B" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="31F8F85DD55D78BC" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="5A2ABC00CA7B4E00" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3194CBE75D958C90" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="3C71E01A4554262E" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="89766FD162F3401F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F74793A0192FAA31" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="22833A500031125C" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="F0420A0BA1679B94" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5BBEC2736622CD1C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D3C0185F739D0EF" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2103535307D34B5" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="6CEC307B831F7493" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="799585EA85EB6682" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="F961979F4B7C03E7" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="FBB1AE5D857B8BE7" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="9032D36E87B50FEE" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="EB5C6E4FD27E36ED" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6E69C8C6DE753D98" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="5943AAF1296DF529" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C5E0ADADDFA05F55" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="EE01D8EF58DB106B" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="702612027A77EBE0" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E4E643BDA6821D69" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="51333C2DE51A294C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="61AD9484E01D9B3D" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="5FD0B4A59226CE24" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="5F933B4B4DD2BF80" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3CE05FB9B4CE1C69" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="714C334323AF094D" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="10782D2FA434D37D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3DFFAB0BB7166D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9BA991890AEC8838" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="12F84CD998B75780" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="6183931F2B561800" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="2EE96BF86DF126EC" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="214E37496D7EACCC" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F4E5C507D7DC1487" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="3EE845E59931252A" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="3A3FD7C07A3B7D1D" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="2224A2B2708050C1" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE96FD506FD886D0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="17FAE7D957E84F14" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="5D5986A7943F4D1D" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="34D30E9385C51021" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="9C167344E299E0C8" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="231EFA3D81998CBA" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C8684B2DD5CA3C10" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F9A9DDF99444D25A" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D6740130CC134D0C" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="4EA84594ABD5C18C" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="2DB46A1975D67221" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="96BADE334BB2FF93" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="C4239ADAEFA705D3" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8C8704194F8A163E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B0F153A7B62ADED9" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="1C81140CF6445C7" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F7161FDF22A9989" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DEEDC7EBE50C869D" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="C0D3D5A61B985918" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F46E735481996253" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="819CB7E041540250" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="11ABB199E1BD8FD7" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="18CEF08912B0CF9D" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C4EB460437D9DF29" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="1B7714F0E724E964" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="FA4E571854BF8A8" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="3EA7E3748892B934" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="AD9200421D764508" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="35DD3A04B801FED0" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="BFAE1EDBAE668640" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="6C6523334000602D" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="4BF93FFECCC50AEB" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="EF20021626BF185B" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="820D1BD1B8CF997A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AB70D24404E86212" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="22433C3593C17DA1" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="16F79305062D78D2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A5F310D57AEA0CD" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="8371F4A41ABE3CCC" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="722848A3AF1B605D" />
                                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="B4A278A9E2EF35B5" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="CA55A86CC6C77E0C" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="43AE8274315E1F4D" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="F201D2B3248D0507" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="75A821E1DBA817B5" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="3E39FB416FB9B2B7" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="BAFA3C992D5C9D8D" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4B7C19D0A0632C1E" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="539FFD9F9B205A8E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F865FE70A15361D5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="474D63E0480D3E01" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="2E58D87FEF1F67B" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BDA0AD03BB2800AB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AE8FB96B0FA2D908" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="7DF2DC8334D5BEEB" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="75B5DD9164799FC2" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2D1BA7F81A0DD032" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F706A28F1C999A98" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="ECED8E8DD17826B5" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="E484E25ECBB5DF63" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="B331265E4998A141" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9F2FAA672D022184" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="164D2ACBE0274CE3" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9A2548E12BE13D63" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B74160D62BA08B00" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EDFF82D7F4A6BBCF" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D04DCAEE5063598D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C939F7B64E843B07" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="90C09E7A21F0BBE3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9179675FAEB3BDE5" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6E10D04F3F455925" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="590081CC05ACE57E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A9FA4E65F17827D1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6BE7A795E8E3314D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="63A7A08E44F09CAF" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DD05D0E69AF85EE7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="62AAA853096BA275" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6C2B33CB8C7502D7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="610EDE5CD4847503" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1607D384787AA60" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A98787BFD78E91EB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="28BCCD7FE20C2BEA" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="1E188C3976D28622" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F8931BE4DDA12436" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="43DD02141D7D92CD" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="71D78A65F7816104" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="FA31AA6FA60BFB26" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="593E1B8A22552ED0" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="lot_source" class="TunableVariant" default="use_current_zone" display="Lot Source" muid="6F190F7557071330" description="Which Lot we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="1BDAC5883439069" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="D35FFBB8A22B094A" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="C3A15EDAB405197E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6625C7608CBD3E1A" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="639DEDC0AF39F64E" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="DEAE61A75E9EA0B4" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="D699DE6BF9FAF5C" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="EF7D54EB7EDC213A" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="FCB86A2D7F1E39D8" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="88B4BE8554B46EF6" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="35D7AF9CF7BF67B7" static_entries="interactions.ParticipantTypeActorTargetSim" description="To whom or what this test should be applied." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="7F621642A4E828D7" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                        <TunableList name="stats" class="TunableList" display="Stats" muid="E0AD0A5FA270F07E" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="EA108532FD21D7B0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5764DC02F78176C3" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E9FB842DBE17CBB6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AD433ACBC9A77DF4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="EE37BE56C314CDA0" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="3658BFC61977E005" />
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="D87CF98AF8C1F387" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="7EAD718FC17CB675" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="F127A340220F533B" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F70FC018833A3193" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="FCB39963E578E762" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8A8AEFB12CBCD505" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="8C07F7B2ED422FC5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="790B20D4AABE822A" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="E8D385839CDA08EA" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="C64B1DB1332D1641" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="4A1F16A53C8D50B3" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="D075E98AD8BA41FC" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D54DBA3A3C5C303F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="87809109C43271EB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DBB1CA1A3A1F64CE" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="7322E177E719AE7D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="in_use_test" class="OptionalTunable" default="disabled" display="In Use Test" muid="AE6E17A2946AAFF9" description="If enabled, test whether the object is currently in use." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="780750A2D2B9B4F9" />
                                            <TunableTuple name="enabled" class="TunableInUseTest" display="Enabled" muid="63289C2915C40118" description="A tunable test to tell if any of the tuned targets are in use by any sims." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Candidates" name="candidates" class="TunableEnumEntry" default="NON_ACTORS" display="Candidates" muid="1EC9A815C1478DDF" static_entries="objects-object_tests.InUseTest.Candidates" description="Which sims will be considered users of the target." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B48B9E95E81A5C20" description="If unchecked, this test will pass when the object is in use.&#xA;If checked, this test will pass when the object is not in use.&#xA;&#xA;If a number using range is specified, then if checked the test will&#xA;pass when the number using is outside the specified range.  Either&#xA;too many or too few." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="number_using" class="OptionalTunable" default="disabled" display="Number Using" muid="110AA56C720EC6A6" description="An optional interval to specify an inclusive range of valid sims&#xA;that must be using the target(s) Too few or too many, and the test&#xA;will fail." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE7EC24CEF517B16" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="1B1E3CDA6113629C" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="944ACF0665A84AD9" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="50936F01A6EFDC6" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A7D3E7FDF8B1A4BB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7606AB57131AC075" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3437C9C632861F90" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ObjectLocation" name="object_location" class="TunableEnumEntry" default="AllSpaces" display="Object Location" muid="9F1A38C606A61CE8" static_entries="objects-object_tests.ObjectLocation" description="The Location restriction for the object on active lot. Object needs to be in the set location space to pass the test." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="19F0E3E63D17212A" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="24E10FC2D8399861" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="7DB1710CA445E51" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="8283D791B800F9E3" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="ECBC373ED346CF22" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="check_same_level" class="Tunable" default="False" display="Check Same Level" muid="4CDE0E88383DC659" description="If True, we will only check objects on the same level of&#xA;the radius actor. " Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="EB28A47FA162310F" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="5F1EE446CA8C16CD" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="7085374CDC96C943" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="777E2245CE14A346" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="94431A6D35456DE6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="CC0BC4BD427F09A7" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B41A3DE55F1F1684" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CCDB762219CB09F5" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="slot_test" class="TunableVariant" default="no_slot_test" display="Slot Test" muid="19BA77F0E385EB50" description="The slot test to run on the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_slot_test" class="TunableExistance" display="No Slot Test" muid="99CA05F04C1F535F" />
                                            <TunableTuple name="test" class="TunableSlotTest" display="Test" muid="5B13857BEFC68965" description="Verify slot status.  This test will only apply for single entity participants" Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="check_part_owner" class="Tunable" default="False" display="Check Part Owner" muid="615A4C721A62C154" description="If enabled and target of tests is a part, the test will be run&#xA;on the part owner instead." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="child_slot" class="TunableVariant" default="by_reference" display="Child Slot" muid="5D28B88A9FDFCCEC" description="The slot on the participant to be tested. " Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="4D70CDC9ED8BEA" description="The exact name of a slot on the participant to be tested." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="34E37940313ED303" description="A particular slot type to be tested." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SlotType" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E2370F1EF3371777" static_entries="interactions.ParticipantType" description="The subject of this situation data test." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="slot_count_required" class="Tunable" default="1" display="Slot Count Required" muid="CBA725C9774D264F" description="Minimum number of slots that must pass test &#xA;only valid for reference slots And not if all are required to pass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="has_empty_slot" display="Slot Test Type" muid="AE877452A09C245B" description="Type of slot test to run on target subject." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="has_empty_slot" class="TunableTuple" display="Has Empty Slot" muid="F31059A358D1DB83" description="Verify the slot exists on the participant and it's unoccupied" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="check_all_slots" class="Tunable" default="False" display="Check All Slots" muid="D648E8B343822029" description="Check this if you want to check that all the slots of the &#xA;subject are empty." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_used_slot" class="TunableTuple" display="Has Used Slot" muid="8E553ECE40BBCEC3" description="Verify if any slot of the child slot type is currently occupied" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="check_all_slots" class="Tunable" default="False" display="Check All Slots" muid="52EB13C77E3779DE" description="Check this if you want to check that all the slots of the &#xA;subject are used." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_type" class="OptionalTunable" default="disabled" display="Object Type" muid="DED3491A8EBF251E" description="If enabled one of the children in the used slot must be of&#xA;a certain kind of object. This test can be done by &#xA;definition id or object tags." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C47AE83D4774A05" />
                                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="7006876237C26C2D" description="If set to definition id then at least one of the child&#xA;objects must pass the definition test specified.&#xA;&#xA;If set to object tags then at least one of the child&#xA;objects must pass the object tag test specified. " Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="A6A7ACC75F917ABF" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="2B9D8EDF08B3A09C" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableTuple>
                                                                <Tunable name="none" class="TunableExistance" display="None" muid="AC7AC348209DC138" />
                                                                <TunableTuple name="object_tags" class="TunableObjectTagFactory" display="Object Tags" muid="EF0D75BBE5A984D9" Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="DC7460FBE37E5542" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="554CE73FE8F99BE8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="110846EA3370D022" static_entries="objects-object_factories.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D123D03050F39E51" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72EC538F9D1E43AE" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2D39EC746C1E5ECD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="5DB1C7702EE775A1" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="65EBE1C1E68637A5" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="311A2F9435DB5A11" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D4AD472BE69B2A76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="C9190265F2CA88CE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="7D2D57660334623E" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F7CC3173441606A5" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AB68FF630ECC4108" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18D0DEE26094E98D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7329019B57AA14E2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="A9F6251F5CFF9C04" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="821EB0993230DE71" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="A5211487B4A4FAF4" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="5732E89ACEF93618" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="A5C7353BC32347A4" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="4968F5F205D75909" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A25CB9AF846C7681" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="30F53B8A4EC23912" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="826437FBDC45AD53" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C11D09294AFB829F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CB510A1AEA382B63" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="9C3FAF5FD57F0FDC" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="EA2C4942FDAA8ACC" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="43EF0E8B15D609A8" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="3E3CEF239140C518" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="F942AA6E99F9C23D" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="E3324216FB7A976" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="3C0451E291972280" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="17FEC8187696FBA" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="36A7A7EE8BC26063" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76BA0D3B15079BC5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="23BDF517509CBD0A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="7CE52EE27E484CC8" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="FD734D04CE1C77A7" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CA90BD600FAFED4D" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="FE0BA8228C5AE147" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1F039952A5CE88B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="8C40BACD6764583D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="71DDEDC9FAF1FAB4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="22D585AC2247A107" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="40554CB3F2AB3978" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="1BA363F59FF6BC3E" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="410DBF418A10078C" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="D050420E6895871C" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="2FF582B8F93DB9DF" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="3401460591A0AC86" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="5645361A4EAF9681" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3CD1C32895B0F3DB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="DE17C08C2D241618" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="729634A4688B4459" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="214E7B3CE50B911B" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="BF4C97EFD6251414" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="EE0C5283A23609CB" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="79EFB2B5B9F50CB1" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="CA883192B270E90F" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="CA4339990C023641" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="DA99E534B5C37512" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="F0799A794A4ED40C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="19BC6CD5D8EFAFB9" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="417CF968ABEDCB43" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="3B636F2D900232F1" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D91639F71399810F" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="B9ACA595B65CCDCC" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="ECA9A544413C5C65" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="37F944056A907790" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relative_statistic" class="TunableRelativeStatTest" display="Relative Statistic" muid="3A98079EA217C028" description="A Test that compares statistics against each other either &#xA;on the same participant or on two different participants.&#xA;I.E. I want this to pass only when the actor has lower hunger than the target.&#xA;I.E. I want this to pass only when the targets's hunger is lower than their bladder.&#xA;&#xA;If either of the Sims doesn't have the stat being compared the value will&#xA;default to the initial value of the stat, or in the case that rank is being&#xA;used, then the initial rank will be used." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF1F8D93FF4E7F19" static_entries="sims4-math.Operator" description="The comparison to perform against the value. The test passes if (source_stat comparison target)" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="difference" class="Tunable" default="0" display="Difference" muid="2BC51F854D0E7850" description="The difference between the source and target stat in order to pass &#xA;the threshold. This value is added to the source stat value and the &#xA;threshold is checked against the resulting value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="94872205CA5EE09E" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="3EA54C0C85357C5D" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="19737EA19F5CB9B1" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="15F535230E3E53F2" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="B213DEF1ED6FD051" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7791FF551EF1B7FB" description="The stat we are using for the comparison" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="target_stats" class="TunableList" display="Target Stats" muid="754A4F30AC083BDE" description="The stat on the target we want to compare against.&#xA;If there is more than one, all must pass the comparison.&#xA;If there is none, it compares the same stat." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="40E23F4FF20DD84" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A4F5511FF547DB11" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1FDD37F816BF0A94" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EAD77969A3CF4777" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="scenario_relationship" class="TunableScenarioRelationshipTest" display="Scenario Relationship" muid="FF36D212F88E45B5" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="D57507B9241857F9" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="must_have_track" class="Tunable" default="False" display="Must Have Track" muid="326F687B9B49D6DE" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sims actually have the tuned relationship track. If&#xA;left False (unchecked), this test will evaluate as if the Sims have&#xA;the relationship track at the value of 0." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="57A0B0F874E29A4" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="52675434CB172F20" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="8B59CA79EEBF8324" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="DEE5FECC13FDA1D8" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5BD1C3D426FFB20D" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3AC32E5ED4DC9454" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="C5CF23C8ACD8B051" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="1EE828F7B473F8D1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="3DF10F1D7D57DF44" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="C1464A1D5CB50440" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="F48992038E1863AA" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="2E743B59590ECDFE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="7AED6A5469609D9B" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="CC5EB6DAF5857A1D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="target_scenario_roles" class="TunableList" display="Target Scenario Roles" muid="6F8FB2134C2130EC" min="1" description="A list of scenario roles. The relationship test will target all other&#xA;sims in the household of the subject sim that have a tuned scenario &#xA;role." Deprecated="False" filter="0" group="General">
                                            <Tunable type="snippet" class="TunableReference" muid="9095ED3B58065C2B" description="The scenario role." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="AFA2C240141452FE" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="9740CB9A5790D792" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="1A9A8754A08A71F8" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50EA73B1EFAF8DE7" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="DAB049D3AF7BF49A" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="56AFF18500B17E67" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="3F50AB70F455EB6A" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="16EAC3F0A74D0B82" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="B3EE2A3936BD5E95" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="filter_target" class="OptionalTunable" default="enabled" display="Filter Target" muid="51C0CA72424C274B" description="The sim that will have the filter checked against." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86BAE02608F7D530" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="E2AF49EAD7331436" static_entries="interactions.ParticipantType" description="The sim that will have the filter checked against." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="in_current_zone" class="Tunable" default="False" display="In Current Zone" muid="B4F15D60A13941A3" description="If enabled, check if any matching Sims are in the current zone." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_missing_pets" class="Tunable" default="False" display="Include Missing Pets" muid="8CE84F42F16EF7C9" description="If unchecked, missing pet sims will be removed even if they pass the filters and tests.&#xA;If checked, they will be included if they pass the filters and tests.&#xA;Please leave unchecked if the filter they are used with can also spawn the pet sim" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="include_rabbithole_sims" class="Tunable" default="False" display="Include Rabbithole Sims" muid="FF5E6CCE06AD31C3" description="If unchecked, rabbithole sims will be removed even if they pass the filters and tests.&#xA;If checked, they will be included if they pass the filters and tests.&#xA;Please leave unchecked if the filter they are used with can also spawn the sim" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="8BB260C01CA2246" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="74F020F51932F6AB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="D174B405E21048DB" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F8F78D86CC893D8A" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="25B427AE8D3FCE13" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ACF5C19CC3499E62" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2272A5CB160AA81D" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="51F888442D35B3D4" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="203E8173F653055" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="C5ABAB95EB186DE8" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="A1D967A4FA90017E" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="89E197131D593A8D" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="BF3EF73BFA1FD08C" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="193B1A93F9A135EF" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BC9BF690B4A63051" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="death_object_assigned" class="OptionalTunable" default="disabled" display="Death Object Assigned" muid="BD2DD51901EB7756" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="71D4527B4B2BA99F" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="FACF4C0A9E1789DF" description="Whether the Sim's death object (urnstone) has been assigned&#xA;to it's tracker. This happens in the normal death flow, but&#xA;is skipped from CAS or Gallery." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="7F4F49D9F3A2FFFE" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="EF2B652500A17BED" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="62BB1F8089F088F2" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="47330111FFB00A84" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5813E025C1CCDDA" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="D9404C68FD00EAE5" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="BD07B7B8BE0143DF" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7989B96D192C7F34" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D5216FCA17D6B4E6" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="599071755FF37A85" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="F6082B8B8C927395" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16AC58F7385673EC" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C3AA0A76DDA4580A" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="7FE74344B8256FF7" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="D12B43DFADA477D" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="89C8C251C3809ACD" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="9E166FFAADABAE86" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="5DD0436357ED0C94" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F6B4330F6F092059" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="E1A771EA9477368B" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableList>
                                            </TunableTuple>
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="AB210EB0A5A83EDF" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="1325F8ABD55F3693" static_entries="interactions.ParticipantTypeActorTargetSim" description="&quot;&#xA;Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="822EB6748188BE85" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EEDA10B62426006B" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="16113E5EFA8B9F52" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="63F5624BC8691F45" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="83D409985B5A2E18" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="situation_job" class="TunableReference" muid="A0D23E66B3C542FB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="CDBC047888877677" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="83FEA061F8364AA2" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="EA6548C1AEC218A0" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="F0CAEA91FF3BCD1B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="D1D75FF3856142A5" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="227FF29D32919C86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A9209A47663B2B9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="6CC07632A4F17B60" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="5692FF0046FA1F93" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="F9818B405F08F386" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                                        <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="F4ED45115A178378" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                        <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="6B2666E500E7A55" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="52CC244584583BC" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="FDED09E2BADB1D62" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="3E01F4CD08877A1E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="B6D35941DA382F8B" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="39E96734584DD289" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="213BDAEA52500F09" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AFA81270F948B60D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="65F0BC7EF62BE0AB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="8BB6F26CB2983109" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="304C9342E1CA35DD" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="F0C5F581BEC1B790" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="25ED0204085F21C6" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="51C534FDD88FC257" />
                                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="ADFE7B63EBA71C1C" />
                                        </TunableVariant>
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="AE053A1422B63CD4" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="test_individual" class="Tunable" default="False" display="Test Individual" muid="A2C2ABDD08BC1B63" description="If true, the test will pass if any of the objects meet the criteria. If false, all objects have meet them." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="27409162BD6D940A" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="29FDD9480F5C39EF" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="926F82487B2CA4E0" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="40B4BAA33DD8006F" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="C2C32D1466ABD8C1" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="35C990B0620922B6" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="473809AF3D657F1B" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="861F0FA32300013F" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="92B26186F313CAF0" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="500DC93E3CFAA7A7" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="8A9E34B7EFF01CBD" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF50674C0CE798E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="52DAA55EFC22FB87" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="641E373265777531" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4830924814B419E4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D60DB15090599481" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="E82015D2127E8F17" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="time_of_day" class="TunableDayTimeTest" display="Time Of Day" muid="284A25171D43D769" description="Test to see if the current time falls within the tuned range&#xA;and/or is on a valid day." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="days_available" class="OptionalTunable" default="disabled" display="Days Available" muid="7C3294331BF959B6" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="300D834C2FD93554" />
                                            <TunableTuple name="enabled" class="TunableAvailableDays" display="Enabled" muid="BC3C5F64FF597BC7" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="9E674D5A10E0E09" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="9AFFBF3D148B59F3" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="5DADEE9F781EC484" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="3A77AF7A6D48690E" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="CA6BA3FC0841DBE3" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="B0B563702F4253E3" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="3555012CE63A053E" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_day" class="OptionalTunable" default="disabled" display="Is Day" muid="5FD2481086D65BFC" description="If enabled, allows you to only pass the test if it's either day or&#xA;night, as per the Region's tuned sunrise and sunset times." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A03389232934A916" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CFEEEFB3B562DDBB" description="If checked, this test will only pass if all other criteria are&#xA;met and it's currently day time (between the sunrise and sunset&#xA;times tuned for the current region).&#xA;&#xA;If unchecked, this test will only pass if all other criteria are&#xA;met and it's currently night time (between the sunset and&#xA;sunrise times tune for the current region)." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="time_range" class="OptionalTunable" default="disabled" display="Time Range" muid="91199E33C359B807" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F4C035F4C5DB60BD" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6B24D1C0B4EC5BD" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="begin_time" class="TunableTimeOfDay" display="Begin Time" muid="58AEB0BCF7D748CB" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="hour" class="TunableRange" default="0" display="Hour" muid="76B7141A608F6403" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="18034543B46B03B" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="duration" class="TunableTimeOfDay" display="Duration" muid="F58670B2BFCFF2C3" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="hour" class="TunableRange" default="1" display="Hour" muid="3C1D7A00347CBDC8" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="42F7CBD1789B4017" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="topic" class="TunableTopicTest" display="Topic" muid="3AE2DD153E876D1A" description="Gate topics of the actor or target Sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist_topics" class="TunableList" display="Blacklist Topics" muid="36374EE6030395A3" description="The Sim cannot have any topic contained in this list to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="topic" class="TunableReference" muid="995459E5E7FEE245" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_topics" class="TunableList" display="Whitelist Topics" muid="EB397D795B4C215D" description="The Sim must have any topic in this list to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="topic" class="TunableReference" muid="AB8F5325C85EFE4F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="D5ACB1554BB068E3" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="83219EDE302E6B76" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="F5B312FF5D91FAF3" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E7A109E148151FA8" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="287B8A65EF74AB9" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="89ADCC28B7A14AFB" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="700EA56F2E980599" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="CCBFB357150B0093" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="42FE1DCD6199CF3F" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="911190CD359BB58A" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="7F94AA0A76401AE2" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="A155EAAA87061205" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="4F1D0032550E3953" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="D11AF0C5D23A650E" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="412256B8D3328FB5" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="15AF2DF61C309FD0" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="AAA324A3921E32D5" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BB90F57702933433" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="D8D59087B8794115" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="7439085D40D7D8E5" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="93FAA845C66426FE" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="528C59B9C3F1C1A1" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="80F5503182C99F36" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="920BB15FF2BB53D0" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="895C2875BD5DBD90" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="E83EBEE8FEAE359D" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_npc_owned" class="Tunable_IsBusinessNPCOwned" display="Is Business Npc Owned" muid="79E2A845E2E86745" description="Test if the zone specified by the zone id is a business owned by an npc." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="fail_if_not_a_business" class="Tunable" default="False" display="Fail If Not A Business" muid="20E85B9868FF0DF2" description="If checked, fail if the zone is not a business.&#xA;If unchecked, pass if the zone is not a business." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_npc_owned" class="Tunable" default="True" display="Is Npc Owned" muid="624DFAF9D4585438" description="If checked, test will pass if the zone is npc-owned.&#xA;If unchecked, test passes if the zone is NOT npc-owned." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="7646242263552B86" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="7B0645DA7CE20B5A" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BFA53A8CA87694C6" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="ECC381DA489E4783" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_multi_unit_an_apartment" class="Tunable" default="False" display="Consider Multi Unit An Apartment" muid="2BB9AAB3A29CF8" description="If enabled, we will consider multi unit(for residential rental) to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="D69B32A134D6A3DE" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="95FEF473BC432544" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="FFB4DA915E5CA62" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="558DF00DC1BBE3CF" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FD90436ECE3B839F" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="B807F48BC42BAE74" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="673FE2C1227A9D10" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="95FB792EB226F8B5" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="BF3FD0A62DB3CCB0" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="674A8DB420F79D42" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A19FB27DF33286F9" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="14DD5A50C1B09A8F" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="E2E4FC7BD2C1768C" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="CBA74095EA6380A7" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="E5148B4DA35E1CB8" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="BE52858D7680FA20" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="469DD68B0DBFC09B" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F99536E0CFF5D61A" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5346CE31EB78EA62" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F9AF538A8945F81C" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E59DD1997197D47D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2EFFFB5C8E3C29A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="FEB3F124D78E1FCA" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CFC559160AD7B1D4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="421766E547406EFD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9AFD4C88F03BE99A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0D72D8FEC765F07" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1522B6A8BB8C20D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E012E2F817CE4181" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="A172232367746930" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E9FA198083D0E486" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E3B867DAD3CD292F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A5D4D3758D2A48B6" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D0DDC63EF98361AB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FC95192C5BAFB51B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="951F8FE07A92B63" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3C450CC210B8A56C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="8B747F57954CD093" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="93BF0F3E6B1706ED" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AF93779C36B360C2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="98EEA5A380B60376" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="9A21511A49CC3EFD" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="925EB74D8A1DCFC0" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="D099E403C7B2E9D0" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="823076709DDDEEF2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E2289BBFE1696767" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C7300AAF25DE686C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="363515E8CC7F3916" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="72F6E95AF427567" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4E76D15CC11C1552" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="426ACCAA2671F283" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2A759E6BB2B480F0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="21933EC6F040228C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="760DE0AA00B3AAE3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D159CA4A13AA3148" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="D5F7230A217402BC" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1BA6A7F8DE550048" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CAB2C666DE3FC01D" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1BD7B584EDF58E8B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BAEE2F25B850F3B6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AD26A76A050B0ED1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7F7350E0241060EE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="66F2C7689C6F3074" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="174B6D5AC8E27285" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="71357717A83731EE" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9CA35F92766B6047" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="7600393FFFD15CD1" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CACFEBA007BBEB4B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9DF4ACF66B00FEB2" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F48A3CFB19F18116" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8B2B67DD3085B761" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="5DA777AB30F45D59" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D8801D44F5EACE72" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B66BD7601CE9F1E7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1EB539160E94EAB1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D77D1501280E09D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="49D6379ABCF1406F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="34E8F64B10C2ED2B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="77ED22786D3CC4FD" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="478B5FAC8AAFF34B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="21D933515C5DF750" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5862A614A1526872" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A5841B4E58E39C38" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="70B80760B7260A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BA8C96775A4DA347" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C578B8F3B6A1B9B6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="9499CA2612C1FB65" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
            </TunableTuple>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="17D5774336A20E2E" />
        </ActionList>
    </VersionHistory>
</TuningRoot>