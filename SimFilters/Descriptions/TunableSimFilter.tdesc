<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="sim_filter" class="TunableSimFilter" module="filters.tunable" muid="E735D36C17066CB6" description="The base tunable filter." instance_needs_reference="True" instance_subclasses_only="False" path="SimFilters\Descriptions" use_guid_for_reference="True">
        <TunableList name="_filter_terms" class="TunableList" display="Filter Terms" muid="5DE0D94EDC6B862B" description="A list of filter terms that will be used to query the townie pool&#xA;for sims." Deprecated="False" filter="0" group="General">
            <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="58546F0D25C47C3E" Deprecated="False" filter="0" group="General">
                <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="C869946DB20FDFF7" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6CD69740CF816AA4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="45CE3C3C4AA9C2FE" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EBD075824EC7895" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="650B3ECB577C69B1" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="ABBE6FA17C735C70" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="38BDEC3DD9A3F88" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="A0C9D2C2139E48A5" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6C1D5D8CF3ADDA02" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="47B0408EEE9E448A" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="45FDC539E5D22AC8" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="68D012D0E060FFDD" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="85DB1841FE27DC51" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="119BD5BCE6864582" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2883BDE0DC0730F6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="1243F3C877A090E9" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="72F5E97313BE46D9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="7C92A05CDD29B870" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="760D21E72BF7B4A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="4F4CFCA8B0C9CCCA" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="ADCF693CB19AED8B" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="A067BEA25A0B0B92" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="7E0CCDC1CF01181C" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="35623033B401F29" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="854A7F1380EEE88C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="7B97AD99109AA729" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6C7946EE1F85259C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DDFAB8CCC7DDAD05" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F35FFAF54F3CBA19" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="649D6876C94E2A83" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="E72783C6666B443" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2131B07DC76F2A75" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FA26C5010713C76F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1200387542C2ED43" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="EF97CD819762DEE2" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="937A304498E22A1A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C4E44D31547F5D0C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C7DA82B91EAA4C69" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="7C56CC4AA57CB439" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="56892904B3A1232F" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="FA9C2310D2D4ECBC" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="287F152CA903E620" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="B693E00CFF759D7B" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="448FB7EE64FFE5F5" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="CBCB464AEB4D2452" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3D87966831E82F1" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="52C031ED32D7723E" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="46120734D5BC721" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="E71140BCD2281158" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" class="TunableReference" muid="D50026D4D134AF8" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="5590F06E7CC54BDD" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="87CB1B599C6C7591" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="5BD38C8CE2B91D5E" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                        <Tunable name="none" class="TunableExistance" display="None" muid="1BA73B8A3CA2748B" />
                        <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="69E951A3688637D3" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="3A9AD314747C3DB5" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="CBCF43CDF2450E52" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="37BECEB124F94557" />
                    </TunableVariant>
                    <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="B6516C24DFA3E691" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B2277321D03AC690" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F2EA44041A165C87" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F1B5AE066C791904" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="F9BDD8560B02A77C" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="8242B56CB67808E7" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="9B54DF73413F8ADC" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B178C181E56802C5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="3ED7381CD1E8E1D2" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                        <TunableList name="custom" class="TunableTags" display="Custom" muid="D59309250EADF352" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="ECA429C7666E6C0E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableList>
                        <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="45213DC56F4C2A33" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="46E9F741A916EC77" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C500DD8EEC0AF0F9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="6C3EDF6D9DBD9F18" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D74C8EA791452BB5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A1272E14E9515EAA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2B1C9ED4D1ECF89F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="1A89C06D93EBCD32" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="97C88170F7ED1FD0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4887DA7DB32E4ED8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A5878FF711EB54BC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="4C0535A7444B6D85" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7DE60FBDA70C7EB5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="AB12EEDB776FCB2C" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="11358A760B2BBFD3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="43113AE812AA4C79" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="C8DCC367E3CB9304" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="CC10C791122B6E4D" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2FAB5F273281CD3D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="549EFA11F8A568CC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="25FE574E829F430" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A10D8C12F4085BE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="195733E5015BF5F9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="EB4FFF6CA12628F3" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="7FE606B91F836F45" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="F26B1CCFBA35B035" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C7E28A67B25FF7C1" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="57C10E321799B568" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A07F8ED7445DDD9F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="C0663FBE3D7D054E" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="D73C6C2D28B14A6F" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="C9B7010CAF0E9D1B" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="61599872CD70927A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="AEF10ADEF1B0B9AB" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="D718F258D2D16539" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="A4BDDF5DD38EBD5" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FBB17E989894369C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="E637D6C3452CE6CA" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6567FFA39A4D9347" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="5719552F69F2CA7A" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="278A541EE448AF9D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C39E3BF435692C83" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="44EBA2686C235D7F" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="F78E2721C5A52143" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="6AF97C67D5926714" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C06CA182B1D7E196" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AD3B86134E6C16E7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="58EC3291DBBD47BB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="63471D8A757AD237" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C5483877980437CB" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="65697149BF2A22B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E0E95E25731BA700" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="9D4026D32DF92E95" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="EDD41E50CC14DAE6" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="EF427519155E6827" />
                        <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="39E85DC759355A88" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="9C17BF64D4B97097" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="AB31B466DD7F9EBF" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3FC77E97C3CA639E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="2D427CA2907EBE5D" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="D9A5E38F3CA6BA1C" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B7F36E037DB0B708" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EAF1F982C591A48E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="8723A8C6BF6965C5" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="42AF67EDBF1DAF3D" />
                        <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="AB06595CDE0E7FC1" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8BCBA7ECD735E86E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="53199DAAC16C77AA" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB062AD61B4D4C7B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="645B83E06FD6DCB1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="C8C2279D7EFE9040" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="B6EA614DC3B02F19" />
                        <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="4C834E4ADBE5E63F" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1A640180C3816BAA" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="B7CD0FC4AF5C2A6E" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F8E7BE17D8873FFD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="FD59D91F446B2AAD" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="305BF93F2A310270" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="59E39B6134449701" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="660FA296333B7381" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="8052371EE532F1A1" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="2CE47AB2B26774F7" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="60901576F340F7A4" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3F341D5285FC860C" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="7192F137B24D4252" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="846FEFC40062189B" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="52C5055954F657D2" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="E38BEC3D38F4A414" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="142D236B25EAD738" />
                        <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="98B849453130D4A4" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="87AD112DDF0CF6AA" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="752E93F14420B3F5" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7400CF3681BA8320" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B62CBE1829970A7B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6C1647AF4BDB2851" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="1AD0D577E7ACE559" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="A32957C34564536F" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="58C5DB7D10A16DE6" />
                        <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="6546B00F69CFD461" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="16BB602F3E1152B7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="B5516CFA65BC59A6" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7AFF4E2090A83FC8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="F6DAC522252531" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="F01DFB3CB346CF48" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="426C26B3FB6A6D13" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="A92FD094AB0E7D7F" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="B65467B9E42800AA" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4EAE6CB9BCD85914" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F96A84C954CFE9D4" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="F5D8A0C0278FAABF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="A5BDDD62D8F6B43D" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="4FF73EC7A50F442" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="91B707EAA210077E" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="119242A11FF7DD7D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8891BED8883E3FE1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="B82525D90212165D" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="4A3E6F74CE414BF0" />
                        <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="D07FD052200B53CC" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3E270DE7169241C8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="24D881333FC84823" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4BBC1BFB8B3DA2B8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="18C2EA9E0B863702" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="E5D0C6FEC266A21C" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="51BC462A61CBF07A" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="85C341E9B337580" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="37FC3A1D6F079B9D" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="8149463E7B54ACFF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="B7FF5FD228859A66" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4645DDE37D08528E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="2AF35A0EA86559FE" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="45DA7FD2A000CB01" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BC3B0E5CEAE1478C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="42F18FD98A58E8AB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F4209B443FC9EABF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="2617B24306393318" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="19FB8935519ED6CB" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2AF0038A0B86D6C0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B802A576C9A75930" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BEDA7DC56E25293B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="CD829C8172EF2693" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D1E4D89700908E21" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="685A7361F667727E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB71FBD0C1B0C9DD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="8138118B9C0A5CBD" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DD89C83EB678DB79" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="37AB94B6CF012642" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EA3E3CBC07B8550A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="D45EF77A526A82EC" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="9360DA81AA45C162" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1AB04B0A4FC2D685" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2E5B7809A6417761" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="504EF4ED231085FE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="C077D4BE3671BD4E" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2E30804AE956815E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E751B1C6B4C90206" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="792EF898ED3EC6E9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="4CCB1E479D46D4C9" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_override" class="TunableExistance" display="No Override" muid="7A4859BA8572BB3" />
                        <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="738C3E74A9CAD921" />
                        <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="41A046BF7DA6CB2C" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="8F89BA221FC7B944" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="8EBB38C9CAB57B47" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8B75FFBA4FA3F29" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E731A872AC4D4B36" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6949E841D80E042F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="5AC7288113C59BDA" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="3A09B9262ECA5A5" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="BDD6A11AE2F8E0E9" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B2FD4E86E10477E" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5B3D9C31C66CDFFB" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4101CEB1F5FFD7BC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BA96DC43C7157675" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2B9EDDE327DCB7E4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="73656CEB967FF1E9" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="549D82FBE77CF7D8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C93BA7D835CED06E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="17521BA5D777D8E9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="B42116C765F13C4D" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="43A05EA122635DD6" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AAC1EE653D8270D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F362F48202E8981A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="D63A340D5A653D69" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1D19287B88134165" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2CB5FEEA4A7B7FA2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5F21D96F99F411AB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="F60F58E70C939649" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="42576D848FD40D07" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1C822F95AFD73B65" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DD56B40630ED988B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="7137A29A1E3CF6CE" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="44F86B2E73007D52" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E0D2BE1B63EB856A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6531EBB174E11BF9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="F0E196F02151F12C" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="CC4A59BCA47EECCC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F655AA10775B4CF4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="FD867B4422D96D02" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="27FAF7298036A872" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="19EF538E0A8DD67D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1F35F6AF2D161248" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="3AD64770BF5B5876" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                        <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="54BD551874C443D3" />
                        <Tunable name="any" class="TunableExistance" display="Any" muid="D92C4EB2C1DFD9AA" />
                        <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="3D808D082FEBA31F" />
                        <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="77C97C88EA304E35" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="E95FA94D67D8157F" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="3D65998166A71758" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C57FABB1028A8A9" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F175D7581F6F933" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="C074B0DCD00F4A39" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F4A43D9CBD09BDBB" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3E6ED07290F2F83C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C77A20ECAD4E724D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EE95F459C7EA65A3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="C40E136AA13C473A" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E6DE68129486CB49" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BD41025D8815ADC7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="62CFBF55689C6F07" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="82DAF30606BD74BD" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="424F3592809CE612" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AE135C1BB4144691" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9FC81B3E411FB72F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="23812CB5A53933F6" description="Which region to test against." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="5DCC5C10FECA0A28" />
                        <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="FDB25BD57DBEF764" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="region" class="TunableReference" muid="5C8EBFF21659D2A7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                        </TunableList>
                    </TunableVariant>
                    <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="BD61C60125970FBF" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75DC0AF09124EC6F" />
                        <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="8806C2498087B4A7" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="1057CAED863BBD3F" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1507AC4F0BBF1D29" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1259A25FA0B55D33" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E37179C6017B058A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="B888B548F48EF195" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EE42339BF054FBB5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="55E2D71B29EA673E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="388C95B8897ED0A9" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="26EEACBD13F1A39D" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="6B3ADC499DB1C7D7" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7DFC1DAC45FD66F1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="CBC0F3E4B4CA76C4" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="3C1A99EB035EB543" />
                        <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="EFE9F79069DC8C52" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="32C571DEE0F481C5" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="5164292BB8848F4" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="504693BA54AE8438" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="5B31E1C658697864" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="1D2E8414774D780E" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B46E9E0594B30AE4" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="E7CCF983A7ECC3E0" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7AC0260969D7E8C0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1FF909C40FA587F5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="4C76DF126D34554" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="FA5924D8573F2EB2" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CB3558F6162938F6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="ECF9B1EDF2BB6A61" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="1905D708438FA74B" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B47479540C877C1B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="10F40647D1F80956" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="7F7F0504C4CCFD2F" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="94E68A672601820B" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="779658736B643C53" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="47BD36E9ABDCF240" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="A8DC93F58FED4788" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3C3838715F63BC41" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="51CBD80BCA879DAF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F07235A6A3709A5A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="perks" class="TunableSet" display="Perks" muid="67F47504986CA873" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="bucks_perk" class="TunableReference" muid="4D3678487057602D" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="8319F6BD73922948" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5D7D8422D8DCDB8C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="166569A2CA72203F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="330EC495D7059121" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="B39E6602DA6D6701" />
                        <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="768857EBD52C4630" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="B7FC275608ED62C5" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="63D095DEF1846CEB" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="CC0E72B2B963B266" description="                " Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="FDC88499726927" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="DCFBF8051E3E2002" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="95B4156E4B341237" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="6C3947BDC28AD30C" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="EE47DB7F5BE7B3F4" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D1DD38FF758C36F3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E527C0A3661FD011" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="759B94431A9FC6AD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="50C47999B1EEC43B" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2E1BD9CE9257939E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="33AAB3016FB362CD" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3F8430A6F081C08C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="7B9A902ACC1C2E1A" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="78570084E4C92A71" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BB5352033BC2A3DE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="E8958DCE807B37D9" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="FA3485CC8C1FD60D" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="5315EA28589ADFFB" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="749DA8F368958E2D" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DE788F6A7337163" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="745143E4D0841063" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="39685097617BDBC4" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="F7B61493236D0380" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="5F4D3BE0DD36024D" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="F55FBFA33D8A79F0" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="2FFAEBD397AFBC7F" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="D417F4F0EE950E5E" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="416AB043A5C8E0D" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="AC8DA4D109567449" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="37E84BF4DE86293E" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="17E6F0FEB5B4F42C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F81A62D0ACE09D0A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AE16AEC6818A1ECD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="4AEC4051D8917903" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="239E7A9D122C4B" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="25881926B03A3209" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="E9B83B3FAC5BFF44" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="BD7B87136BAA4515" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="679B11E7E63D55E2" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="D170A6D9E6AABF38" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="3484DE6E732DA390" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="7E7AF6FA37370324" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="7690D105E38D1FD6" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="A1B4BF14342405C8" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="9800FAA99EF450CA" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="8EF38BFB9FBFC306" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="F9726469D7FF62FA" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="C783C9D315E5F0F5" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="7674DBAE7B9AF6DD" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="FDF2EE98331F0EA6" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7A3696E02500F31A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BF218EDD1E888D33" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5596443EBDF13B39" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="1FA70E568691CDA" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="83555A6F4DA6CC3F" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="5558E937DF7F15BA" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="1370FBB3F33E8042" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="42CDF1F211F4ACD0" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="90110BACFD636704" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="C67D2DD921AA258" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="EEDC207B5AD0137E" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="99A77E5F942BA5FB" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="5CA6D9B3BFFDB693" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="6F423D97A6FCA77A" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="164D130CB492469C" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="4FA1597F168F2F62" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="D04C5A2F138254C" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="4567937CEEE4350A" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="39B0080EFFFC6D61" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="A1E19DC2FA4DBEA" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DE9709B5622CEBF2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="8ED4C2093D84267D" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="3F16E92D5890A017" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DAA4BBCA0FE70767" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="292D61A5F110B8C1" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="802CE64928D3C994" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="4BA47C79C70649C0" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="F799AF36CE91EF3" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="D8D8ADC433D9631D" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="79178D1EBBA3F9B5" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="4B04C11EE7168D09" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="EF9F9981CCE0D227" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="65E06F0A08D206F4" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="737081F986DA8DE8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BAD6022498DF36B6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="25A535D2673A07DF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="C3CEEAE4EFEB94EE" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                    <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="162D3677ACDD07CB" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A6AC77363CEF03BC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="87F8E361EB45FC29" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EFD06D1C754980C3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="CD37BA2B3DF69AF3" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C55B381D583DB322" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="81F5C49260D4FFFC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6129CB7B6F3C7E1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="18AA98EA4E2FE5BD" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="E65248036E4E8E99" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C78E596F9AE46454" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="95A8C422BD37F2B4" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="10FE7DCADE2818DC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="89292EA46FD3B14E" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="856D8E975ADE77B8" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7B171C35EA0A76B6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="D26D35A03C0A61F0" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="ED100DAACA01EF04" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3A9F4E161CFDF92E" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3A2B71DAF5FB56B6" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="23FE5E1ABDE80DAA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="3224457366841605" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="69F8BC18920558C4" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                </TunableTuple>
                <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="E9E9C7456B1FEF43" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EBE381DF335CC671" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="B3D3A09695F28230" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="30263877F4114079" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="29D8505B7CFED29E" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="DCF406AD39402C7E" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B723654A51BA6FF2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="9697E2887C3F5C03" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="2C1B7B707AD15666" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="5D9C54646008D5DB" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="98767AC62E0118E6" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4AEF2ECFE30456DE" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="70A27012214C691A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="626775F809DD3437" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="skill_list" class="TunableList" display="Skill List" muid="556934D6077ADCA4" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="3DC579113D2F74BE" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="BD3507F7B94DEE47" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="9C6C025D349F4C1A" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="B402482FA81606A5" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2DDE79E87D5CDC70" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3E641EFB89A8A0F9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="73C27619A8123BB6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="54DEE47D5A49D551" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="54D0087B4C5CA16B" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="38440A8137E743DC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="AF541BA7910D19BA" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="40B784000D971E17" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="20A334B5AE3750D0" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="CCEAC8BE66537A4" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B6ED526DF324109E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="E5350D9AD7C8F4DB" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="C29C38D5F4E08429" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8267DCDA1F48A21E" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DF1ADFD2F1D81E3B" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="99C240C4CC898844" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="BC26C5B6CEBDF4FB" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="BD20A5C358A51E90" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="4CCC87037855DF33" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E0118BCE49D7C2F2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="48AD4F95E5651BEE" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C3740A2F06F299D6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E983809DB95AD9DE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="907DD223E30E4999" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="4E9A359C3DA9EDFD" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="862A715A08401EC" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A7CE9E8E19A9C8A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="traits" class="TunableSet" display="Traits" muid="BBD36D7F4AA0EB20" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="trait" class="TunableReference" muid="7D122947D0B71432" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="6F291D129098FEBC" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3AA9C74DBB3C0DAD" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="76387E9C8944E653" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="22DAD2ED44D49559" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="55817EA1EDEF9E2D" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="2B07B28D513BD787" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="2AE04AC4C93C3B46" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                            <TunableList name="_majors" class="TunableList" display="Majors" muid="5E9D58D29E119DB1" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                <Tunable type="university_major" class="TunableReference" muid="537BDA3A2A089D62" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="960FD0D1323D6C09" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="E9291A9AB62E30E4" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F04F4212EFE19A54" />
                        <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="C29A88EEF9A198E5" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <TunableVariant type="None" name="_household_templates_override" class="OptionalTunable" default="disabled" display="Household Templates Override" muid="B5396B6AAF9282BE" description="If enabled, when creating sim info use the household template&#xA;specified." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="408F832E4A1458EC" />
            <TunableList name="enabled" class="TunableList" display="Enabled" muid="A5CE8F9B7BA1007C" Deprecated="False" filter="0" group="General">
                <Tunable type="sim_template" class="TunableReference" muid="930F08315FC7CC89" allow_none="False" Deprecated="False" filter="0" group="General" restrict="HouseholdTemplate" />
            </TunableList>
        </TunableVariant>

        <Tunable type="bool" name="_set_household_as_hidden" class="Tunable" default="False" display="Set Household As Hidden" muid="3554BF473CBC815E" description="If checked, the household created for this template will be hidden.&#xA;Normally used with household_template_override. e.g. Death's&#xA;household." Deprecated="False" filter="0" group="General" />

        <Tunable type="template_chooser" name="_template_chooser" class="TunableReference" display="Template Chooser" muid="716D4517853CC07E" description="A reference to a template chooser.  In the case that the filter&#xA;fails to find any sims that match it, the template chooser will&#xA;select a template to use that will be used to create a sim.  After&#xA;that sim is created then the filter will fix up the sim further in&#xA;order to ensure that the template that the sim defines still meets&#xA;the criteria of the filter." allow_none="True" Deprecated="False" filter="0" group="General" />

        <TunableList name="additional_conform_terms" class="TunableList" display="Additional Conform Terms" muid="53F8267ED6B39ADD" description="When a Sim is conformed to meet a filter (using repurpose terms),&#xA;the actions taken to conform a Sim may not also be the same as the&#xA;baseline requirements to meet the filter in the first place.  This&#xA;list is the list of filter actions that are ONLY used when a Sim&#xA;is being conformed to fit the filter.&#xA;&#xA;For example, when conforming Sims to the MagicUser (NPC) filter, &#xA;when they are first conformed (given the witch occult trait), we &#xA;want to put a one-time trait on them to fix them up if they are &#xA;ever made playable, but we don't want to re-apply this trait to a Sim&#xA;every time they should be a candidate for this filter." Deprecated="False" filter="0" group="General">
            <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="A63FE82C4D512598" Deprecated="False" filter="0" group="General">
                <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="F0F8F7ED58E1D38D" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6AD37A277C7CC76" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="872D358A1068CC18" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EED0884189B9D2EE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="B404AF52D5B280C5" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="A48DA72E8EBA1F27" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FC31F739A4C43BFB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="84D917E467A0351A" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="79A1E68F22CCF28" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="CEC2FC233DACDE8B" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="8542069C24A13920" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="A0FFA70BFC0608D3" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AD9E3BD467AEA59A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="95287C7547CC8DF9" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="AC99A95F426690AE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="2C7F27703A8C45E5" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B0004B0BDDA2DD6F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="BBC672C6BB70BEE1" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="F293245946510776" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="9ED0B0EF559A0AB8" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="B4A8DD90620814F5" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="E1DEF08D074FA94E" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="E5A77482E735C3D2" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="314861386A36DFA7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="615963365E4EC0C0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="13048D81402DAAA2" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3F95FBE8DFAF88A2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="36EDE56CD5E34938" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D594BFDB3F685A0F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="8676897D8EC461F3" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="90EE954327D2AA19" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="65E526747886B27F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="833045813AD241D8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4B6E79A08ED3965C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_die" class="TunableCanDieFilterTerm" display="Can Die" muid="D594D173BBCE2CD4" description="A term for filtering Sims if they can die." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BC086A2E6DEEFDA2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7EE677DD1C7B9E6E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="835CC69402B10D03" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="F4EED1A60E7BEC5E" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="47988E45BD9AC36B" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="FCE3D927D57D5470" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="200A7A662D6727C9" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="70FFC3210DA34DA0" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="C530F1F821872EAE" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="9F86EB1D4ACAB9A" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EDA3987A6E3F5E9" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="1A8D44AAAD0DFCB1" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="63A8A0AFA52F8454" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="5D98CDB671F00A5" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" class="TunableReference" muid="4CFD0538642504F1" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="4F8AA9E61FC8F9AC" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="7B6333BD43DF055C" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="A5D0C8DA5C076591" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                        <Tunable name="none" class="TunableExistance" display="None" muid="E94F8CF961C3B588" />
                        <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="BF3CAC210EADAE33" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="EBD32007F0C9DFE8" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="D06B93036DE6281F" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="C261E9AE5964C131" />
                    </TunableVariant>
                    <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="8F6B5FE75EEF50E7" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1AF4024C0F8D9549" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F8FFA1CBB9B1FA83" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F57BF65DF3DB9C95" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_requesting_sim_careers" class="Tunable" default="False" display="Only Requesting Sim Careers" muid="8F19F98E188E7CF" description="If enabled, after generating careers that the sim can conform to, &#xA;filter out careers that the requesting sim doesn't have.&#xA;&#xA;Ex. Requesting sim has the detective career, no sim was found that fit the filter terms,&#xA;so we want to create a new sim that is in the same career as the requesting sim. " Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="45461D0268A46DEF" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="40A60FDED9848791" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2B63AC1E5E8FBCFE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="9794CD5472379DA5" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                        <TunableList name="custom" class="TunableTags" display="Custom" muid="FB01BB94FEC1E2CA" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="77766A77A71907BF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableList>
                        <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="ECFADA74CC6AE8DE" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A962EEC4B12D39F3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BDF3CEC6779E1429" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="culling_score" class="TunableCullingScore" display="Culling Score" muid="125C681ECC81FF70" description="A term for filtering (well, weighting, more accurately) Sims based on culling score.  PERFORMANCE WARNING&#xA;Use Sparingly, with previous filters reducing as much as possible." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="EEBA8CE0A920FDC3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E0A9E2C27CD4E346" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="859C0978D5C6CE9C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="does_household_have_free_slots" class="TunableDoesHouseholdHaveFreeSlotsFilterTerm" display="Does Household Have Free Slots" muid="8AF1439D04219A9D" description="A term for filtering Sims based on if their household has free slots or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FF67B04DC1B28E58" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BF499FE5A81C07F8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7B6EB48725BD510" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="5512C52B1D9D7C83" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="34671F816AFB9203" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="9328F91646276670" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EEB7CCFD0A53E33E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="91796EE39054E050" description="A filter term for filtering sims that fit the requesting sim info's romantic&#xA;preference. Created sim info will have a preference inclusive of the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_exploration" class="Tunable" default="False" display="Consider Exploration" muid="CFE2B3F41FF93D4D" description="If checked, then we will allow sims who do not have matching attractions but are exploring.&#xA;If not, then we will strictly consider only their current romantic preference unless&#xA;the sim has no preference and a fallback is tuned.&#xA;Only applicable to human sims." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="FB6BED275C56B0EC" description="If checked then if no gender preference is set for the sim we will&#xA;fallback to a heterosexual connection. If this is set on human sims,&#xA;it will only work if the sim is exploring, but will do so even if&#xA;consider_exploration is unchecked." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6778FFA2C6F6A3A7" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9868D07A917F75F0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="A0C82EC555E5A53A" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D4F1F89A183864E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DA285B794E5E8215" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="B0CA8224E4678922" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="FDC29FAC62F55A1" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="9048F889C2E51885" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D0D36481E637F990" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2BB5F4E8E6275AA4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6259F1C77D0877FB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="A01058209DC777D2" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gig_history" class="TunableGigHistoryFilterTerm" display="Gig History" muid="EE5C3FCA4C988475" description="A filter term for filtering sims based on the gig history of the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_household" class="Tunable" default="False" display="Check Household" muid="B14B3985D5E5C85A" description="If checked then we check every one in the sim's household." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="6AEEE69A0371606" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="has_gig_history" class="Tunable" default="True" display="Has Gig History" muid="9A3BC767C3E89ECF" description="If checked then sim must be in requesting sim's gig history." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="GigResult" name="max_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Result" muid="7A1D327AC5A9026D" static_entries="careers-career_enums.GigResult" description="The best acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="GigResult" name="min_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Result" muid="CCFD233AA9A995FC" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result we're filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6DFFC10676B213A2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="712BE6023DB2CE78" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="92AB641BF5F4B1F2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="A100D9B63F5CFB87" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2015902320E9F847" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="410DD93AE60C3020" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="specific_venue_types" class="TunableEnumSet" display="Specific Venue Types" muid="EB97AF328608F7FD" description="If tuned, home zone venue must match one of these venue types. This&#xA;option has no effect if include_vacation_home is True and the sim&#xA;is traveling." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="VenueTypes" class="TunableEnumEntry" default="STANDARD" muid="923D5583133B96E0" static_entries="venues-venue_enums.VenueTypes" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="F362F47B7ACEC4FF" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7FD2CF2415757349" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EA14C52EF39A04D3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6F0D3712D52CFD36" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_reserved_home_zone" class="TunableHouseholdHomeZoneReservationFilterTerm" display="Has Reserved Home Zone" muid="58AE14C2CE3B881F" description="A term for filtering sims who belong to a household whose home zone is&#xA;reserved. This might happen because that zone is used by an event like a&#xA;decorator gig and we want to ensure other systems don't conflict with that&#xA;event while it's in progress.&#xA;&#xA;Passes if the home zone is reserved and fails otherwise." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A001268A310EDE58" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="118E6103C12B4990" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2DD00E2AA9AD3B17" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="B40D74C07014A2CD" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="8E2D9FA67C22870C" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="B16858A59E021DBE" />
                        <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="335B89E7DA9B7FC7" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="154F386C6266BC6B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="DC4D99C59274891F" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6CD7BE7CF4192FEA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="5A507782D263F8E7" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="3A9C882347F30B03" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="46D100CD18D64C80" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="371E9F85C308F724" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="F3DF05DB180150A1" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="5C7DBF963D9A9BA5" />
                        <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="1E48EEA9F22F9697" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="653019E96E92C3CE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="DFD684546601AD4E" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F73546CCA5A21F52" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1CE40393A57C286C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="ranked_statistic" class="OptionalTunable" default="Dont_Care" display="Ranked Statistic" muid="F6EAD03CEE0723FF" description="Define a ranked statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="D5DEDF83ADE37AF1" />
                        <TunableTuple name="enabled" class="TunableRankedStatisticFilterTerm" display="Enabled" muid="86479F151EC1830A" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="F5A5FB0691BE220C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="4E0FBEC4301459E5" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F25AE7F6822D09AE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="139405A9B9342F95" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="3E635856AEFFC6F9" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A916B5AD6C605873" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="3DF9998AED1BA9EF" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="9E86E19F34EAA5D7" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="FFFD83D7D2EDC30C" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4870660C5679A4D0" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D71521A18A39F994" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="ADF1D7F6249A7F1B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="B08C8BF59DBC9930" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="9DFA91D41B9DE8F3" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="6A1A5EA41B33FA7" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="FAA04896AB3898F2" />
                        <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="69FA18A87B484243" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="99569374A773F316" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="65B5D656BCE5CDA6" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DAE01DF6F5A0652D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1BB197E0957067E5" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B1FA929CAB596059" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="99FD87992C80D862" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="statistic" class="OptionalTunable" default="Dont_Care" display="Statistic" muid="81D3B8654000F999" description="Define a statistic condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="BE1CB73CBDC01B60" />
                        <TunableTuple name="enabled" class="TunableStatisticFilterTerm" display="Enabled" muid="2B82322CA0DF0ADE" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="888ADFFAE7D28D0C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="A256EB60026001FE" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3D8B188619B35FB6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="53CB1B6DBF58ECA1" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="332231E62EF24DFB" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CA54A9CF0D131AAD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="7F5586FE70FA13C7" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="8FF0AD2AE6769361" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB6F329AACFD4AD3" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="C29ED6FD5DFAABAC" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="C989F0B86F9967A6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="468A8D6330F9B99C" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="A4E0E716497EB0C0" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FEC8E918249C742C" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B261843FF459A7C2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="554FE334D4729D44" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableVariant type="None" name="trait" class="OptionalTunable" default="Dont_Care" display="Trait" muid="8AC99B713EB8B01A" description="Define a trait condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="907B94787C874672" />
                        <TunableTuple name="enabled" class="TunableTraitFilterTerm" display="Enabled" muid="700E6E1B3720E3D7" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="29D6180F0472A164" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="2D0798430460D771" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E6BC3A96A4AFA504" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8E7EC5DA07A2B4A0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="5FF84A81E77B8B83" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="9A5F55605691E75D" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A45686E8E905856A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="1AD2932B0389D834" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="1E9A5CD25168B771" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="22CB04FAB40919E2" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4B06BA5DCB856458" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_clan" class="TunableClanFilterTerm" display="In Clan" muid="5B658B114D0F80F8" description="A term for filtering Sims based on if they belong to a specific clan or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="clan" name="clan" class="TunableReference" display="Clan" muid="165468B800521EFD" description="The clan to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="7F176A99524FE74C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2D994F77FC249D2B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9454043D98AF7466" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="994299982677FBC1" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="AC4EA8316CF064A0" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A612C0F011BC3091" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="80E36F49570AF354" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A3464D5961DC50D3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="C04718B3B15EB821" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5D0FE827838C62AE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E4B825388F6C7B21" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="46A0B66A81BA64A8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="1255E1D83622CAD7" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="B7373919CC598665" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8C69A4177D9D0434" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A0392D7A95050FC2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="709A9810FE9945C7" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="BE766BC1680CA1B" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FFF2F2A74243EA32" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2FCAAB5CFB7424FB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3C35700809A61CA8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="118E545466639379" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="3403D4F61FFB0F5B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6AD881EEDB3D7CB7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7F407DF719F7ECEF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="8EFAD04F787EB462" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_override" class="TunableExistance" display="No Override" muid="282627EE91E4E7D1" />
                        <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="BF69A68D33835FFC" />
                        <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="F561EDADDA8328AB" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="C199DB9206CDD0C8" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="279216B7BDD378CA" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="16BB3FD46556C5F0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E70DB9A0AD862AA2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A5ED662D34D4A247" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="E90FB9065482D96B" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_graduating" class="TunableHighSchoolGraduationFilterTerm" display="Is Graduating" muid="FCE532F7E086FAB6" description="A filter term that allows searching for only Sims that are currently scheduled to graduate in the next graduation." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="current_valedictorian" class="OptionalTunable" default="disabled" display="Current Valedictorian" muid="1E56690E14C921E9" description="If enabled, test for whether or not a sim is the current valedictorian or not. &#xA;If you don't care if the Sim is the current valedictorian or not just leave this option disabled." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="848F7F0C2E7CB51B" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="FB2952EF41C8A0ED" description="Whether or not you are looking for the current valedictorian, or a non valedictorian." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="FEC96D4B316DCB89" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D16CB7B7EA8A5C92" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1804231F7DB4411F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="2CC158CE777DE59B" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D671688A884DF88C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4594B7F3447C989C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A0FC44D8C3BE19DA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_hidden_relationship" class="TunableIsHiddenRelationshipFilerTerm" display="Is Hidden Relationship" muid="6C5505A2B0F7FBCA" description="A filter term to filter out sims whose relationship with the requesting sim is hidden." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C90F3AA373A303F8" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="18F72787444FD078" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2CFC69886DDF23D5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_home_zone_apartment" class="TunableIsHomeZoneApartmentFilterTerm" display="Is Home Zone Apartment" muid="7EA28AA9D4408D1" description="A term for filtering Sims that may or may not live in an apartment.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="68708011A863E517" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="434B07F566783C53" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EDA4646294617BF9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_home_zone_university_housing" class="TunableIsHomeZoneUniversityHousingFilterTerm" display="Is Home Zone University Housing" muid="53E4A8896C0D490B" description="A term for filtering Sims that may or may not live in university housing.&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="68652698A97F7E78" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2AE743DCA6DEBE63" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F29F76C9F8233B3A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="9AAB652EE0892DF8" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5F52F71B1793051F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="86D5E10F1A971AD4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="53D8D949E501A15B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="6A05A24F6A86AB15" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="C68423A4D437E345" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C2B923DA2FE461EE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="869DA37E6BFADEFF" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="957FC42A51C7F3C9" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6FBB35DA408F09BE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8C753A37C06525D3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="4A2B85C3E5207410" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                        <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="6C1E041032A4B961" />
                        <Tunable name="any" class="TunableExistance" display="Any" muid="FEFE42D8151B4B63" />
                        <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="BEFF9D5ACD3B47A5" />
                        <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="167E6401091B2E67" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="1E7FD042B908C020" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="4ECCCFE2DE516E38" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65633B67B9700CDA" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="914B992E4253F670" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="4F8E977D14D823C0" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="B31EABDB715A9E29" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E5DA07C52DF6BC0D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F2CB0FB3DF2C123F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="92A10395EA7A3973" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_in_current_zone" class="TunableLivesInCurrentZone" display="Lives In Current Zone" muid="86A2C828672DFE24" description="A term for filtering Sims that live in the current zone." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="56E0DD60EE0DAE18" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4E4819C1A40D2FCF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2CF4208E875B4BC4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="A008661A9790DBD6" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="60F477EBAD8E11E" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7DB0D9A5027284A3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4B289713FEDBC3C1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="F5E64A2DD6315DEF" description="Which region to test against." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="3400E29D2E921B1D" />
                        <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="38D4655B3683DDD7" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="region" class="TunableReference" muid="2A44C7A07447F2F7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                        </TunableList>
                    </TunableVariant>
                    <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="75AE85E4A918B975" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F3C21BA9A7FD0E31" />
                        <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="49E1A1C35EBD7B77" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="A1C8AF945987FE60" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="808658A351D3CCE0" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1BCE482AB5892F9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5BB2C4A7D1AABAFA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="DC4BBC3C8F2AA1BB" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="457E4ED26FB648E5" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="47174D3BC6740784" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="5E1422659A0C2A19" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="49FE5CE1FADC0D4D" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="4F7D9BA91D163BBD" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D8BB797020DEF89D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="971FA35349E3CFC8" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="95543BCB575659EA" />
                        <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="968C1B6F0BAAEFEE" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="60983B51C24600FF" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_hosted_travel_group" class="Tunable" default="False" display="Consider Hosted Travel Group" muid="582A3CBD1A0073CE" description="If enabled, this will succeed if the Sim is in a travel group staying at &#xA;the requesting sims home zone." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="82D3F49DFFD62A2E" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="FBC2FE6D906A4CBF" description="If enabled, this will succeed if the Sim is in the same travel group as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="5E4E438E0A0F5E3E" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BEE7094341886DB3" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="D2DEB1E3DE9E0059" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1DF331E36CEC0942" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="54F9728D4BE61BCF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="matchmaking_gender_preference" class="TunableMatchmakingGenderPreferenceFilterTerm" display="Matchmaking Gender Preference" muid="21446E852E862D81" description="A filter term specific for matchmaking app for filtering sims that fit the requesting sim info's romantic&#xA;and woohoo preferences. The requesting sim also need to fit the filtered sim's romantic and woohoo preferences." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_woohoo_preferences" class="Tunable" default="True" display="Consider Woohoo Preferences" muid="C5CF4837DE8D9262" description="If checked then woohoo preferences will also be considered along gender preferences.&#xA;If not, then we will strictly consider only their current romantic preference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AA89394D51ECC09C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="pass_all_if_no_preference_is_set" class="Tunable" default="True" display="Pass All If No Preference Is Set" muid="A3761E3E8C3BAD17" description="If checked then if no gender preference is set for the sim and they are also not exploring,&#xA;we will let any sim pass the filter." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="338B744B7A395CB8" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4F6F6858AEBE1806" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B5792C14F635DED2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="DE8B32B3E9863154" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="428F35AC1EF51A7E" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="6E1DC52A1E9B7E80" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="4E54281272ED68D5" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="D0481451C10871E1" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="DC780D60DDF80983" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CEF9EA5443D46814" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DAF74F125112EC5E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="perks" class="TunableSet" display="Perks" muid="CB1CC6A7A8ACE386" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="bucks_perk" class="TunableReference" muid="BB0BD72B55491D4F" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="653B904AECF9478A" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E4F73E905515516F" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A2ADF2E27050C65F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="21ECC849B46F946C" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="2FA094A374A92D12" />
                        <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="3416816126555FF6" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="99E4524F733F8A90" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DCF4FCE4181DD68D" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5B196B11DEE5102B" description="                " Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="D8070D81A900ACAA" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="E0A96E4519B82F7F" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="7FC91E1B07E80713" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="prom" class="TunablePromFilterTerm" display="Prom" muid="77B0D503F57BBC41" description="A tunable filter term used to compare sims to the ones tracked by the prom service." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="PromRelationshipBitType" name="bit_type" class="TunableEnumEntry" default="INVITED" display="Bit Type" muid="739C148A707161BD" static_entries="services-prom_service.PromRelationshipBitType" description="The type of prom rel bit. " Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="E8EE623BC450A26C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4D847920A9D9B3B0" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C3F10BE288EBCB99" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="3E6DC5E0B254DEE5" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="1C93AD95D2332D0A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="A9DDD8B11242FE71" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7D33D0DD311EED01" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="9915165DE672DEE1" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="F83CDDF282D31EC3" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CC73A28CFEF65A3A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="659A8F129BF8024C" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="54280632FA8D3C1A" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="38338B1D28AB3801" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A35684B8F2A0FA5A" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="37A2360DD4FD5FE8" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="D030F7B13A89B1B7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="39B1966B291A08A6" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="D70B9DD3C4AB465B" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="6C7501EDC9C2710D" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits.&#xA;&#xA;This filter will accept a sim if any one relationship matches the requested&#xA;white list and black list filters." Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="BF83D71966D32B8C" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring. The black list is tested on all relationships that pass&#xA;the white list. WARNING: When used with Use All Sims relationship selector, &#xA;the test will pass as long as at least one relationship doesn't get &#xA;the black list bit. If it is required that it fails if ANY of the &#xA;relationships have a specific rel bit, use whitelist for that bit instead &#xA;and choose to invert the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="2EB0F6A6711CA321" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="AADA7AD1FC801E6B" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="FA4C85837CEF8175" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="C6C6052A7E3A6A41" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="135F74D43106FF48" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2581DD5034282C58" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7C3B2B5396FF21F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C99930E351B7D5EF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="A6F105FEE1D03AED" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="62FCF53E5A4DB366" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="A08F7EC5E9B5B695" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="936CF5426205D0F2" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="62D7C229A5A36283" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="A20FFE4E477F8065" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="4EA03F8166B7C078" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="57BFE7F895DA7B3B" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="E5A95987D6C6FDF5" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring.&#xA;TIP: If it is required that the test fails if ANY of the relationships &#xA;have a specific rel bit, use whitelist for that bit and choose to invert &#xA;the result." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="1C715C786B1F1D75" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="85ED7140F2BBA057" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="D2350E41F83F8C" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="CFB545B8275475FA" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="D22FA9E2C6F4F923" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="4C3B79D66DFD2420" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="CD269C8488B52537" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="65836AD4A8A9865D" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D7CE244263A29484" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="93EA5370F643032" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C482D88627DD7E20" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="F6A1D9E3DEDDC10A" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="4C3DAA7D36A7B8D7" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="63A4D8ACAC24F509" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="9794B00ED63D9B80" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="FEE707F320B3AA0B" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="8700DBEC2B22CDDF" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="5A30DC9B45C44FC2" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="AF889DDE1C3191FE" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="1FCBBFD8769A506" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="D97412FE6519A75A" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="A55358A484370CBD" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="combine_strategy" class="TunableVariant" default="match_any" display="Combine Strategy" muid="3E854C52F083C6F1" description="RelationshipFilterTerms can look at multiple relationships at once,&#xA;and evaluate each one against the filter term. This strategy defines&#xA;how we want to &quot;combine&quot; all of those individual relationship&#xA;evaluations back together into one overall evaluation for the sim.&#xA;&#xA;Each strategy also contains an explanation in its tooltip, if you want&#xA;more details on an individual strategy. Here are some general examples&#xA;for choosing a strategy.&#xA;&#xA;For our first example, lets say we are looking at Bob, who has a&#xA;spouse and two children. Let's also say we have a filter that is&#xA;looking for any sims who are not married. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that are not married, we would&#xA;want our Combine Strategy in this case to fail if any one of the&#xA;relationships fails. We could use the Match All strategy, since we&#xA;want to match only if all relationships match. Using the Match All&#xA;strategy, Bob would fail the filter, since his Spouse relationship&#xA;fails the filter.&#xA;&#xA;Here's another example. Let's say we have Bob again, but this time&#xA;we're looking for Sims with children. When looking at Bob, our&#xA;RelationshipFilterTerm will evaluate the following for each&#xA;relationship:&#xA;Spouse: fail (not Bob's child)&#xA;Child 1: pass&#xA;Child 2: pass&#xA;&#xA;Since our intention is to filter sims that have children, we would&#xA;want our Combine Strategy in this case to pass if any one of the&#xA;relationships passes. We could use the Match Any strategy, since we&#xA;want to match with any relationship that matches. Using the Match Any&#xA;strategy, Bob would pass the filter, since he has at least one&#xA;relationship that passes the filter.&#xA;&#xA;One final example. Let's say that we have Bob again, his spouse is his&#xA;best friend, but his relationship with Child 1 is not very good. His&#xA;relationship with Child 2 is neutral. Let's also say that we have a&#xA;filter that is looking for sims who have friends, and want to bias for&#xA;sims who have more friends than enemies. We do this by having a 'score'&#xA;for the evaluation, where 0 is failure, anything non-zero is a&#xA;'likelihood' of being selected, where a higher score is better. The max&#xA;score is 1. With all of that in mind, let's finally say that for our&#xA;RelationshipFilterTerm evaluates friendship, where enemies would be 0&#xA;and best friends are 1. When looking at Bob, our RelationshipFilterTerm&#xA;will evaluate the following for each relationship:&#xA;Spouse: 1 (best friends is 1)&#xA;Child 1: 0.1 (Bob and Child 1 aren't enemies, but it isn't looking good)&#xA;Child 2: 0.5 (since neutral is halfway between enemies and best friends)&#xA;&#xA;Since our intention is to try and find the sim with the most friends and&#xA;least enemies, we can achieve this by using the Multiply Scores strategy,&#xA;which is an easy way to combine weights together. Using Multiply Scores,&#xA;Bob's score would evaluate to 1 * 0.1 * 0.5 = 0.05; a pretty low score!&#xA;&#xA;Note: all of the strategies actually work with scores, but the Match&#xA;strategies just return 0 or 1." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_all" class="Tunable_MatchAllStrategy" display="Match All" muid="FFE6961A3FC47F31" description="A combine strategy that passes (scores 1) only&#xA;if all of the relationships pass (score non-zero).&#xA;&#xA;For example, if we are filtering for unmarried sims,&#xA;we want to fail if any of the relationships for the sim&#xA;are married. If we look at Bob, who has a spouse and a&#xA;child, then we would still fail, even though Bob isn't&#xA;married to his child." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="match_any" class="Tunable_MatchAnyStrategy" display="Match Any" muid="1EBE8AEE6183F980" description="A combine strategy that passes (scores 1) if any&#xA;relationship passes (scores non-zero).&#xA;&#xA;For example, if we are filtering for sims who have any&#xA;children, we want to pass if the sim is the parent in any&#xA;of their relationships. If we look at Bob, who has a&#xA;spouse and a child, then we would still pass, even though&#xA;Bob isn't his spouse's parent." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="multiply" class="Tunable_MultiplyScoresStrategy" display="Multiply" muid="C2DC503B455002AE" description="A combine strategy that multiplies each relationship's&#xA;score together.&#xA;&#xA;For example, if we want find sims with friends, but bias&#xA;towards sims with better friends, we want to multiply&#xA;each friendship score together. If we look at Bob, who&#xA;has a best friend and an acquaintance, that would&#xA;evaluate to 0.5, since a best friend is 1, and an&#xA;acquaintance is halfway between enemies (worst friends)&#xA;and best friends." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2C355ADE2FB0B7E2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="4BFAE0B99B95EB33" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B144C38FAEB971AC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="9655D33BD33B372D" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="AB74707DE63B0D89" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F3D08310F0A5CFE4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="1318C8F02346C1C8" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="9FF72E3CCFA96BC4" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_household_with_requesting_sim" class="Tunable_RelationshipHouseholdRequestingSim" display="Use Household With Requesting Sim" muid="2BF04890F271A46C" description="Consider the relationship of all household members with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="FE6FF4C3D1F9D6BA" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="784D2C04CD17D370" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim_household_members" class="Tunable_RelationshipRequestingSimHouseholdMembers" display="Use Requesting Sim Household Members" muid="DB4D17C5CE3E8D8E" description="Consider the relationship of all the household members of the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="24E9F24E38A179BD" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="3C873B4981BA4EA6" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="D0B7EE2001DA7932" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="BAA91DD0019B91EE" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A5FD291CBEF82642" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="4DD4384E6FBA39DF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="4DE019463683CFDE" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                    <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="8C76D38A298A7755" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="36EA9EF94DA3755B" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BDB2A061E02EFDBD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7F0ED245C0D26F4E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="37E7C2CE40FF983F" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="5064FE0628787663" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2FCD359CC1C54B5B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="682ACB63DFAD5CA3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="11CD68CD58E8E410" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="21ABDB5B1DE55DDA" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="A54DCFD97081CC83" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="55FBC6AF2D7C1EB2" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C81EF73044EFD3B9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="6AFE13D70186B98E" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="D510D2226BA3AF2F" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="38C5B4B15DC231F6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="7BE26B11AF73E00" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="18202A83D76ADEA" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C45CECF8ACD277C" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="22D11A98A059D211" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="AFC02E18C3FCDCE6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="53AD79A6416F3ABE" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="9F6874A11990B3FB" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                </TunableTuple>
                <TunableTuple name="skill_list" class="TunableSkillListFilterTerm" display="Skill List" muid="CF13857FA94A68F0" description="A term for filtering Sims based on a skill list. The score is modified based&#xA;on the tuned ideal value of the best skill in the list.&#xA;&#xA;New and existing Sims can be conformed by granting them the skills, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="914E87F7930605D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="A83964DA12724D45" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B9C2F148F225BD63" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="AF1FD0B8D0FE9D8C" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="5E7CF9E0FDF7D198" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C51ADBFF4CCF64A4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="minimum_valid_skills" class="Tunable" default="1" display="Minimum Valid Skills" muid="FCA49CAB2DCCA0B8" description="Minimum number of skills that fit with the range" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="CED383137C9086B9" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="A8898B63F74EBF06" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9AF297C0CB9B6803" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9DE1D3259CF91885" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="36748A7139E5D379" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="24E2EE19941272DE" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="skill_list" class="TunableList" display="Skill List" muid="7DE523D24462C266" description="List of skills for the sims to be included in the group." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="941237BFFD5E2627" description="The list of skills the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="52E045231A25F08F" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="additional_species" class="TunableEnumSet" display="Additional Species" muid="81A129B91AE98262" description="A set of additional species to filter for." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="A4EA8FB345B8E2FE" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="D762EE1251B45080" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F396A64F3BE092DB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2EA7029CCC5F0F28" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="416AF00757175BDE" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="35BE8BB94EAB8348" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="667027E173849FA2" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="D35CD2DD06AB323F" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="830679196F233519" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="EE755BACDABA4D51" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="22738B0B3AEB33FD" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AFE4C90B3BFCF17C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="31E877AC7A247719" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="3F0E90CE4DF4D50" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7490DE820C9CA5F5" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A5DE95770EED04F3" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="8C16943A8BFE1244" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="CFC47B3F8FFCC93D" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="83CFB80217CDEFDA" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="ABF563C70BD1323D" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="2F4435394936077A" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="34E737F9B1F3A450" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6399D2E1CCAA3F06" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6CC2BDA3F9F5787D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="47D585FEFD0ED7AF" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="trait_blacklist" class="TunableTraitBlacklistFilterTerm" display="Trait Blacklist" muid="EC3AB2DE34343193" description="A term for filtering Sims based on a set of traits they should not have.&#xA;&#xA;Unlike the TraitFilterTerm, this is not invertible, and is meant to be a more performant alternative&#xA;to multiple inverted TraitFilterTerms (e.g. for blacklisting various NPC types)&#xA;&#xA;Conforming to this filter term removes any traits specified in the blacklist from the Sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="8B06BC5F472A9D2D" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B3EC0247C948EB12" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="traits" class="TunableSet" display="Traits" muid="5CADA1BD84D5986B" description="The traits to filter against." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="trait" class="TunableReference" muid="24B007538380CA03" description="A trait the Sim should NOT have" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="8F1AA08CB0A08605" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="force_filter_term" class="Tunable" default="True" display="Force Filter Term" muid="4081814E5C3EA78C" description="If checked, any Sim found via template will have this filter term &#xA;applied when conforming it.  If unchecked, this filter term will &#xA;not be applied." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="43259FCBF89EFDA8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="F5FAC8C82B5C4F61" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="CF10A3B54F76AE2A" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="D74FA889639E1229" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="A664ACAAD6C38442" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                            <TunableList name="_majors" class="TunableList" display="Majors" muid="89955DE2F9105CDD" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                <Tunable type="university_major" class="TunableReference" muid="4F574B7D4644E4E6" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A847CA0E192FD159" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="9E0AA847B3CD0D1A" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6052E0D3F5F5CE9D" />
                        <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="1EF071D9D1BA5F16" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <Tunable type="bool" name="automatically_assign_as_street_townie" class="Tunable" default="True" display="Automatically Assign As Street Townie" muid="E000234225B8CB8C" description="If set and this Sim is being created as a townie (i.e. as a Sim&#xA;whose household doesn't reside on a physical lot), allow the Sim to&#xA;still be automatically assigned to a street. It will be considered&#xA;as living on the street (e.g. they will pass the Lives On Street&#xA;filter term) and will pick up any characteristics appropriate for&#xA;that street (cas tags, skills, etc. Specific tuning can be found on&#xA;Street -&gt; Townie Demographics).&#xA;&#xA;If disabled, this Sim will never be automatically set to be as&#xA;being part of a street. They will still be allowed to be assigned&#xA;to a street if this filter has a Lives On Street filter that allows&#xA;conforming." Deprecated="False" filter="0" group="Special Cases" />

        <Tunable type="bool" name="repurpose_game_breaker" class="Tunable" default="False" display="Repurpose Game Breaker" muid="FABF4DC8D6B11A65" description="If checked, then we can repurpose instanced sims for the results of&#xA;this filter.&#xA;&#xA;DO NOT TUNE THIS UNLESS YOU TALK TO A GPE.  IT WILL POTENTIALLY&#xA;CAUSE WEIRD SUBTLE BUGS." Deprecated="False" filter="0" group="General" />

        <TunableVariant type="None" name="repurpose_terms" class="TunableVariant" default="dont_repurpose" display="Repurpose Terms" muid="A5112A9718C6F9BA" description="If specified, then Sims, should any be available, are conformed to&#xA;the filter terms. Unimportant Sims are defined by the&#xA;UNIMPORTANT_FILTER global tunable or a specified filter.&#xA;&#xA;The purpose of this is to conserve SimInfos when it is not necessary&#xA;to generate brand new Sims. For example, an unimportant Sim might&#xA;become the bartender at a venue." Deprecated="False" filter="0" group="General">
            <Tunable name="dont_repurpose" class="TunableExistance" display="Dont Repurpose" muid="44AD5FA3ED0C4D52" />
            <Tunable name="use_constrained_sims" class="TunableExistance" display="Use Constrained Sims" muid="ED120451A8A9128A" />
            <Tunable type="sim_filter" name="use_specific_sims" class="TunableReference" display="Use Specific Sims" muid="C52053DC0F290600" description="Use a specific filter to determine unimportant Sims." allow_none="False" Deprecated="False" filter="0" group="General" />
            <Tunable name="use_unimportant_sims" class="TunableExistance" display="Use Unimportant Sims" muid="89FFA08B7CE5716B" />
        </TunableVariant>

        <TunableVariant type="None" name="specify_cas_randomization_mode" class="OptionalTunable" default="USE_CLIENT_DEFAULT" display="Specify Cas Randomization Mode" muid="334F1CFDE076415E" description="If enabled, the CAS sim randomization mode to use for this filter.&#xA;&#xA;If disabled, the default client randomization mode logic will be used." Deprecated="False" filter="0" group="General">
            <TunableEnum type="RandomizationMode" name="enabled" class="TunableEnumEntry" default="SELECTIVE_RANDOMIZATION" display="Enabled" muid="4111C4CA9C7081BF" static_entries="cas-cas_enums.RandomizationMode" Deprecated="False" filter="0" group="General" />
            <Tunable name="USE_CLIENT_DEFAULT" class="TunableExistance" display="Use Client Default" muid="2DC72DD5585512D4" />
        </TunableVariant>

        <Tunable type="bool" name="use_weighted_random" class="Tunable" default="False" display="Use Weighted Random" muid="C4CBA921C40DFD54" description="If checked will do a weighted random of top results rather than&#xA;just choosing the best ones.&#xA;&#xA;Note: Before doing weighted random, Sim filter caps top results by&#xA;TOP_NUMBER_OF_SIMS_TO_LOOK_AT. So do not completely rely on this &#xA;checkbox if you are looking for weighted randomization of all results." Deprecated="False" filter="0" group="General" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="2E63C8B6E3CE8B7D" />
            <Action type="kRemove" old_muid="CCE21028EA5EDF0E" />
            <Action type="kRemove" old_muid="E7404E4D30414301" />
            <Action type="kRemove" old_muid="CA5561E162147980" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="B9F430D4C74E079B" />
            <Action type="kRemove" old_muid="E328117AE4F7DD6F" />
            <Action type="kRemove" old_muid="4BF734D6C580472B" />
            <Action type="kRemove" old_muid="1F8C32CC189BA2FC" />
        </ActionList>
    </VersionHistory>
</TuningRoot>